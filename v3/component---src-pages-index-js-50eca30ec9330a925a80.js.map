{"version":3,"sources":["webpack:///component---src-pages-index-js-50eca30ec9330a925a80.js","webpack:///./~/axe-core/axe.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/Browser.js","webpack:///./src/pages/index.js"],"names":["webpackJsonp","146","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","axeFunction","window","SupportError","error","this","name","cause","message","ruleId","stack","Error","getDefaultConfiguration","audit","config","axe","utils","clone","commons","reporter","rules","checks","data","Object","assign","unpackToObject","collection","method","i","l","length","Audit","brand","application","tagExclude","defaultConfig","_init","getHelpUrl","_ref","version","constants","helpUrlBase","substring","lastIndexOf","CheckResult","check","id","relatedNodes","result","createExecutionContext","spec","Function","Check","configure","pushUniqueFrame","frame","isHidden","fr","findBy","push","node","include","exclude","pushUniqueFrameSelector","context","type","selectorArray","frames","document","querySelectorAll","shift","frameloop","j","l2","normalizeContext","_typeof","NodeList","Node","hasOwnProperty","parseSelectorArray","item","nodeList","Array","from","concat","map","getNodeFromTree","flatTree","documentElement","filter","r","validateContext","env","respondable","isInFrame","forEach","getRootNode","selectors","localDocument","reduce","Element","ownerDocument","Document","Context","_this","initiator","page","getFlattenedTree","select","isNodeInContext","actualNode","err","isArray","sort","nodeSorter","RuleResult","rule","NA","pageLevel","impact","nodes","Rule","parentAudit","_audit","selector","excludeHidden","enabled","any","all","none","tags","matches","findAfterChecks","getAllChecks","c","after","Boolean","findCheckResults","checkID","checkResults","nodeResult","checkResult","filterChecks","filtered","sanitizeNodes","checkTypes","detail","a","b","apply","cleanupPlugins","resolve","reject","log","q","queue","cleanupErrors","keys","plugins","key","defer","res","rej","cleanup","flattenedTree","body","sendCommandToFrame","command","then","results","catch","configureChecksRulesAndBranding","reporters","addCheck","modifiedRules","addRule","disableOtherRules","includes","branding","setBranding","_constructHelpUrls","runCommand","keepalive","callback","options","runRules","commands","Plugin","_run","run","_collect","collect","_registry","registerCommand","resetConfiguration","resetRulesAndChecks","_tree","undefined","_selectorData","getSelectorData","e","performanceTimer","auditStart","iframes","collectResultsFromFrames","scrollState","restoreScroll","getScrollState","setScrollState","auditEnd","mergeResults","publishMetaData","finalizeRuleResult","isContext","potential","normalizeRunParams","typeErr","TypeError","noop","normalizeRelatedNodes","checkRes","relatedNode","html","source","elementRef","fromFrame","element","target","xpath","anyAllNone","obj","functor","out","val","copyToGroup","resultObject","subResult","group","resultCopy","resultGroups","areStylesSet","el","styles","stopAt","styl","getComputedStyle","set","att","getPropertyValue","property","value","nodeName","toUpperCase","parentNode","getSelector","parameter","params","frameElement","truncate","str","maxLength","index","indexOf","getSource","outerHTML","XMLSerializer","serializeToString","DqElement","_fromFrame","absolutePaths","_options","toRoot","_element","virtualDOMfromNode","shadowId","children","getSlotChildren","retVal","firstChild","nextSibling","isMostlyNumbers","arguments","match","splitString","splitIndex","uriParser","url","original","protocol","domain","port","path","query","hash","_splitString","_splitString2","_slicedToArray","_splitString3","_splitString4","_url$split","split","_url$split2","_splitString5","_splitString6","substr","_splitString7","_splitString8","_splitString9","_splitString10","getAttributeNameValue","at","atnv","friendly","getFriendlyUriEnd","getAttribute","encodeURI","escapeSelector","countSort","count","filterAttributes","ignoredAttributes","MAXATTRIBUTELENGTH","uncommonClasses","selectorData","classData","classes","tagData","classList","cl","ind","species","getNthChildString","elm","siblings","hasMatchingSiblings","find","sibling","matchesSelector","nthChild","getElmId","doc","getBaseSelector","isXHTML","localName","toLowerCase","uncommonAttributes","attData","attributes","getThreeLeastCommonFeatures","features","clss","atts","slice","some","feat","generateSelector","_options$toRoot","similar","parentElement","nodeType","getXPathArray","previousSibling","xpathToString","xpathArray","injectStyle","style","styleSheet","appendChild","createTextNode","cssText","head","getElementsByTagName","createElement","pushFrame","resultSet","frameSelector","frameXpath","getXpath","frameSpec","spliceNodes","to","sorterResult","t","firstFromFrame","splice","normalizeResult","getIncompleteReason","checkData","messages","getDefaultMsg","incomplete","default","helpers","incompleteFallbackMessage","missingData","msg","reason","extender","checksData","shouldBeTrue","sourceData","pass","fail","extendMetaData","matchesTag","exp","tag","matchesClasses","className","regexp","matchesAttributes","nodeAtt","test","matchesId","matchesPseudos","pseudos","pseudo","matchExpressions","expressions","convertAttributes","attributeKey","replace","reUnescape","attributeValue","operator","RegExp","escapeRegExp","convertClasses","convertPseudos","p","cssParser","parse","convertExpressions","createLocalVariables","anyLevel","thisLevel","parentShadowId","reverse","matchTags","runOnly","matching","defaultExclude","every","getScroll","visibleOverflowY","visibleOverflowX","scrollHeight","clientHeight","scrollWidth","clientWidth","top","scrollTop","left","scrollLeft","setScroll","scroll","getElmScrollRecursive","root","scrolls","getDeepest","contains","candidate","pushNode","temp","reduceIncludes","Symbol","iterator","constructor","prototype","toString","create","failureSummaries","metadata","getRule","prop","normalizeOptions","_selectCache","ruleShouldRun","markEnd","markStart","mark","measure","debug","errResult","CANTTELL","description","ruleResult","values","only","unmatchedTags","join","previous","metaData","helpUrl","checkOptions","checkHelper","evaluate","call","isAsync","setTimeout","gather","elements","runChecks","self","checkQueue","option","getCheckOption","timeElapsed","resolveNode","rejectNode","hasResults","afterChecks","ruleID","beforeResults","afterResults","definitions","priority","resultGroupMap","freeze","definition","defineProperty","enumerable","configurable","writable","console","getRules","matchingRules","ruleData","matchingRule","rd","help","_load","subscribe","respond","done","that","add","impl","registerPlugin","plugin","defaultReporter","getReporter","addReporter","cb","isDefault","reset","_runRules","args","start","Promise","_resolve","_reject","rawResults","end","failureSummary","nodeData","failingChecks","sum","failureMessage","resultKeys","processAggregate","aggregateResult","timestamp","Date","toISOString","location","href","resultTypes","violations","passes","inapplicable","aggregate","initial","sorting","pop","_axe$constants","CANTTELL_PRIO","FAIL_PRIO","checkMap","PASS_PRIO","aggregateChecks","nodeResOriginal","priorities","Math","max","min","impacts","aggregateNodeResults","nodeResults","resultList","groupName","impactGroup","FAIL_GROUP","CANTTELL_GROUP","impactList","failure","NA_GROUP","async","_data","toArray","parameters","win","contentWindow","timeout","clearTimeout","frameWaitTime","otherNode","containsShadowChild","child","compareDocumentPosition","CssSelectorParser","attrEqualityMods","ruleNestingOperators","substitutesEnabled","isIdentStart","isIdent","isHex","ParseContext","pos","chr","getIdent","getStr","skipWhitespace","quote","escapeTable","esc","hex","charAt","String","fromCharCode","parseInt","identSpecialChars","parseSelector","parseSingleSelector","parseRule","currentRule","op","nestingOperator","tagName","classNames","attr","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","trim","attrs","pseudoName","registerSelectorPseudos","len","unregisterSelectorPseudos","registerNumericPseudos","unregisterNumericPseudos","registerNestingOperators","unregisterNestingOperators","registerAttrEqualityMods","mod","unregisterAttrEqualityMods","enableSubstitutes","disableSubstitutes","!","\"","#","$","%","&","'","(",")","*","+",",",".","/",";","<","=",">","?","@","[","\\","]","^","`","{","|","}","~","strReplacementsRev","\n","\r","\t","\f","\u000b","n","f","escapeIdentifier","s","charCode","charCodeAt","extraCharCode","escapeStr","replacement","render","_renderEntity","entity","currentEntity","parts","cn","parser","toJSON","unshift","getMethod","elProto","candidates","defaultView","codeUnit","string","firstCodeUnit","array","reduceShadowDOM","replacements","realArray","isShadowRoot","random","shadowRoot","childNodes","getDistributedNodes","assignedNodes","vNode","found","object","ruleCheckOption","checkOption","opts","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","uri","currentDomain","_options$maxLength","_uriParser","pathEnd","lastDotIndex","domTree","currentLevel","_loop","current","host","comp","recursed","parent","assignedSlot","possibleShadowRoots","frameResults","frameResult","now","performance","originalTime","lastRecordedTime","logMeasures","markName","measureName","startMark","endMark","req","duration","getEntriesByType","measures","output","nextKey","predicate","list","thisArg","pollyfillElementsFromPoint","elementsFromPoint","msElementsFromPoint","usePointer","pointerEvents","cssProp","cssDisableVal","innerHTML","x","y","d","previousPointerEvents","elementFromPoint","getPropertyPriority","setProperty","removeChild","addEventListener","searchElement","O","k","currentElement","fun","toStr","isCallable","fn","toInteger","number","Number","isNaN","isFinite","floor","abs","maxSafeInteger","pow","toLength","arrayLike","C","items","T","mapFn","kValue","A","search","rulesData","shouldBeFalse","newExp","combinator","recurse","childOnly","childAny","combined","added","rest","querySelectorAllFilter","funcGuard","createResolve","tasks","remaining","completeQueue","complete","abort","failed","started","task","defaultFail","_getSource","src","verify","postedMessage","uuid","_respondable","messageSource","_source","post","topic","_keepalive","postMessage","JSON","stringify","v1","createResponder","publish","subscriber","subscribers","responder","buildErrorObject","errorName","errorTypes","ErrConstructor","parseMessage","dataString","ex","ruleOptions","windowScroll","pageXOffset","pageYOffset","curried","reducedIncludes","ELEMENT_NODE","thing","uniqueArray","arr1","arr2","elem","_global","buf","offset","ii","oct","_hexToByte","unparse","bth","_byteToHex","clockseq","_clockseq","msecs","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","v4","BufferClass","rnds","rng","_rng","_crypto","crypto","msCrypto","getRandomValues","_rnds8","Uint8Array","_rnds","Buffer","_seedBytes","accesskeys","area-alt","aria-allowed-attr","aria-dpub-role-fallback","aria-hidden-body","aria-required-attr","aria-required-children","aria-required-parent","aria-roles","aria-valid-attr-value","aria-valid-attr","audio-caption","blink","button-name","bypass","checkboxgroup","color-contrast","definition-list","dlitem","document-title","duplicate-id","empty-heading","focus-order-semantics","frame-tested","frame-title-unique","frame-title","heading-order","hidden-content","html-has-lang","html-lang-valid","image-alt","image-redundant-alt","input-image-alt","label-title-only","label","landmark-banner-is-top-level","landmark-contentinfo-is-top-level","landmark-main-is-top-level","landmark-no-duplicate-banner","landmark-no-duplicate-contentinfo","landmark-one-main","layout-table","link-in-text-block","link-name","listitem","marquee","meta-refresh","meta-viewport-large","meta-viewport","object-alt","p-as-heading","page-has-heading-one","radiogroup","region","scope-attr-valid","server-side-image-map","skip-link","tabindex","table-duplicate-name","table-fake-caption","td-has-header","td-headers-attr","th-has-data-cells","valid-lang","video-caption","video-description","it","non-empty-alt","non-empty-title","aria-label","aria-labelledby","i1","l1","implicit-role-fallback","invalidrole","abstractrole","aria-errormessage","caption","is-on-screen","non-empty-if-present","non-empty-value","button-has-visible-text","role-presentation","role-none","focusable-no-name","internal-link-present","header-present","landmark","group-labelledby","fieldset","code","failureCode","contrastRatio","fgColor","bgColor","fontSize","fontWeight","expectedContrastRatio","bgImage","bgGradient","imgNode","bgOverlap","fgAlpha","elmPartiallyObscured","elmPartiallyObscuring","outsideViewport","equalRatio","structured-dlitems","only-dlitems","doc-has-title","has-visible-text","has-widget-role","valid-scrollable-semantics","unique-frame-title","has-lang","has-alt","duplicate-img-label","title-only","implicit-label","explicit-label","help-same-as-label","multiple-label","landmark-is-top-level","role","page-no-duplicate-banner","page-no-duplicate-contentinfo","page-has-main","page-no-duplicate-main","has-th","has-caption","has-summary","bgContrast","only-listitems","html5-scope","scope-value","exists","same-caption-summary","caption-faked","virtualNode","aria","implicitRole","allowed","allowedAttr","hasAttributes","querySelector","dom","findUpVirtual","disabled","nodeParentLabel","relevantNode","relevantVirtualNode","htmlFor","getElementById","_doc","text","visibleVirtual","range","createRange","sanitize","nodeValue","selectNodeContents","rects","getClientRects","visuallyOverlaps","noScroll","explicitRoles","hasAttribute","isValidRole","insertedIntoFocusOrder","isViolation","title","nativeScopeFilter","table","isDataTable","textContent","isVisible","isInTextBlock","scaleMinimum","lowerBound","nodeText","isSentence","siblingsAfter","margins","weight","italic","size","tableArray","getRoleType","attrName","invalid","validateAttr","validateAttrValue","idref","tokenList","hasAttr","roleType","missing","required","requiredAttr","owns","virtualTree","ariaOwned","implicit","implicitNodes","ariaOwns","missingRequiredChildren","childRoles","ownedElements","idrefs","textboxIndex","textTypeInputs","listboxIndex","expanded","requiredOwned","one","impliedNative","getMissingContext","requiredContext","includeElement","getAriaOwners","owners","o","missingParents","skipAttrs","validScrollableTagName","VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS","validScrollableRole","VALID_ROLES_FOR_SCROLLABLE_REGIONS","validScrollableSemantics","ARTICLE","ASIDE","NAV","SECTION","banner","complementary","contentinfo","form","main","navigation","bgNodes","color","getBackgroundColor","getForegroundColor","nodeStyle","parseFloat","bold","cr","hasValidContrastRatio","truncatedResult","incompleteData","get","toHexString","toFixed","clear","isValid","getContrast","color1","color2","c1lum","getRelativeLuminance","c2lum","isBlock","display","blockLike","_axe$commons","parentBlock","getComposedParent","elementIsDistinct","nodeColor","parentColor","contrast","getUnrelatedElements","checkFieldset","firstNode","firstElementChild","accessibleText","otherElements","checkARIAGroup","hasLabelledByText","ariaLabel","spliceCurrentNode","runCheck","matchingNodes","seen","hasBeenSeen","m","prev","curr","labelNode","tabIndex","inFocusOrder","isFocusable","accessibleTextVirtual","landmarks","getRolesByType","matchingElms","elmUsedAnywhere","elms","images","img","labelText","labelVirtual","ref","labels","getBaseLang","lang","langs","validLangs","langAttr","langVal","baselangVal","_ref2","bad","permitted","hasNonEmptyTextNode","_ref3","_ref4","hasDt","hasDd","tracks","_ref5","_ref6","_Object$assign","timer","content","parsedParams","minimum","ariaHeadingLevel","headingLevel","prevLevel","links","vLink","getTextContainer","nextNode","outerText","innerText","normalizeFontWeight","getStyleValues","isItalic","isHeaderStyle","styleA","styleB","margin","currentIndex","prevSibling","currStyle","nextStyle","prevStyle","blockquote","getSkiplink","firstLink","getElementByReference","isSkipLink","skipLink","isLandmark","explictRole","landmarkRoles","implicitLandmarks","implicitSelector","findRegionlessElms","hasContent","_ref7","_axe$commons2","regionlessNodes","titles","getIdRefs","foundNode","uniqueIds","nn","isOffscreen","toGrid","firstRow","rows","summary","row","cell","badCells","rowIndex","rowLength","cellIndex","cellLength","cells","isHTML5","validVals","tableUtils","getAllCells","isDataCell","hasHeaders","getHeaders","header","ids","isSelf","notOfTable","headers","reffedHeaders","tableGrid","hasCell","getCellPosition","isColumnHeader","traverse","isRowHeader","whitelist","hasContentVirtual","parentStyle","_getFonts","font","ancestorNode","hasBorder","edge","borderClr","Color","parseRgbString","alpha","hasStyle","tDec","elmHasImage","graphicNodes","bgImageStyle","hasBgImage","hasGradient","getBgColor","elmStyle","opacity","contentOverlapping","targetElement","bgNode","targetRect","obscuringElements","shadowElementsFromPoint","calculateObscuringAlpha","elmIndex","elmStack","originalElm","totalAlpha","bgElm","bgElmStyle","obscured","visuallyContains","includeMissingElements","elementMap","TD","TH","INPUT","tagArray","candidateIndex","ancestorMatch","findUp","overlaps","getBoundingClientRect","sortPageBackground","bodyIndex","hasChildTextNodes","hiddenTextElms","_ref10","focusDisabled","walkDomNode","getBlockParent","noParentScrolled","isClipped","clip","findLabel","findElmsInContext","isButton","_ref11","isInput","_ref12","shouldCheckSubtree","_ref13","shouldNeverCheckSubtree","_ref14","formValueText","_ref15","inputTypes","returnText","selected","checkDescendant","_ref16","isEmbeddedControl","shouldCheckAlt","_ref17","nonEmptyText","lookupTable","aria-activedescendant","aria-atomic","aria-autocomplete","aria-busy","aria-checked","aria-colcount","aria-colindex","aria-colspan","aria-controls","aria-current","aria-describedby","aria-disabled","aria-dropeffect","aria-expanded","aria-flowto","aria-grabbed","aria-haspopup","aria-hidden","aria-invalid","aria-keyshortcuts","aria-level","aria-live","aria-modal","aria-multiline","aria-multiselectable","aria-orientation","aria-owns","aria-placeholder","aria-posinset","aria-pressed","aria-readonly","aria-relevant","aria-required","aria-rowcount","aria-rowindex","aria-rowspan","aria-selected","aria-setsize","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext","globalAttributes","alert","owned","nameFrom","alertdialog","article","button","checkbox","columnheader","combobox","composite","dialog","directory","doc-abstract","doc-acknowledgments","doc-afterword","doc-appendix","doc-backlink","doc-biblioentry","doc-bibliography","doc-biblioref","doc-chapter","namefrom","doc-colophon","doc-conclusion","doc-cover","doc-credit","doc-credits","doc-dedication","doc-endnote","doc-endnotes","doc-epigraph","doc-epilogue","doc-errata","doc-example","doc-footnote","doc-foreword","doc-glossary","doc-glossref","doc-index","doc-introduction","doc-noteref","doc-notice","doc-pagebreak","doc-pagelist","doc-part","doc-preface","doc-prologue","doc-pullquote","doc-qna","doc-subtitle","doc-tip","doc-toc","feed","grid","gridcell","heading","input","link","listbox","math","menu","menubar","menuitem","menuitemcheckbox","menuitemradio","note","presentation","progressbar","radio","roletype","rowgroup","rowheader","scrollbar","searchbox","section","sectionhead","separator","slider","spinbutton","status","structure","switch","tab","tablist","tabpanel","term","textbox","toolbar","tooltip","tree","treegrid","treeitem","widget","EdgeFormDefaults","roles","attrInfo","token","_ref8","getRolesWithNameFromContents","isValidImplicitRole","validForNodeType","implicitNodeTypeSelector","sortRolesByOptimalAriaContext","ariaAttributes","getScore","allowedAriaAttributes","score","attribute","scored","sorted","scoredRoleA","scoredRoleB","sortedRole","lookup","availableImplicitRoles","nodeAttributes","red","green","blue","redString","round","greenString","blueString","rgbRegex","rgbaRegex","colorString","rSRGB","gSRGB","bSRGB","g","flattenColors","bL","fL","bg","fg","isBold","isSmallFont","ceil","getCoords","rect","innerWidth","innerHeight","width","height","getRectStack","boundingCoords","boundingStack","filteredArr","coords","filteredRectStack","rectStack","isSame","rectList","rectA","rectB","elementIndex","getBackgroundStack","reduceToElementsBelowFloating","bgElms","alignToTop","scrollIntoView","bgColors","colors","isOpaque","targetNode","currentNode","floatingPositions","finalElements","targetFound","position","_ref9","_ref9$elm","escapedValue","closest","fragment","decodeURIComponent","getElementsByName","getElementCoordinates","scrollOffset","getScrollOffset","xOffset","yOffset","right","bottom","docElement","getViewportSize","noRecursion","isVisualContent","isNativelyFocusable","doctype","publicId","systemId","virtualParent","parentText","linkText","inBrBlock","currNode","overflow","float","isNode","leftBoundary","dir","screenReader","visualRoles","nodeX","nodeY","shadowStack","rectBound","parentRect","parentTop","parentLeft","parentScrollArea","HTMLBodyElement","HTMLHtmlElement","tableElm","rowHeaders","colHeaders","getScope","scope","headerRow","headerCol","col","tHead","tFoot","childIndex","childLength","offsetWidth","offsetHeight","sampleRow","colSpan","isHeader","columnIndex","rowSpan","traverseTable","startPos","defaultButtonValues","submit","phrasingElements","inLabelledByContext","getInnerText","inControlContext","accessibleNameComputation","getLayoutTableText","checkNative","labelElement","checkARIA","encounteredNodes","vLabel","visible","noRecursing","55","webpackPolyfill","deprecate","paths","154","_interopRequireDefault","__esModule","_react","_react2","Browser","315","161","pageQuery","_Browser","_Browser2","IndexPage","describe","expect","toBe"],"mappings":"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AA,MAEAy3C,eACAx3C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA23C,gBACA13C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA43C,kBACA33C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA63C,aACA53C,KAAA,MACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA83C,cACA73C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA+3C,eACA93C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAg4C,kBACA/3C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAi4C,eACAh4C,KAAA,WACA0R,YACAysB,SAAA,8DAEAkY,MAAA,KACAoB,UAAA,UACA13C,SAAA,iBAEAk4C,gBACAj4C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,OAAA,eACAoB,UAAA,UACA13C,QAAA,MAEAm4C,gBACAl4C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAo4C,gBACAn4C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAq4C,cACAp4C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAs4C,eACAr4C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAu4C,gBACAt4C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAw4C,gBACAv4C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAy4C,gBACAx4C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,OAAA,qBACAoB,UAAA,UACA13C,QAAA,MAEA04C,gBACAz4C,KAAA,OACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,qBACA13C,QAAA,MAEA24C,aACA14C,KAAA,aACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA44C,oBACA34C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA64C,eACA54C,KAAA,OACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,qBACA13C,QAAA,MAEA84C,cACA74C,KAAA,OACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEA+4C,iBACA94C,KAAA,YACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAg5C,gBACA/4C,KAAA,aACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAi5C,YACAh5C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAk5C,eACAj5C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAm5C,gBACAl5C,KAAA,WACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAo5C,iBACAn5C,KAAA,OACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAq5C,WACAp5C,KAAA,UACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAs5C,gBACAr5C,KAAA,cACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAu5C,WACAt5C,KAAA,OACA0R,YACAysB,SAAA,kBAEAkY,MAAA,KACAoB,UAAA,UACA13C,QAAA,MAEAw5C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","file":"component---src-pages-index-js-50eca30ec9330a925a80.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {/*! aXe v3.0.0\n\t * Copyright (c) 2018 Deque Systems, Inc.\n\t *\n\t * Your use of this Source Code Form is subject to the terms of the Mozilla Public\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t *\n\t * This entire copyright notice must appear in every copy of this file you\n\t * distribute or in any file that contains substantial portions of this source\n\t * code.\n\t */\n\t(function axeFunction(window) {\n\t  var global = window;\n\t  var document = window.document;\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  var axe = axe || {};\n\t  axe.version = '3.0.0';\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      'use strict';\n\t      return axe;\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports && typeof axeFunction.toString === 'function') {\n\t    axe.source = '(' + axeFunction.toString() + ')(typeof window === \"object\" ? window : this);';\n\t    module.exports = axe;\n\t  }\n\t  if (typeof window.getComputedStyle === 'function') {\n\t    window.axe = axe;\n\t  }\n\t  var commons;\n\t  function SupportError(error) {\n\t    this.name = 'SupportError';\n\t    this.cause = error.cause;\n\t    this.message = '`' + error.cause + '` - feature unsupported in your environment.';\n\t    if (error.ruleId) {\n\t      this.ruleId = error.ruleId;\n\t      this.message += ' Skipping ' + this.ruleId + ' rule.';\n\t    }\n\t    this.stack = new Error().stack;\n\t  }\n\t  SupportError.prototype = Object.create(Error.prototype);\n\t  SupportError.prototype.constructor = SupportError;\n\t  'use strict';\n\t  var utils = axe.utils = {};\n\t  'use strict';\n\t  var helpers = {};\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  function getDefaultConfiguration(audit) {\n\t    'use strict';\n\t    var config;\n\t    if (audit) {\n\t      config = axe.utils.clone(audit);\n\t      config.commons = audit.commons;\n\t    } else {\n\t      config = {};\n\t    }\n\t    config.reporter = config.reporter || null;\n\t    config.rules = config.rules || [];\n\t    config.checks = config.checks || [];\n\t    config.data = Object.assign({\n\t      checks: {},\n\t      rules: {}\n\t    }, config.data);\n\t    return config;\n\t  }\n\t  function unpackToObject(collection, audit, method) {\n\t    'use strict';\n\t    var i, l;\n\t    for (i = 0, l = collection.length; i < l; i++) {\n\t      audit[method](collection[i]);\n\t    }\n\t  }\n\t  function Audit(audit) {\n\t    this.brand = 'axe';\n\t    this.application = 'axeAPI';\n\t    this.tagExclude = [ 'experimental' ];\n\t    this.defaultConfig = audit;\n\t    this._init();\n\t  }\n\t  Audit.prototype._init = function() {\n\t    var audit = getDefaultConfiguration(this.defaultConfig);\n\t    axe.commons = commons = audit.commons;\n\t    this.reporter = audit.reporter;\n\t    this.commands = {};\n\t    this.rules = [];\n\t    this.checks = {};\n\t    unpackToObject(audit.rules, this, 'addRule');\n\t    unpackToObject(audit.checks, this, 'addCheck');\n\t    this.data = {};\n\t    this.data.checks = audit.data && audit.data.checks || {};\n\t    this.data.rules = audit.data && audit.data.rules || {};\n\t    this.data.failureSummaries = audit.data && audit.data.failureSummaries || {};\n\t    this.data.incompleteFallbackMessage = audit.data && audit.data.incompleteFallbackMessage || '';\n\t    this._constructHelpUrls();\n\t  };\n\t  Audit.prototype.registerCommand = function(command) {\n\t    'use strict';\n\t    this.commands[command.id] = command.callback;\n\t  };\n\t  Audit.prototype.addRule = function(spec) {\n\t    'use strict';\n\t    if (spec.metadata) {\n\t      this.data.rules[spec.id] = spec.metadata;\n\t    }\n\t    var rule = this.getRule(spec.id);\n\t    if (rule) {\n\t      rule.configure(spec);\n\t    } else {\n\t      this.rules.push(new Rule(spec, this));\n\t    }\n\t  };\n\t  Audit.prototype.addCheck = function(spec) {\n\t    'use strict';\n\t    var metadata = spec.metadata;\n\t    if ((typeof metadata === 'undefined' ? 'undefined' : _typeof(metadata)) === 'object') {\n\t      this.data.checks[spec.id] = metadata;\n\t      if (_typeof(metadata.messages) === 'object') {\n\t        Object.keys(metadata.messages).filter(function(prop) {\n\t          return metadata.messages.hasOwnProperty(prop) && typeof metadata.messages[prop] === 'string';\n\t        }).forEach(function(prop) {\n\t          if (metadata.messages[prop].indexOf('function') === 0) {\n\t            metadata.messages[prop] = new Function('return ' + metadata.messages[prop] + ';')();\n\t          }\n\t        });\n\t      }\n\t    }\n\t    if (this.checks[spec.id]) {\n\t      this.checks[spec.id].configure(spec);\n\t    } else {\n\t      this.checks[spec.id] = new Check(spec);\n\t    }\n\t  };\n\t  Audit.prototype.run = function(context, options, resolve, reject) {\n\t    'use strict';\n\t    this.normalizeOptions(options);\n\t    axe._selectCache = [];\n\t    var q = axe.utils.queue();\n\t    this.rules.forEach(function(rule) {\n\t      if (axe.utils.ruleShouldRun(rule, context, options)) {\n\t        if (options.performanceTimer) {\n\t          var markEnd = 'mark_rule_end_' + rule.id;\n\t          var markStart = 'mark_rule_start_' + rule.id;\n\t          axe.utils.performanceTimer.mark(markStart);\n\t        }\n\t        q.defer(function(res, rej) {\n\t          rule.run(context, options, function(out) {\n\t            if (options.performanceTimer) {\n\t              axe.utils.performanceTimer.mark(markEnd);\n\t              axe.utils.performanceTimer.measure('rule_' + rule.id, markStart, markEnd);\n\t            }\n\t            res(out);\n\t          }, function(err) {\n\t            if (!options.debug) {\n\t              var errResult = Object.assign(new RuleResult(rule), {\n\t                result: axe.constants.CANTTELL,\n\t                description: 'An error occured while running this rule',\n\t                message: err.message,\n\t                stack: err.stack,\n\t                error: err\n\t              });\n\t              res(errResult);\n\t            } else {\n\t              rej(err);\n\t            }\n\t          });\n\t        });\n\t      }\n\t    });\n\t    q.then(function(results) {\n\t      axe._selectCache = undefined;\n\t      resolve(results.filter(function(result) {\n\t        return !!result;\n\t      }));\n\t    }).catch(reject);\n\t  };\n\t  Audit.prototype.after = function(results, options) {\n\t    'use strict';\n\t    var rules = this.rules;\n\t    return results.map(function(ruleResult) {\n\t      var rule = axe.utils.findBy(rules, 'id', ruleResult.id);\n\t      if (!rule) {\n\t        throw new Error('Result for unknown rule. You may be running mismatch aXe-core versions');\n\t      }\n\t      return rule.after(ruleResult, options);\n\t    });\n\t  };\n\t  Audit.prototype.getRule = function(ruleId) {\n\t    return this.rules.find(function(rule) {\n\t      return rule.id === ruleId;\n\t    });\n\t  };\n\t  Audit.prototype.normalizeOptions = function(options) {\n\t    'use strict';\n\t    var audit = this;\n\t    if (_typeof(options.runOnly) === 'object') {\n\t      if (Array.isArray(options.runOnly)) {\n\t        options.runOnly = {\n\t          type: 'tag',\n\t          values: options.runOnly\n\t        };\n\t      }\n\t      var only = options.runOnly;\n\t      if (only.value && !only.values) {\n\t        only.values = only.value;\n\t        delete only.value;\n\t      }\n\t      if (!Array.isArray(only.values) || only.values.length === 0) {\n\t        throw new Error('runOnly.values must be a non-empty array');\n\t      }\n\t      if ([ 'rule', 'rules' ].includes(only.type)) {\n\t        only.type = 'rule';\n\t        only.values.forEach(function(ruleId) {\n\t          if (!audit.getRule(ruleId)) {\n\t            throw new Error('unknown rule `' + ruleId + '` in options.runOnly');\n\t          }\n\t        });\n\t      } else if ([ 'tag', 'tags', undefined ].includes(only.type)) {\n\t        only.type = 'tag';\n\t        var unmatchedTags = audit.rules.reduce(function(unmatchedTags, rule) {\n\t          return unmatchedTags.length ? unmatchedTags.filter(function(tag) {\n\t            return !rule.tags.includes(tag);\n\t          }) : unmatchedTags;\n\t        }, only.values);\n\t        if (unmatchedTags.length !== 0) {\n\t          throw new Error('Could not find tags `' + unmatchedTags.join('`, `') + '`');\n\t        }\n\t      } else {\n\t        throw new Error('Unknown runOnly type \\'' + only.type + '\\'');\n\t      }\n\t    }\n\t    if (_typeof(options.rules) === 'object') {\n\t      Object.keys(options.rules).forEach(function(ruleId) {\n\t        if (!audit.getRule(ruleId)) {\n\t          throw new Error('unknown rule `' + ruleId + '` in options.rules');\n\t        }\n\t      });\n\t    }\n\t    return options;\n\t  };\n\t  Audit.prototype.setBranding = function(branding) {\n\t    'use strict';\n\t    var previous = {\n\t      brand: this.brand,\n\t      application: this.application\n\t    };\n\t    if (branding && branding.hasOwnProperty('brand') && branding.brand && typeof branding.brand === 'string') {\n\t      this.brand = branding.brand;\n\t    }\n\t    if (branding && branding.hasOwnProperty('application') && branding.application && typeof branding.application === 'string') {\n\t      this.application = branding.application;\n\t    }\n\t    this._constructHelpUrls(previous);\n\t  };\n\t  function getHelpUrl(_ref, ruleId, version) {\n\t    var brand = _ref.brand, application = _ref.application;\n\t    return axe.constants.helpUrlBase + brand + '/' + (version || axe.version.substring(0, axe.version.lastIndexOf('.'))) + '/' + ruleId + '?application=' + application;\n\t  }\n\t  Audit.prototype._constructHelpUrls = function() {\n\t    var _this = this;\n\t    var previous = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t    var version = (axe.version.match(/^[1-9][0-9]*\\.[0-9]+/) || [ 'x.y' ])[0];\n\t    this.rules.forEach(function(rule) {\n\t      if (!_this.data.rules[rule.id]) {\n\t        _this.data.rules[rule.id] = {};\n\t      }\n\t      var metaData = _this.data.rules[rule.id];\n\t      if (typeof metaData.helpUrl !== 'string' || previous && metaData.helpUrl === getHelpUrl(previous, rule.id, version)) {\n\t        metaData.helpUrl = getHelpUrl(_this, rule.id, version);\n\t      }\n\t    });\n\t  };\n\t  Audit.prototype.resetRulesAndChecks = function() {\n\t    'use strict';\n\t    this._init();\n\t  };\n\t  'use strict';\n\t  function CheckResult(check) {\n\t    'use strict';\n\t    this.id = check.id;\n\t    this.data = null;\n\t    this.relatedNodes = [];\n\t    this.result = null;\n\t  }\n\t  'use strict';\n\t  function createExecutionContext(spec) {\n\t    'use strict';\n\t    if (typeof spec === 'string') {\n\t      return new Function('return ' + spec + ';')();\n\t    }\n\t    return spec;\n\t  }\n\t  function Check(spec) {\n\t    if (spec) {\n\t      this.id = spec.id;\n\t      this.configure(spec);\n\t    }\n\t  }\n\t  Check.prototype.enabled = true;\n\t  Check.prototype.run = function(node, options, resolve, reject) {\n\t    'use strict';\n\t    options = options || {};\n\t    var enabled = options.hasOwnProperty('enabled') ? options.enabled : this.enabled, checkOptions = options.options || this.options;\n\t    if (enabled) {\n\t      var checkResult = new CheckResult(this);\n\t      var checkHelper = axe.utils.checkHelper(checkResult, options, resolve, reject);\n\t      var result;\n\t      try {\n\t        result = this.evaluate.call(checkHelper, node.actualNode, checkOptions, node);\n\t      } catch (e) {\n\t        reject(e);\n\t        return;\n\t      }\n\t      if (!checkHelper.isAsync) {\n\t        checkResult.result = result;\n\t        setTimeout(function() {\n\t          resolve(checkResult);\n\t        }, 0);\n\t      }\n\t    } else {\n\t      resolve(null);\n\t    }\n\t  };\n\t  Check.prototype.configure = function(spec) {\n\t    var _this = this;\n\t    [ 'options', 'enabled' ].filter(function(prop) {\n\t      return spec.hasOwnProperty(prop);\n\t    }).forEach(function(prop) {\n\t      return _this[prop] = spec[prop];\n\t    });\n\t    [ 'evaluate', 'after' ].filter(function(prop) {\n\t      return spec.hasOwnProperty(prop);\n\t    }).forEach(function(prop) {\n\t      return _this[prop] = createExecutionContext(spec[prop]);\n\t    });\n\t  };\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  function pushUniqueFrame(collection, frame) {\n\t    'use strict';\n\t    if (axe.utils.isHidden(frame)) {\n\t      return;\n\t    }\n\t    var fr = axe.utils.findBy(collection, 'node', frame);\n\t    if (!fr) {\n\t      collection.push({\n\t        node: frame,\n\t        include: [],\n\t        exclude: []\n\t      });\n\t    }\n\t  }\n\t  function pushUniqueFrameSelector(context, type, selectorArray) {\n\t    'use strict';\n\t    context.frames = context.frames || [];\n\t    var result, frame;\n\t    var frames = document.querySelectorAll(selectorArray.shift());\n\t    frameloop: for (var i = 0, l = frames.length; i < l; i++) {\n\t      frame = frames[i];\n\t      for (var j = 0, l2 = context.frames.length; j < l2; j++) {\n\t        if (context.frames[j].node === frame) {\n\t          context.frames[j][type].push(selectorArray);\n\t          break frameloop;\n\t        }\n\t      }\n\t      result = {\n\t        node: frame,\n\t        include: [],\n\t        exclude: []\n\t      };\n\t      if (selectorArray) {\n\t        result[type].push(selectorArray);\n\t      }\n\t      context.frames.push(result);\n\t    }\n\t  }\n\t  function normalizeContext(context) {\n\t    'use strict';\n\t    if (context && (typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' || context instanceof NodeList) {\n\t      if (context instanceof Node) {\n\t        return {\n\t          include: [ context ],\n\t          exclude: []\n\t        };\n\t      }\n\t      if (context.hasOwnProperty('include') || context.hasOwnProperty('exclude')) {\n\t        return {\n\t          include: context.include && +context.include.length ? context.include : [ document ],\n\t          exclude: context.exclude || []\n\t        };\n\t      }\n\t      if (context.length === +context.length) {\n\t        return {\n\t          include: context,\n\t          exclude: []\n\t        };\n\t      }\n\t    }\n\t    if (typeof context === 'string') {\n\t      return {\n\t        include: [ context ],\n\t        exclude: []\n\t      };\n\t    }\n\t    return {\n\t      include: [ document ],\n\t      exclude: []\n\t    };\n\t  }\n\t  function parseSelectorArray(context, type) {\n\t    'use strict';\n\t    var item, result = [], nodeList;\n\t    for (var i = 0, l = context[type].length; i < l; i++) {\n\t      item = context[type][i];\n\t      if (typeof item === 'string') {\n\t        nodeList = Array.from(document.querySelectorAll(item));\n\t        result = result.concat(nodeList.map(function(node) {\n\t          return axe.utils.getNodeFromTree(context.flatTree[0], node);\n\t        }));\n\t        break;\n\t      } else if (item && item.length && !(item instanceof Node)) {\n\t        if (item.length > 1) {\n\t          pushUniqueFrameSelector(context, type, item);\n\t        } else {\n\t          nodeList = Array.from(document.querySelectorAll(item[0]));\n\t          result = result.concat(nodeList.map(function(node) {\n\t            return axe.utils.getNodeFromTree(context.flatTree[0], node);\n\t          }));\n\t        }\n\t      } else if (item instanceof Node) {\n\t        if (item.documentElement instanceof Node) {\n\t          result.push(context.flatTree[0]);\n\t        } else {\n\t          result.push(axe.utils.getNodeFromTree(context.flatTree[0], item));\n\t        }\n\t      }\n\t    }\n\t    return result.filter(function(r) {\n\t      return r;\n\t    });\n\t  }\n\t  function validateContext(context) {\n\t    'use strict';\n\t    if (context.include.length === 0) {\n\t      if (context.frames.length === 0) {\n\t        var env = axe.utils.respondable.isInFrame() ? 'frame' : 'page';\n\t        return new Error('No elements found for include in ' + env + ' Context');\n\t      }\n\t      context.frames.forEach(function(frame, i) {\n\t        if (frame.include.length === 0) {\n\t          return new Error('No elements found for include in Context of frame ' + i);\n\t        }\n\t      });\n\t    }\n\t  }\n\t  function getRootNode(_ref) {\n\t    var include = _ref.include, exclude = _ref.exclude;\n\t    var selectors = Array.from(include).concat(Array.from(exclude));\n\t    var localDocument = selectors.reduce(function(result, item) {\n\t      if (result) {\n\t        return result;\n\t      } else if (item instanceof Element) {\n\t        return item.ownerDocument;\n\t      } else if (item instanceof Document) {\n\t        return item;\n\t      }\n\t    }, null);\n\t    return (localDocument || document).documentElement;\n\t  }\n\t  function Context(spec) {\n\t    'use strict';\n\t    var _this = this;\n\t    this.frames = [];\n\t    this.initiator = spec && typeof spec.initiator === 'boolean' ? spec.initiator : true;\n\t    this.page = false;\n\t    spec = normalizeContext(spec);\n\t    this.flatTree = axe.utils.getFlattenedTree(getRootNode(spec));\n\t    this.exclude = spec.exclude;\n\t    this.include = spec.include;\n\t    this.include = parseSelectorArray(this, 'include');\n\t    this.exclude = parseSelectorArray(this, 'exclude');\n\t    axe.utils.select('frame, iframe', this).forEach(function(frame) {\n\t      if (isNodeInContext(frame, _this)) {\n\t        pushUniqueFrame(_this.frames, frame.actualNode);\n\t      }\n\t    });\n\t    if (this.include.length === 1 && this.include[0].actualNode === document.documentElement) {\n\t      this.page = true;\n\t    }\n\t    var err = validateContext(this);\n\t    if (err instanceof Error) {\n\t      throw err;\n\t    }\n\t    if (!Array.isArray(this.include)) {\n\t      this.include = Array.from(this.include);\n\t    }\n\t    this.include.sort(axe.utils.nodeSorter);\n\t  }\n\t  'use strict';\n\t  function RuleResult(rule) {\n\t    'use strict';\n\t    this.id = rule.id;\n\t    this.result = axe.constants.NA;\n\t    this.pageLevel = rule.pageLevel;\n\t    this.impact = null;\n\t    this.nodes = [];\n\t  }\n\t  'use strict';\n\t  function Rule(spec, parentAudit) {\n\t    'use strict';\n\t    this._audit = parentAudit;\n\t    this.id = spec.id;\n\t    this.selector = spec.selector || '*';\n\t    this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n\t    this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n\t    this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n\t    this.any = spec.any || [];\n\t    this.all = spec.all || [];\n\t    this.none = spec.none || [];\n\t    this.tags = spec.tags || [];\n\t    if (spec.matches) {\n\t      this.matches = createExecutionContext(spec.matches);\n\t    }\n\t  }\n\t  Rule.prototype.matches = function() {\n\t    'use strict';\n\t    return true;\n\t  };\n\t  Rule.prototype.gather = function(context) {\n\t    'use strict';\n\t    var elements = axe.utils.select(this.selector, context);\n\t    if (this.excludeHidden) {\n\t      return elements.filter(function(element) {\n\t        return !axe.utils.isHidden(element.actualNode);\n\t      });\n\t    }\n\t    return elements;\n\t  };\n\t  Rule.prototype.runChecks = function(type, node, options, resolve, reject) {\n\t    'use strict';\n\t    var self = this;\n\t    var checkQueue = axe.utils.queue();\n\t    this[type].forEach(function(c) {\n\t      var check = self._audit.checks[c.id || c];\n\t      var option = axe.utils.getCheckOption(check, self.id, options);\n\t      checkQueue.defer(function(res, rej) {\n\t        check.run(node, option, res, rej);\n\t      });\n\t    });\n\t    checkQueue.then(function(results) {\n\t      results = results.filter(function(check) {\n\t        return check;\n\t      });\n\t      resolve({\n\t        type: type,\n\t        results: results\n\t      });\n\t    }).catch(reject);\n\t  };\n\t  Rule.prototype.run = function(context, options, resolve, reject) {\n\t    var _this = this;\n\t    var q = axe.utils.queue();\n\t    var ruleResult = new RuleResult(this);\n\t    var markStart = 'mark_runchecks_start_' + this.id;\n\t    var markEnd = 'mark_runchecks_end_' + this.id;\n\t    var nodes = void 0;\n\t    try {\n\t      nodes = this.gather(context).filter(function(node) {\n\t        return _this.matches(node.actualNode, node);\n\t      });\n\t    } catch (error) {\n\t      reject(new SupportError({\n\t        cause: error,\n\t        ruleId: this.id\n\t      }));\n\t      return;\n\t    }\n\t    if (options.performanceTimer) {\n\t      axe.log('gather (', nodes.length, '):', axe.utils.performanceTimer.timeElapsed() + 'ms');\n\t      axe.utils.performanceTimer.mark(markStart);\n\t    }\n\t    nodes.forEach(function(node) {\n\t      q.defer(function(resolveNode, rejectNode) {\n\t        var checkQueue = axe.utils.queue();\n\t        checkQueue.defer(function(res, rej) {\n\t          _this.runChecks('any', node, options, res, rej);\n\t        });\n\t        checkQueue.defer(function(res, rej) {\n\t          _this.runChecks('all', node, options, res, rej);\n\t        });\n\t        checkQueue.defer(function(res, rej) {\n\t          _this.runChecks('none', node, options, res, rej);\n\t        });\n\t        checkQueue.then(function(results) {\n\t          if (results.length) {\n\t            var hasResults = false, result = {};\n\t            results.forEach(function(r) {\n\t              var res = r.results.filter(function(result) {\n\t                return result;\n\t              });\n\t              result[r.type] = res;\n\t              if (res.length) {\n\t                hasResults = true;\n\t              }\n\t            });\n\t            if (hasResults) {\n\t              result.node = new axe.utils.DqElement(node.actualNode, options);\n\t              ruleResult.nodes.push(result);\n\t            }\n\t          }\n\t          resolveNode();\n\t        }).catch(function(err) {\n\t          return rejectNode(err);\n\t        });\n\t      });\n\t    });\n\t    if (options.performanceTimer) {\n\t      axe.utils.performanceTimer.mark(markEnd);\n\t      axe.utils.performanceTimer.measure('runchecks_' + this.id, markStart, markEnd);\n\t    }\n\t    q.then(function() {\n\t      return resolve(ruleResult);\n\t    }).catch(function(error) {\n\t      return reject(error);\n\t    });\n\t  };\n\t  function findAfterChecks(rule) {\n\t    'use strict';\n\t    return axe.utils.getAllChecks(rule).map(function(c) {\n\t      var check = rule._audit.checks[c.id || c];\n\t      return check && typeof check.after === 'function' ? check : null;\n\t    }).filter(Boolean);\n\t  }\n\t  function findCheckResults(nodes, checkID) {\n\t    'use strict';\n\t    var checkResults = [];\n\t    nodes.forEach(function(nodeResult) {\n\t      var checks = axe.utils.getAllChecks(nodeResult);\n\t      checks.forEach(function(checkResult) {\n\t        if (checkResult.id === checkID) {\n\t          checkResults.push(checkResult);\n\t        }\n\t      });\n\t    });\n\t    return checkResults;\n\t  }\n\t  function filterChecks(checks) {\n\t    'use strict';\n\t    return checks.filter(function(check) {\n\t      return check.filtered !== true;\n\t    });\n\t  }\n\t  function sanitizeNodes(result) {\n\t    'use strict';\n\t    var checkTypes = [ 'any', 'all', 'none' ];\n\t    var nodes = result.nodes.filter(function(detail) {\n\t      var length = 0;\n\t      checkTypes.forEach(function(type) {\n\t        detail[type] = filterChecks(detail[type]);\n\t        length += detail[type].length;\n\t      });\n\t      return length > 0;\n\t    });\n\t    if (result.pageLevel && nodes.length) {\n\t      nodes = [ nodes.reduce(function(a, b) {\n\t        if (a) {\n\t          checkTypes.forEach(function(type) {\n\t            a[type].push.apply(a[type], b[type]);\n\t          });\n\t          return a;\n\t        }\n\t      }) ];\n\t    }\n\t    return nodes;\n\t  }\n\t  Rule.prototype.after = function(result, options) {\n\t    'use strict';\n\t    var afterChecks = findAfterChecks(this);\n\t    var ruleID = this.id;\n\t    afterChecks.forEach(function(check) {\n\t      var beforeResults = findCheckResults(result.nodes, check.id);\n\t      var option = axe.utils.getCheckOption(check, ruleID, options);\n\t      var afterResults = check.after(beforeResults, option);\n\t      beforeResults.forEach(function(item) {\n\t        if (afterResults.indexOf(item) === -1) {\n\t          item.filtered = true;\n\t        }\n\t      });\n\t    });\n\t    result.nodes = sanitizeNodes(result);\n\t    return result;\n\t  };\n\t  Rule.prototype.configure = function(spec) {\n\t    'use strict';\n\t    if (spec.hasOwnProperty('selector')) {\n\t      this.selector = spec.selector;\n\t    }\n\t    if (spec.hasOwnProperty('excludeHidden')) {\n\t      this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n\t    }\n\t    if (spec.hasOwnProperty('enabled')) {\n\t      this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n\t    }\n\t    if (spec.hasOwnProperty('pageLevel')) {\n\t      this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n\t    }\n\t    if (spec.hasOwnProperty('any')) {\n\t      this.any = spec.any;\n\t    }\n\t    if (spec.hasOwnProperty('all')) {\n\t      this.all = spec.all;\n\t    }\n\t    if (spec.hasOwnProperty('none')) {\n\t      this.none = spec.none;\n\t    }\n\t    if (spec.hasOwnProperty('tags')) {\n\t      this.tags = spec.tags;\n\t    }\n\t    if (spec.hasOwnProperty('matches')) {\n\t      if (typeof spec.matches === 'string') {\n\t        this.matches = new Function('return ' + spec.matches + ';')();\n\t      } else {\n\t        this.matches = spec.matches;\n\t      }\n\t    }\n\t  };\n\t  'use strict';\n\t  (function(axe) {\n\t    var definitions = [ {\n\t      name: 'NA',\n\t      value: 'inapplicable',\n\t      priority: 0,\n\t      group: 'inapplicable'\n\t    }, {\n\t      name: 'PASS',\n\t      value: 'passed',\n\t      priority: 1,\n\t      group: 'passes'\n\t    }, {\n\t      name: 'CANTTELL',\n\t      value: 'cantTell',\n\t      priority: 2,\n\t      group: 'incomplete'\n\t    }, {\n\t      name: 'FAIL',\n\t      value: 'failed',\n\t      priority: 3,\n\t      group: 'violations'\n\t    } ];\n\t    var constants = {\n\t      helpUrlBase: 'https://dequeuniversity.com/rules/',\n\t      results: [],\n\t      resultGroups: [],\n\t      resultGroupMap: {},\n\t      impact: Object.freeze([ 'minor', 'moderate', 'serious', 'critical' ])\n\t    };\n\t    definitions.forEach(function(definition) {\n\t      var name = definition.name;\n\t      var value = definition.value;\n\t      var priority = definition.priority;\n\t      var group = definition.group;\n\t      constants[name] = value;\n\t      constants[name + '_PRIO'] = priority;\n\t      constants[name + '_GROUP'] = group;\n\t      constants.results[priority] = value;\n\t      constants.resultGroups[priority] = group;\n\t      constants.resultGroupMap[value] = group;\n\t    });\n\t    Object.freeze(constants.results);\n\t    Object.freeze(constants.resultGroups);\n\t    Object.freeze(constants.resultGroupMap);\n\t    Object.freeze(constants);\n\t    Object.defineProperty(axe, 'constants', {\n\t      value: constants,\n\t      enumerable: true,\n\t      configurable: false,\n\t      writable: false\n\t    });\n\t  })(axe);\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  axe.log = function() {\n\t    'use strict';\n\t    if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' && console.log) {\n\t      Function.prototype.apply.call(console.log, console, arguments);\n\t    }\n\t  };\n\t  'use strict';\n\t  function cleanupPlugins(resolve, reject) {\n\t    'use strict';\n\t    resolve = resolve || function() {};\n\t    reject = reject || axe.log;\n\t    if (!axe._audit) {\n\t      throw new Error('No audit configured');\n\t    }\n\t    var q = axe.utils.queue();\n\t    var cleanupErrors = [];\n\t    Object.keys(axe.plugins).forEach(function(key) {\n\t      q.defer(function(res) {\n\t        var rej = function rej(err) {\n\t          cleanupErrors.push(err);\n\t          res();\n\t        };\n\t        try {\n\t          axe.plugins[key].cleanup(res, rej);\n\t        } catch (err) {\n\t          rej(err);\n\t        }\n\t      });\n\t    });\n\t    var flattenedTree = axe.utils.getFlattenedTree(document.body);\n\t    axe.utils.querySelectorAll(flattenedTree, 'iframe, frame').forEach(function(node) {\n\t      q.defer(function(res, rej) {\n\t        return axe.utils.sendCommandToFrame(node.actualNode, {\n\t          command: 'cleanup-plugin'\n\t        }, res, rej);\n\t      });\n\t    });\n\t    q.then(function(results) {\n\t      if (cleanupErrors.length === 0) {\n\t        resolve(results);\n\t      } else {\n\t        reject(cleanupErrors);\n\t      }\n\t    }).catch(reject);\n\t  }\n\t  axe.cleanup = cleanupPlugins;\n\t  'use strict';\n\t  function configureChecksRulesAndBranding(spec) {\n\t    'use strict';\n\t    var audit;\n\t    audit = axe._audit;\n\t    if (!audit) {\n\t      throw new Error('No audit configured');\n\t    }\n\t    if (spec.reporter && (typeof spec.reporter === 'function' || reporters[spec.reporter])) {\n\t      audit.reporter = spec.reporter;\n\t    }\n\t    if (spec.checks) {\n\t      spec.checks.forEach(function(check) {\n\t        audit.addCheck(check);\n\t      });\n\t    }\n\t    var modifiedRules = [];\n\t    if (spec.rules) {\n\t      spec.rules.forEach(function(rule) {\n\t        modifiedRules.push(rule.id);\n\t        audit.addRule(rule);\n\t      });\n\t    }\n\t    if (spec.disableOtherRules) {\n\t      audit.rules.forEach(function(rule) {\n\t        if (modifiedRules.includes(rule.id) === false) {\n\t          rule.enabled = false;\n\t        }\n\t      });\n\t    }\n\t    if (typeof spec.branding !== 'undefined') {\n\t      audit.setBranding(spec.branding);\n\t    } else {\n\t      audit._constructHelpUrls();\n\t    }\n\t    if (spec.tagExclude) {\n\t      audit.tagExclude = spec.tagExclude;\n\t    }\n\t  }\n\t  axe.configure = configureChecksRulesAndBranding;\n\t  'use strict';\n\t  axe.getRules = function(tags) {\n\t    'use strict';\n\t    tags = tags || [];\n\t    var matchingRules = !tags.length ? axe._audit.rules : axe._audit.rules.filter(function(item) {\n\t      return !!tags.filter(function(tag) {\n\t        return item.tags.indexOf(tag) !== -1;\n\t      }).length;\n\t    });\n\t    var ruleData = axe._audit.data.rules || {};\n\t    return matchingRules.map(function(matchingRule) {\n\t      var rd = ruleData[matchingRule.id] || {};\n\t      return {\n\t        ruleId: matchingRule.id,\n\t        description: rd.description,\n\t        help: rd.help,\n\t        helpUrl: rd.helpUrl,\n\t        tags: matchingRule.tags\n\t      };\n\t    });\n\t  };\n\t  'use strict';\n\t  function runCommand(data, keepalive, callback) {\n\t    'use strict';\n\t    var resolve = callback;\n\t    var reject = function reject(err) {\n\t      if (err instanceof Error === false) {\n\t        err = new Error(err);\n\t      }\n\t      callback(err);\n\t    };\n\t    var context = data && data.context || {};\n\t    if (context.hasOwnProperty('include') && !context.include.length) {\n\t      context.include = [ document ];\n\t    }\n\t    var options = data && data.options || {};\n\t    switch (data.command) {\n\t     case 'rules':\n\t      return runRules(context, options, function(results, cleanup) {\n\t        resolve(results);\n\t        cleanup();\n\t      }, reject);\n\t\n\t     case 'cleanup-plugin':\n\t      return cleanupPlugins(resolve, reject);\n\t\n\t     default:\n\t      if (axe._audit && axe._audit.commands && axe._audit.commands[data.command]) {\n\t        return axe._audit.commands[data.command](data, callback);\n\t      }\n\t    }\n\t  }\n\t  axe._load = function(audit) {\n\t    'use strict';\n\t    axe.utils.respondable.subscribe('axe.ping', function(data, keepalive, respond) {\n\t      respond({\n\t        axe: true\n\t      });\n\t    });\n\t    axe.utils.respondable.subscribe('axe.start', runCommand);\n\t    axe._audit = new Audit(audit);\n\t  };\n\t  'use strict';\n\t  var axe = axe || {};\n\t  axe.plugins = {};\n\t  function Plugin(spec) {\n\t    'use strict';\n\t    this._run = spec.run;\n\t    this._collect = spec.collect;\n\t    this._registry = {};\n\t    spec.commands.forEach(function(command) {\n\t      axe._audit.registerCommand(command);\n\t    });\n\t  }\n\t  Plugin.prototype.run = function() {\n\t    'use strict';\n\t    return this._run.apply(this, arguments);\n\t  };\n\t  Plugin.prototype.collect = function() {\n\t    'use strict';\n\t    return this._collect.apply(this, arguments);\n\t  };\n\t  Plugin.prototype.cleanup = function(done) {\n\t    'use strict';\n\t    var q = axe.utils.queue();\n\t    var that = this;\n\t    Object.keys(this._registry).forEach(function(key) {\n\t      q.defer(function(done) {\n\t        that._registry[key].cleanup(done);\n\t      });\n\t    });\n\t    q.then(function() {\n\t      done();\n\t    });\n\t  };\n\t  Plugin.prototype.add = function(impl) {\n\t    'use strict';\n\t    this._registry[impl.id] = impl;\n\t  };\n\t  axe.registerPlugin = function(plugin) {\n\t    'use strict';\n\t    axe.plugins[plugin.id] = new Plugin(plugin);\n\t  };\n\t  'use strict';\n\t  var reporters = {};\n\t  var defaultReporter;\n\t  axe.getReporter = function(reporter) {\n\t    'use strict';\n\t    if (typeof reporter === 'string' && reporters[reporter]) {\n\t      return reporters[reporter];\n\t    }\n\t    if (typeof reporter === 'function') {\n\t      return reporter;\n\t    }\n\t    return defaultReporter;\n\t  };\n\t  axe.addReporter = function registerReporter(name, cb, isDefault) {\n\t    'use strict';\n\t    reporters[name] = cb;\n\t    if (isDefault) {\n\t      defaultReporter = cb;\n\t    }\n\t  };\n\t  'use strict';\n\t  function resetConfiguration() {\n\t    'use strict';\n\t    var audit = axe._audit;\n\t    if (!audit) {\n\t      throw new Error('No audit configured');\n\t    }\n\t    audit.resetRulesAndChecks();\n\t  }\n\t  axe.reset = resetConfiguration;\n\t  'use strict';\n\t  function cleanup() {\n\t    axe._tree = undefined;\n\t    axe._selectorData = undefined;\n\t  }\n\t  function runRules(context, options, resolve, reject) {\n\t    'use strict';\n\t    try {\n\t      context = new Context(context);\n\t      axe._tree = context.flatTree;\n\t      axe._selectorData = axe.utils.getSelectorData(context.flatTree);\n\t    } catch (e) {\n\t      cleanup();\n\t      return reject(e);\n\t    }\n\t    var q = axe.utils.queue();\n\t    var audit = axe._audit;\n\t    if (options.performanceTimer) {\n\t      axe.utils.performanceTimer.auditStart();\n\t    }\n\t    if (context.frames.length && options.iframes !== false) {\n\t      q.defer(function(res, rej) {\n\t        axe.utils.collectResultsFromFrames(context, options, 'rules', null, res, rej);\n\t      });\n\t    }\n\t    var scrollState = void 0;\n\t    q.defer(function(res, rej) {\n\t      if (options.restoreScroll) {\n\t        scrollState = axe.utils.getScrollState();\n\t      }\n\t      audit.run(context, options, res, rej);\n\t    });\n\t    q.then(function(data) {\n\t      try {\n\t        if (scrollState) {\n\t          axe.utils.setScrollState(scrollState);\n\t        }\n\t        if (options.performanceTimer) {\n\t          axe.utils.performanceTimer.auditEnd();\n\t        }\n\t        var results = axe.utils.mergeResults(data.map(function(results) {\n\t          return {\n\t            results: results\n\t          };\n\t        }));\n\t        if (context.initiator) {\n\t          results = audit.after(results, options);\n\t          results.forEach(axe.utils.publishMetaData);\n\t          results = results.map(axe.utils.finalizeRuleResult);\n\t        }\n\t        try {\n\t          resolve(results, cleanup);\n\t        } catch (e) {\n\t          cleanup();\n\t          axe.log(e);\n\t        }\n\t      } catch (e) {\n\t        cleanup();\n\t        reject(e);\n\t      }\n\t    }).catch(function(e) {\n\t      cleanup();\n\t      reject(e);\n\t    });\n\t  }\n\t  axe._runRules = runRules;\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  function isContext(potential) {\n\t    'use strict';\n\t    switch (true) {\n\t     case typeof potential === 'string':\n\t     case Array.isArray(potential):\n\t     case Node && potential instanceof Node:\n\t     case NodeList && potential instanceof NodeList:\n\t      return true;\n\t\n\t     case (typeof potential === 'undefined' ? 'undefined' : _typeof(potential)) !== 'object':\n\t      return false;\n\t\n\t     case potential.include !== undefined:\n\t     case potential.exclude !== undefined:\n\t     case typeof potential.length === 'number':\n\t      return true;\n\t\n\t     default:\n\t      return false;\n\t    }\n\t  }\n\t  var noop = function noop() {};\n\t  function normalizeRunParams(context, options, callback) {\n\t    'use strict';\n\t    var typeErr = new TypeError('axe.run arguments are invalid');\n\t    if (!isContext(context)) {\n\t      if (callback !== undefined) {\n\t        throw typeErr;\n\t      }\n\t      callback = options;\n\t      options = context;\n\t      context = document;\n\t    }\n\t    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n\t      if (callback !== undefined) {\n\t        throw typeErr;\n\t      }\n\t      callback = options;\n\t      options = {};\n\t    }\n\t    if (typeof callback !== 'function' && callback !== undefined) {\n\t      throw typeErr;\n\t    }\n\t    return {\n\t      context: context,\n\t      options: options,\n\t      callback: callback || noop\n\t    };\n\t  }\n\t  axe.run = function(context, options, callback) {\n\t    'use strict';\n\t    if (!axe._audit) {\n\t      throw new Error('No audit configured');\n\t    }\n\t    var args = normalizeRunParams(context, options, callback);\n\t    context = args.context;\n\t    options = args.options;\n\t    callback = args.callback;\n\t    options.reporter = options.reporter || axe._audit.reporter || 'v1';\n\t    if (options.performanceTimer) {\n\t      axe.utils.performanceTimer.start();\n\t    }\n\t    var p = void 0;\n\t    var reject = noop;\n\t    var resolve = noop;\n\t    if (window.Promise && callback === noop) {\n\t      p = new Promise(function(_resolve, _reject) {\n\t        reject = _reject;\n\t        resolve = _resolve;\n\t      });\n\t    }\n\t    axe._runRules(context, options, function(rawResults, cleanup) {\n\t      var respond = function respond(results) {\n\t        cleanup();\n\t        try {\n\t          callback(null, results);\n\t        } catch (e) {\n\t          axe.log(e);\n\t        }\n\t        resolve(results);\n\t      };\n\t      if (options.performanceTimer) {\n\t        axe.utils.performanceTimer.end();\n\t      }\n\t      try {\n\t        var reporter = axe.getReporter(options.reporter);\n\t        var results = reporter(rawResults, options, respond);\n\t        if (results !== undefined) {\n\t          respond(results);\n\t        }\n\t      } catch (err) {\n\t        cleanup();\n\t        callback(err);\n\t        reject(err);\n\t      }\n\t    }, function(err) {\n\t      callback(err);\n\t      reject(err);\n\t    });\n\t    return p;\n\t  };\n\t  'use strict';\n\t  helpers.failureSummary = function failureSummary(nodeData) {\n\t    'use strict';\n\t    var failingChecks = {};\n\t    failingChecks.none = nodeData.none.concat(nodeData.all);\n\t    failingChecks.any = nodeData.any;\n\t    return Object.keys(failingChecks).map(function(key) {\n\t      if (!failingChecks[key].length) {\n\t        return;\n\t      }\n\t      var sum = axe._audit.data.failureSummaries[key];\n\t      if (sum && typeof sum.failureMessage === 'function') {\n\t        return sum.failureMessage(failingChecks[key].map(function(check) {\n\t          return check.message || '';\n\t        }));\n\t      }\n\t    }).filter(function(i) {\n\t      return i !== undefined;\n\t    }).join('\\n\\n');\n\t  };\n\t  'use strict';\n\t  helpers.incompleteFallbackMessage = function incompleteFallbackMessage() {\n\t    'use strict';\n\t    return axe._audit.data.incompleteFallbackMessage();\n\t  };\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  function normalizeRelatedNodes(node, options) {\n\t    'use strict';\n\t    [ 'any', 'all', 'none' ].forEach(function(type) {\n\t      if (!Array.isArray(node[type])) {\n\t        return;\n\t      }\n\t      node[type].filter(function(checkRes) {\n\t        return Array.isArray(checkRes.relatedNodes);\n\t      }).forEach(function(checkRes) {\n\t        checkRes.relatedNodes = checkRes.relatedNodes.map(function(relatedNode) {\n\t          var res = {\n\t            html: relatedNode.source\n\t          };\n\t          if (options.elementRef && !relatedNode.fromFrame) {\n\t            res.element = relatedNode.element;\n\t          }\n\t          if (options.selectors !== false || relatedNode.fromFrame) {\n\t            res.target = relatedNode.selector;\n\t          }\n\t          if (options.xpath) {\n\t            res.xpath = relatedNode.xpath;\n\t          }\n\t          return res;\n\t        });\n\t      });\n\t    });\n\t  }\n\t  var resultKeys = axe.constants.resultGroups;\n\t  helpers.processAggregate = function(results, options) {\n\t    var resultObject = axe.utils.aggregateResult(results);\n\t    resultObject.timestamp = new Date().toISOString();\n\t    resultObject.url = window.location.href;\n\t    resultKeys.forEach(function(key) {\n\t      if (options.resultTypes && !options.resultTypes.includes(key)) {\n\t        (resultObject[key] || []).forEach(function(ruleResult) {\n\t          if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n\t            ruleResult.nodes = [ ruleResult.nodes[0] ];\n\t          }\n\t        });\n\t      }\n\t      resultObject[key] = (resultObject[key] || []).map(function(ruleResult) {\n\t        ruleResult = Object.assign({}, ruleResult);\n\t        if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n\t          ruleResult.nodes = ruleResult.nodes.map(function(subResult) {\n\t            if (_typeof(subResult.node) === 'object') {\n\t              subResult.html = subResult.node.source;\n\t              if (options.elementRef && !subResult.node.fromFrame) {\n\t                subResult.element = subResult.node.element;\n\t              }\n\t              if (options.selectors !== false || subResult.node.fromFrame) {\n\t                subResult.target = subResult.node.selector;\n\t              }\n\t              if (options.xpath) {\n\t                subResult.xpath = subResult.node.xpath;\n\t              }\n\t            }\n\t            delete subResult.result;\n\t            delete subResult.node;\n\t            normalizeRelatedNodes(subResult, options);\n\t            return subResult;\n\t          });\n\t        }\n\t        resultKeys.forEach(function(key) {\n\t          return delete ruleResult[key];\n\t        });\n\t        delete ruleResult.pageLevel;\n\t        delete ruleResult.result;\n\t        return ruleResult;\n\t      });\n\t    });\n\t    return resultObject;\n\t  };\n\t  'use strict';\n\t  axe.addReporter('na', function(results, options, callback) {\n\t    'use strict';\n\t    if (typeof options === 'function') {\n\t      callback = options;\n\t      options = {};\n\t    }\n\t    var out = helpers.processAggregate(results, options);\n\t    callback({\n\t      violations: out.violations,\n\t      passes: out.passes,\n\t      incomplete: out.incomplete,\n\t      inapplicable: out.inapplicable,\n\t      timestamp: out.timestamp,\n\t      url: out.url\n\t    });\n\t  });\n\t  'use strict';\n\t  axe.addReporter('no-passes', function(results, options, callback) {\n\t    'use strict';\n\t    if (typeof options === 'function') {\n\t      callback = options;\n\t      options = {};\n\t    }\n\t    options.resultTypes = [ 'violations' ];\n\t    var out = helpers.processAggregate(results, options);\n\t    callback({\n\t      violations: out.violations,\n\t      timestamp: out.timestamp,\n\t      url: out.url\n\t    });\n\t  });\n\t  'use strict';\n\t  axe.addReporter('raw', function(results, options, callback) {\n\t    'use strict';\n\t    if (typeof options === 'function') {\n\t      callback = options;\n\t      options = {};\n\t    }\n\t    callback(results);\n\t  });\n\t  'use strict';\n\t  axe.addReporter('v1', function(results, options, callback) {\n\t    'use strict';\n\t    if (typeof options === 'function') {\n\t      callback = options;\n\t      options = {};\n\t    }\n\t    var out = helpers.processAggregate(results, options);\n\t    out.violations.forEach(function(result) {\n\t      return result.nodes.forEach(function(nodeResult) {\n\t        nodeResult.failureSummary = helpers.failureSummary(nodeResult);\n\t      });\n\t    });\n\t    callback({\n\t      violations: out.violations,\n\t      passes: out.passes,\n\t      incomplete: out.incomplete,\n\t      inapplicable: out.inapplicable,\n\t      timestamp: out.timestamp,\n\t      url: out.url\n\t    });\n\t  });\n\t  'use strict';\n\t  axe.addReporter('v2', function(results, options, callback) {\n\t    'use strict';\n\t    if (typeof options === 'function') {\n\t      callback = options;\n\t      options = {};\n\t    }\n\t    var out = helpers.processAggregate(results, options);\n\t    callback({\n\t      violations: out.violations,\n\t      passes: out.passes,\n\t      incomplete: out.incomplete,\n\t      inapplicable: out.inapplicable,\n\t      timestamp: out.timestamp,\n\t      url: out.url\n\t    });\n\t  }, true);\n\t  'use strict';\n\t  axe.utils.aggregate = function(map, values, initial) {\n\t    values = values.slice();\n\t    if (initial) {\n\t      values.push(initial);\n\t    }\n\t    var sorting = values.map(function(val) {\n\t      return map.indexOf(val);\n\t    }).sort();\n\t    return map[sorting.pop()];\n\t  };\n\t  'use strict';\n\t  var _axe$constants = axe.constants, CANTTELL_PRIO = _axe$constants.CANTTELL_PRIO, FAIL_PRIO = _axe$constants.FAIL_PRIO;\n\t  var checkMap = [];\n\t  checkMap[axe.constants.PASS_PRIO] = true;\n\t  checkMap[axe.constants.CANTTELL_PRIO] = null;\n\t  checkMap[axe.constants.FAIL_PRIO] = false;\n\t  var checkTypes = [ 'any', 'all', 'none' ];\n\t  function anyAllNone(obj, functor) {\n\t    return checkTypes.reduce(function(out, type) {\n\t      out[type] = (obj[type] || []).map(function(val) {\n\t        return functor(val, type);\n\t      });\n\t      return out;\n\t    }, {});\n\t  }\n\t  axe.utils.aggregateChecks = function(nodeResOriginal) {\n\t    var nodeResult = Object.assign({}, nodeResOriginal);\n\t    anyAllNone(nodeResult, function(check, type) {\n\t      var i = checkMap.indexOf(check.result);\n\t      check.priority = i !== -1 ? i : axe.constants.CANTTELL_PRIO;\n\t      if (type === 'none') {\n\t        check.priority = 4 - check.priority;\n\t      }\n\t    });\n\t    var priorities = {\n\t      all: nodeResult.all.reduce(function(a, b) {\n\t        return Math.max(a, b.priority);\n\t      }, 0),\n\t      none: nodeResult.none.reduce(function(a, b) {\n\t        return Math.max(a, b.priority);\n\t      }, 0),\n\t      any: nodeResult.any.reduce(function(a, b) {\n\t        return Math.min(a, b.priority);\n\t      }, 4) % 4\n\t    };\n\t    nodeResult.priority = Math.max(priorities.all, priorities.none, priorities.any);\n\t    var impacts = [];\n\t    checkTypes.forEach(function(type) {\n\t      nodeResult[type] = nodeResult[type].filter(function(check) {\n\t        return check.priority === nodeResult.priority && check.priority === priorities[type];\n\t      });\n\t      nodeResult[type].forEach(function(check) {\n\t        return impacts.push(check.impact);\n\t      });\n\t    });\n\t    if ([ CANTTELL_PRIO, FAIL_PRIO ].includes(nodeResult.priority)) {\n\t      nodeResult.impact = axe.utils.aggregate(axe.constants.impact, impacts);\n\t    } else {\n\t      nodeResult.impact = null;\n\t    }\n\t    anyAllNone(nodeResult, function(c) {\n\t      delete c.result;\n\t      delete c.priority;\n\t    });\n\t    nodeResult.result = axe.constants.results[nodeResult.priority];\n\t    delete nodeResult.priority;\n\t    return nodeResult;\n\t  };\n\t  'use strict';\n\t  (function() {\n\t    axe.utils.aggregateNodeResults = function(nodeResults) {\n\t      var ruleResult = {};\n\t      nodeResults = nodeResults.map(function(nodeResult) {\n\t        if (nodeResult.any && nodeResult.all && nodeResult.none) {\n\t          return axe.utils.aggregateChecks(nodeResult);\n\t        } else if (Array.isArray(nodeResult.node)) {\n\t          return axe.utils.finalizeRuleResult(nodeResult);\n\t        } else {\n\t          throw new TypeError('Invalid Result type');\n\t        }\n\t      });\n\t      if (nodeResults && nodeResults.length) {\n\t        var resultList = nodeResults.map(function(node) {\n\t          return node.result;\n\t        });\n\t        ruleResult.result = axe.utils.aggregate(axe.constants.results, resultList, ruleResult.result);\n\t      } else {\n\t        ruleResult.result = 'inapplicable';\n\t      }\n\t      axe.constants.resultGroups.forEach(function(group) {\n\t        return ruleResult[group] = [];\n\t      });\n\t      nodeResults.forEach(function(nodeResult) {\n\t        var groupName = axe.constants.resultGroupMap[nodeResult.result];\n\t        ruleResult[groupName].push(nodeResult);\n\t      });\n\t      var impactGroup = axe.constants.FAIL_GROUP;\n\t      if (ruleResult[impactGroup].length === 0) {\n\t        impactGroup = axe.constants.CANTTELL_GROUP;\n\t      }\n\t      if (ruleResult[impactGroup].length > 0) {\n\t        var impactList = ruleResult[impactGroup].map(function(failure) {\n\t          return failure.impact;\n\t        });\n\t        ruleResult.impact = axe.utils.aggregate(axe.constants.impact, impactList) || null;\n\t      } else {\n\t        ruleResult.impact = null;\n\t      }\n\t      return ruleResult;\n\t    };\n\t  })();\n\t  'use strict';\n\t  function copyToGroup(resultObject, subResult, group) {\n\t    var resultCopy = Object.assign({}, subResult);\n\t    resultCopy.nodes = (resultCopy[group] || []).concat();\n\t    axe.constants.resultGroups.forEach(function(group) {\n\t      delete resultCopy[group];\n\t    });\n\t    resultObject[group].push(resultCopy);\n\t  }\n\t  axe.utils.aggregateResult = function(results) {\n\t    var resultObject = {};\n\t    axe.constants.resultGroups.forEach(function(groupName) {\n\t      return resultObject[groupName] = [];\n\t    });\n\t    results.forEach(function(subResult) {\n\t      if (subResult.error) {\n\t        copyToGroup(resultObject, subResult, axe.constants.CANTTELL_GROUP);\n\t      } else if (subResult.result === axe.constants.NA) {\n\t        copyToGroup(resultObject, subResult, axe.constants.NA_GROUP);\n\t      } else {\n\t        axe.constants.resultGroups.forEach(function(group) {\n\t          if (Array.isArray(subResult[group]) && subResult[group].length > 0) {\n\t            copyToGroup(resultObject, subResult, group);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    return resultObject;\n\t  };\n\t  'use strict';\n\t  function areStylesSet(el, styles, stopAt) {\n\t    'use strict';\n\t    var styl = window.getComputedStyle(el, null);\n\t    var set = false;\n\t    if (!styl) {\n\t      return false;\n\t    }\n\t    styles.forEach(function(att) {\n\t      if (styl.getPropertyValue(att.property) === att.value) {\n\t        set = true;\n\t      }\n\t    });\n\t    if (set) {\n\t      return true;\n\t    }\n\t    if (el.nodeName.toUpperCase() === stopAt.toUpperCase() || !el.parentNode) {\n\t      return false;\n\t    }\n\t    return areStylesSet(el.parentNode, styles, stopAt);\n\t  }\n\t  axe.utils.areStylesSet = areStylesSet;\n\t  'use strict';\n\t  axe.utils.checkHelper = function checkHelper(checkResult, options, resolve, reject) {\n\t    'use strict';\n\t    return {\n\t      isAsync: false,\n\t      async: function async() {\n\t        this.isAsync = true;\n\t        return function(result) {\n\t          if (result instanceof Error === false) {\n\t            checkResult.result = result;\n\t            resolve(checkResult);\n\t          } else {\n\t            reject(result);\n\t          }\n\t        };\n\t      },\n\t      data: function data(_data) {\n\t        checkResult.data = _data;\n\t      },\n\t      relatedNodes: function relatedNodes(nodes) {\n\t        nodes = nodes instanceof Node ? [ nodes ] : axe.utils.toArray(nodes);\n\t        checkResult.relatedNodes = nodes.map(function(element) {\n\t          return new axe.utils.DqElement(element, options);\n\t        });\n\t      }\n\t    };\n\t  };\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  axe.utils.clone = function(obj) {\n\t    'use strict';\n\t    var index, length, out = obj;\n\t    if (obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n\t      if (Array.isArray(obj)) {\n\t        out = [];\n\t        for (index = 0, length = obj.length; index < length; index++) {\n\t          out[index] = axe.utils.clone(obj[index]);\n\t        }\n\t      } else {\n\t        out = {};\n\t        for (index in obj) {\n\t          out[index] = axe.utils.clone(obj[index]);\n\t        }\n\t      }\n\t    }\n\t    return out;\n\t  };\n\t  'use strict';\n\t  function err(message, node) {\n\t    'use strict';\n\t    var selector;\n\t    if (axe._tree) {\n\t      selector = axe.utils.getSelector(node);\n\t    }\n\t    return new Error(message + ': ' + (selector || node));\n\t  }\n\t  axe.utils.sendCommandToFrame = function(node, parameters, resolve, reject) {\n\t    'use strict';\n\t    var win = node.contentWindow;\n\t    if (!win) {\n\t      axe.log('Frame does not have a content window', node);\n\t      resolve(null);\n\t      return;\n\t    }\n\t    var timeout = setTimeout(function() {\n\t      timeout = setTimeout(function() {\n\t        if (!parameters.debug) {\n\t          resolve(null);\n\t        } else {\n\t          reject(err('No response from frame', node));\n\t        }\n\t      }, 0);\n\t    }, 500);\n\t    axe.utils.respondable(win, 'axe.ping', null, undefined, function() {\n\t      clearTimeout(timeout);\n\t      var frameWaitTime = parameters.options && parameters.options.frameWaitTime || 6e4;\n\t      timeout = setTimeout(function() {\n\t        reject(err('Axe in frame timed out', node));\n\t      }, frameWaitTime);\n\t      axe.utils.respondable(win, 'axe.start', parameters, undefined, function(data) {\n\t        clearTimeout(timeout);\n\t        if (data instanceof Error === false) {\n\t          resolve(data);\n\t        } else {\n\t          reject(data);\n\t        }\n\t      });\n\t    });\n\t  };\n\t  function collectResultsFromFrames(context, options, command, parameter, resolve, reject) {\n\t    'use strict';\n\t    var q = axe.utils.queue();\n\t    var frames = context.frames;\n\t    frames.forEach(function(frame) {\n\t      var params = {\n\t        options: options,\n\t        command: command,\n\t        parameter: parameter,\n\t        context: {\n\t          initiator: false,\n\t          page: context.page,\n\t          include: frame.include || [],\n\t          exclude: frame.exclude || []\n\t        }\n\t      };\n\t      q.defer(function(res, rej) {\n\t        var node = frame.node;\n\t        axe.utils.sendCommandToFrame(node, params, function(data) {\n\t          if (data) {\n\t            return res({\n\t              results: data,\n\t              frameElement: node,\n\t              frame: axe.utils.getSelector(node)\n\t            });\n\t          }\n\t          res(null);\n\t        }, rej);\n\t      });\n\t    });\n\t    q.then(function(data) {\n\t      resolve(axe.utils.mergeResults(data, options));\n\t    }).catch(reject);\n\t  }\n\t  axe.utils.collectResultsFromFrames = collectResultsFromFrames;\n\t  'use strict';\n\t  axe.utils.contains = function(node, otherNode) {\n\t    'use strict';\n\t    function containsShadowChild(node, otherNode) {\n\t      if (node.shadowId === otherNode.shadowId) {\n\t        return true;\n\t      }\n\t      return !!node.children.find(function(child) {\n\t        return containsShadowChild(child, otherNode);\n\t      });\n\t    }\n\t    if (node.shadowId || otherNode.shadowId) {\n\t      return containsShadowChild(node, otherNode);\n\t    }\n\t    if (typeof node.actualNode.contains === 'function') {\n\t      return node.actualNode.contains(otherNode.actualNode);\n\t    }\n\t    return !!(node.actualNode.compareDocumentPosition(otherNode.actualNode) & 16);\n\t  };\n\t  'use strict';\n\t  (function(axe) {\n\t    /*!\n\t  * The copyright below covers the code within this function block only\n\t  *\n\t  * Copyright (c) 2013 Dulin Marat\n\t  * \n\t  * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t  * of this software and associated documentation files (the \"Software\"), to deal\n\t  * in the Software without restriction, including without limitation the rights\n\t  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t  * copies of the Software, and to permit persons to whom the Software is\n\t  * furnished to do so, subject to the following conditions:\n\t  * \n\t  * The above copyright notice and this permission notice shall be included in\n\t  * all copies or substantial portions of the Software.\n\t  * \n\t  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t  * THE SOFTWARE.\n\t  */\n\t    function CssSelectorParser() {\n\t      this.pseudos = {};\n\t      this.attrEqualityMods = {};\n\t      this.ruleNestingOperators = {};\n\t      this.substitutesEnabled = false;\n\t    }\n\t    CssSelectorParser.prototype.registerSelectorPseudos = function(name) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        name = arguments[j];\n\t        this.pseudos[name] = 'selector';\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.unregisterSelectorPseudos = function(name) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        name = arguments[j];\n\t        delete this.pseudos[name];\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.registerNumericPseudos = function(name) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        name = arguments[j];\n\t        this.pseudos[name] = 'numeric';\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.unregisterNumericPseudos = function(name) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        name = arguments[j];\n\t        delete this.pseudos[name];\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.registerNestingOperators = function(operator) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        operator = arguments[j];\n\t        this.ruleNestingOperators[operator] = true;\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.unregisterNestingOperators = function(operator) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        operator = arguments[j];\n\t        delete this.ruleNestingOperators[operator];\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.registerAttrEqualityMods = function(mod) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        mod = arguments[j];\n\t        this.attrEqualityMods[mod] = true;\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.unregisterAttrEqualityMods = function(mod) {\n\t      for (var j = 0, len = arguments.length; j < len; j++) {\n\t        mod = arguments[j];\n\t        delete this.attrEqualityMods[mod];\n\t      }\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.enableSubstitutes = function() {\n\t      this.substitutesEnabled = true;\n\t      return this;\n\t    };\n\t    CssSelectorParser.prototype.disableSubstitutes = function() {\n\t      this.substitutesEnabled = false;\n\t      return this;\n\t    };\n\t    function isIdentStart(c) {\n\t      return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '-' || c === '_';\n\t    }\n\t    function isIdent(c) {\n\t      return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '-' || c === '_';\n\t    }\n\t    function isHex(c) {\n\t      return c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F' || c >= '0' && c <= '9';\n\t    }\n\t    function isDecimal(c) {\n\t      return c >= '0' && c <= '9';\n\t    }\n\t    function isAttrMatchOperator(chr) {\n\t      return chr === '=' || chr === '^' || chr === '$' || chr === '*' || chr === '~';\n\t    }\n\t    var identSpecialChars = {\n\t      '!': true,\n\t      '\"': true,\n\t      '#': true,\n\t      $: true,\n\t      '%': true,\n\t      '&': true,\n\t      '\\'': true,\n\t      '(': true,\n\t      ')': true,\n\t      '*': true,\n\t      '+': true,\n\t      ',': true,\n\t      '.': true,\n\t      '/': true,\n\t      ';': true,\n\t      '<': true,\n\t      '=': true,\n\t      '>': true,\n\t      '?': true,\n\t      '@': true,\n\t      '[': true,\n\t      '\\\\': true,\n\t      ']': true,\n\t      '^': true,\n\t      '`': true,\n\t      '{': true,\n\t      '|': true,\n\t      '}': true,\n\t      '~': true\n\t    };\n\t    var strReplacementsRev = {\n\t      '\\n': '\\\\n',\n\t      '\\r': '\\\\r',\n\t      '\\t': '\\\\t',\n\t      '\\f': '\\\\f',\n\t      '\\v': '\\\\v'\n\t    };\n\t    var singleQuoteEscapeChars = {\n\t      n: '\\n',\n\t      r: '\\r',\n\t      t: '\\t',\n\t      f: '\\f',\n\t      '\\\\': '\\\\',\n\t      '\\'': '\\''\n\t    };\n\t    var doubleQuotesEscapeChars = {\n\t      n: '\\n',\n\t      r: '\\r',\n\t      t: '\\t',\n\t      f: '\\f',\n\t      '\\\\': '\\\\',\n\t      '\"': '\"'\n\t    };\n\t    function ParseContext(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n\t      var chr, getIdent, getStr, l, skipWhitespace;\n\t      l = str.length;\n\t      chr = null;\n\t      getStr = function getStr(quote, escapeTable) {\n\t        var esc, hex, result;\n\t        result = '';\n\t        pos++;\n\t        chr = str.charAt(pos);\n\t        while (pos < l) {\n\t          if (chr === quote) {\n\t            pos++;\n\t            return result;\n\t          } else if (chr === '\\\\') {\n\t            pos++;\n\t            chr = str.charAt(pos);\n\t            if (chr === quote) {\n\t              result += quote;\n\t            } else if (esc = escapeTable[chr]) {\n\t              result += esc;\n\t            } else if (isHex(chr)) {\n\t              hex = chr;\n\t              pos++;\n\t              chr = str.charAt(pos);\n\t              while (isHex(chr)) {\n\t                hex += chr;\n\t                pos++;\n\t                chr = str.charAt(pos);\n\t              }\n\t              if (chr === ' ') {\n\t                pos++;\n\t                chr = str.charAt(pos);\n\t              }\n\t              result += String.fromCharCode(parseInt(hex, 16));\n\t              continue;\n\t            } else {\n\t              result += chr;\n\t            }\n\t          } else {\n\t            result += chr;\n\t          }\n\t          pos++;\n\t          chr = str.charAt(pos);\n\t        }\n\t        return result;\n\t      };\n\t      getIdent = function getIdent() {\n\t        var result = '';\n\t        chr = str.charAt(pos);\n\t        while (pos < l) {\n\t          if (isIdent(chr)) {\n\t            result += chr;\n\t          } else if (chr === '\\\\') {\n\t            pos++;\n\t            if (pos >= l) {\n\t              throw Error('Expected symbol but end of file reached.');\n\t            }\n\t            chr = str.charAt(pos);\n\t            if (identSpecialChars[chr]) {\n\t              result += chr;\n\t            } else if (isHex(chr)) {\n\t              var hex = chr;\n\t              pos++;\n\t              chr = str.charAt(pos);\n\t              while (isHex(chr)) {\n\t                hex += chr;\n\t                pos++;\n\t                chr = str.charAt(pos);\n\t              }\n\t              if (chr === ' ') {\n\t                pos++;\n\t                chr = str.charAt(pos);\n\t              }\n\t              result += String.fromCharCode(parseInt(hex, 16));\n\t              continue;\n\t            } else {\n\t              result += chr;\n\t            }\n\t          } else {\n\t            return result;\n\t          }\n\t          pos++;\n\t          chr = str.charAt(pos);\n\t        }\n\t        return result;\n\t      };\n\t      skipWhitespace = function skipWhitespace() {\n\t        chr = str.charAt(pos);\n\t        var result = false;\n\t        while (chr === ' ' || chr === '\\t' || chr === '\\n' || chr === '\\r' || chr === '\\f') {\n\t          result = true;\n\t          pos++;\n\t          chr = str.charAt(pos);\n\t        }\n\t        return result;\n\t      };\n\t      this.parse = function() {\n\t        var res = this.parseSelector();\n\t        if (pos < l) {\n\t          throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n\t        }\n\t        return res;\n\t      };\n\t      this.parseSelector = function() {\n\t        var res;\n\t        var selector = res = this.parseSingleSelector();\n\t        chr = str.charAt(pos);\n\t        while (chr === ',') {\n\t          pos++;\n\t          skipWhitespace();\n\t          if (res.type !== 'selectors') {\n\t            res = {\n\t              type: 'selectors',\n\t              selectors: [ selector ]\n\t            };\n\t          }\n\t          selector = this.parseSingleSelector();\n\t          if (!selector) {\n\t            throw Error('Rule expected after \",\".');\n\t          }\n\t          res.selectors.push(selector);\n\t        }\n\t        return res;\n\t      };\n\t      this.parseSingleSelector = function() {\n\t        skipWhitespace();\n\t        var selector = {\n\t          type: 'ruleSet'\n\t        };\n\t        var rule = this.parseRule();\n\t        if (!rule) {\n\t          return null;\n\t        }\n\t        var currentRule = selector;\n\t        while (rule) {\n\t          rule.type = 'rule';\n\t          currentRule.rule = rule;\n\t          currentRule = rule;\n\t          skipWhitespace();\n\t          chr = str.charAt(pos);\n\t          if (pos >= l || chr === ',' || chr === ')') {\n\t            break;\n\t          }\n\t          if (ruleNestingOperators[chr]) {\n\t            var op = chr;\n\t            pos++;\n\t            skipWhitespace();\n\t            rule = this.parseRule();\n\t            if (!rule) {\n\t              throw Error('Rule expected after \"' + op + '\".');\n\t            }\n\t            rule.nestingOperator = op;\n\t          } else {\n\t            rule = this.parseRule();\n\t            if (rule) {\n\t              rule.nestingOperator = null;\n\t            }\n\t          }\n\t        }\n\t        return selector;\n\t      };\n\t      this.parseRule = function() {\n\t        var rule = null;\n\t        while (pos < l) {\n\t          chr = str.charAt(pos);\n\t          if (chr === '*') {\n\t            pos++;\n\t            (rule = rule || {}).tagName = '*';\n\t          } else if (isIdentStart(chr) || chr === '\\\\') {\n\t            (rule = rule || {}).tagName = getIdent();\n\t          } else if (chr === '.') {\n\t            pos++;\n\t            rule = rule || {};\n\t            (rule.classNames = rule.classNames || []).push(getIdent());\n\t          } else if (chr === '#') {\n\t            pos++;\n\t            (rule = rule || {}).id = getIdent();\n\t          } else if (chr === '[') {\n\t            pos++;\n\t            skipWhitespace();\n\t            var attr = {\n\t              name: getIdent()\n\t            };\n\t            skipWhitespace();\n\t            if (chr === ']') {\n\t              pos++;\n\t            } else {\n\t              var operator = '';\n\t              if (attrEqualityMods[chr]) {\n\t                operator = chr;\n\t                pos++;\n\t                chr = str.charAt(pos);\n\t              }\n\t              if (pos >= l) {\n\t                throw Error('Expected \"=\" but end of file reached.');\n\t              }\n\t              if (chr !== '=') {\n\t                throw Error('Expected \"=\" but \"' + chr + '\" found.');\n\t              }\n\t              attr.operator = operator + '=';\n\t              pos++;\n\t              skipWhitespace();\n\t              var attrValue = '';\n\t              attr.valueType = 'string';\n\t              if (chr === '\"') {\n\t                attrValue = getStr('\"', doubleQuotesEscapeChars);\n\t              } else if (chr === '\\'') {\n\t                attrValue = getStr('\\'', singleQuoteEscapeChars);\n\t              } else if (substitutesEnabled && chr === '$') {\n\t                pos++;\n\t                attrValue = getIdent();\n\t                attr.valueType = 'substitute';\n\t              } else {\n\t                while (pos < l) {\n\t                  if (chr === ']') {\n\t                    break;\n\t                  }\n\t                  attrValue += chr;\n\t                  pos++;\n\t                  chr = str.charAt(pos);\n\t                }\n\t                attrValue = attrValue.trim();\n\t              }\n\t              skipWhitespace();\n\t              if (pos >= l) {\n\t                throw Error('Expected \"]\" but end of file reached.');\n\t              }\n\t              if (chr !== ']') {\n\t                throw Error('Expected \"]\" but \"' + chr + '\" found.');\n\t              }\n\t              pos++;\n\t              attr.value = attrValue;\n\t            }\n\t            rule = rule || {};\n\t            (rule.attrs = rule.attrs || []).push(attr);\n\t          } else if (chr === ':') {\n\t            pos++;\n\t            var pseudoName = getIdent();\n\t            var pseudo = {\n\t              name: pseudoName\n\t            };\n\t            if (chr === '(') {\n\t              pos++;\n\t              var value = '';\n\t              skipWhitespace();\n\t              if (pseudos[pseudoName] === 'selector') {\n\t                pseudo.valueType = 'selector';\n\t                value = this.parseSelector();\n\t              } else {\n\t                pseudo.valueType = pseudos[pseudoName] || 'string';\n\t                if (chr === '\"') {\n\t                  value = getStr('\"', doubleQuotesEscapeChars);\n\t                } else if (chr === '\\'') {\n\t                  value = getStr('\\'', singleQuoteEscapeChars);\n\t                } else if (substitutesEnabled && chr === '$') {\n\t                  pos++;\n\t                  value = getIdent();\n\t                  pseudo.valueType = 'substitute';\n\t                } else {\n\t                  while (pos < l) {\n\t                    if (chr === ')') {\n\t                      break;\n\t                    }\n\t                    value += chr;\n\t                    pos++;\n\t                    chr = str.charAt(pos);\n\t                  }\n\t                  value = value.trim();\n\t                }\n\t                skipWhitespace();\n\t              }\n\t              if (pos >= l) {\n\t                throw Error('Expected \")\" but end of file reached.');\n\t              }\n\t              if (chr !== ')') {\n\t                throw Error('Expected \")\" but \"' + chr + '\" found.');\n\t              }\n\t              pos++;\n\t              pseudo.value = value;\n\t            }\n\t            rule = rule || {};\n\t            (rule.pseudos = rule.pseudos || []).push(pseudo);\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t        return rule;\n\t      };\n\t      return this;\n\t    }\n\t    CssSelectorParser.prototype.parse = function(str) {\n\t      var context = new ParseContext(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n\t      return context.parse();\n\t    };\n\t    CssSelectorParser.prototype.escapeIdentifier = function(s) {\n\t      var result = '';\n\t      var i = 0;\n\t      var len = s.length;\n\t      while (i < len) {\n\t        var chr = s.charAt(i);\n\t        if (identSpecialChars[chr]) {\n\t          result += '\\\\' + chr;\n\t        } else {\n\t          if (!(chr === '_' || chr === '-' || chr >= 'A' && chr <= 'Z' || chr >= 'a' && chr <= 'z' || i !== 0 && chr >= '0' && chr <= '9')) {\n\t            var charCode = chr.charCodeAt(0);\n\t            if ((charCode & 63488) === 55296) {\n\t              var extraCharCode = s.charCodeAt(i++);\n\t              if ((charCode & 64512) !== 55296 || (extraCharCode & 64512) !== 56320) {\n\t                throw Error('UCS-2(decode): illegal sequence');\n\t              }\n\t              charCode = ((charCode & 1023) << 10) + (extraCharCode & 1023) + 65536;\n\t            }\n\t            result += '\\\\' + charCode.toString(16) + ' ';\n\t          } else {\n\t            result += chr;\n\t          }\n\t        }\n\t        i++;\n\t      }\n\t      return result;\n\t    };\n\t    CssSelectorParser.prototype.escapeStr = function(s) {\n\t      var result = '';\n\t      var i = 0;\n\t      var len = s.length;\n\t      var chr, replacement;\n\t      while (i < len) {\n\t        chr = s.charAt(i);\n\t        if (chr === '\"') {\n\t          chr = '\\\\\"';\n\t        } else if (chr === '\\\\') {\n\t          chr = '\\\\\\\\';\n\t        } else if (replacement = strReplacementsRev[chr]) {\n\t          chr = replacement;\n\t        }\n\t        result += chr;\n\t        i++;\n\t      }\n\t      return '\"' + result + '\"';\n\t    };\n\t    CssSelectorParser.prototype.render = function(path) {\n\t      return this._renderEntity(path).trim();\n\t    };\n\t    CssSelectorParser.prototype._renderEntity = function(entity) {\n\t      var currentEntity, parts, res;\n\t      res = '';\n\t      switch (entity.type) {\n\t       case 'ruleSet':\n\t        currentEntity = entity.rule;\n\t        parts = [];\n\t        while (currentEntity) {\n\t          if (currentEntity.nestingOperator) {\n\t            parts.push(currentEntity.nestingOperator);\n\t          }\n\t          parts.push(this._renderEntity(currentEntity));\n\t          currentEntity = currentEntity.rule;\n\t        }\n\t        res = parts.join(' ');\n\t        break;\n\t\n\t       case 'selectors':\n\t        res = entity.selectors.map(this._renderEntity, this).join(', ');\n\t        break;\n\t\n\t       case 'rule':\n\t        if (entity.tagName) {\n\t          if (entity.tagName === '*') {\n\t            res = '*';\n\t          } else {\n\t            res = this.escapeIdentifier(entity.tagName);\n\t          }\n\t        }\n\t        if (entity.id) {\n\t          res += '#' + this.escapeIdentifier(entity.id);\n\t        }\n\t        if (entity.classNames) {\n\t          res += entity.classNames.map(function(cn) {\n\t            return '.' + this.escapeIdentifier(cn);\n\t          }, this).join('');\n\t        }\n\t        if (entity.attrs) {\n\t          res += entity.attrs.map(function(attr) {\n\t            if (attr.operator) {\n\t              if (attr.valueType === 'substitute') {\n\t                return '[' + this.escapeIdentifier(attr.name) + attr.operator + '$' + attr.value + ']';\n\t              } else {\n\t                return '[' + this.escapeIdentifier(attr.name) + attr.operator + this.escapeStr(attr.value) + ']';\n\t              }\n\t            } else {\n\t              return '[' + this.escapeIdentifier(attr.name) + ']';\n\t            }\n\t          }, this).join('');\n\t        }\n\t        if (entity.pseudos) {\n\t          res += entity.pseudos.map(function(pseudo) {\n\t            if (pseudo.valueType) {\n\t              if (pseudo.valueType === 'selector') {\n\t                return ':' + this.escapeIdentifier(pseudo.name) + '(' + this._renderEntity(pseudo.value) + ')';\n\t              } else if (pseudo.valueType === 'substitute') {\n\t                return ':' + this.escapeIdentifier(pseudo.name) + '($' + pseudo.value + ')';\n\t              } else if (pseudo.valueType === 'numeric') {\n\t                return ':' + this.escapeIdentifier(pseudo.name) + '(' + pseudo.value + ')';\n\t              } else {\n\t                return ':' + this.escapeIdentifier(pseudo.name) + '(' + this.escapeIdentifier(pseudo.value) + ')';\n\t              }\n\t            } else {\n\t              return ':' + this.escapeIdentifier(pseudo.name);\n\t            }\n\t          }, this).join('');\n\t        }\n\t        break;\n\t\n\t       default:\n\t        throw Error('Unknown entity type: \"' + entity.type(+'\".'));\n\t      }\n\t      return res;\n\t    };\n\t    var parser = new CssSelectorParser();\n\t    parser.registerNestingOperators('>');\n\t    axe.utils.cssParser = parser;\n\t  })(axe);\n\t  'use strict';\n\t  function truncate(str, maxLength) {\n\t    maxLength = maxLength || 300;\n\t    if (str.length > maxLength) {\n\t      var index = str.indexOf('>');\n\t      str = str.substring(0, index + 1);\n\t    }\n\t    return str;\n\t  }\n\t  function getSource(element) {\n\t    var source = element.outerHTML;\n\t    if (!source && typeof XMLSerializer === 'function') {\n\t      source = new XMLSerializer().serializeToString(element);\n\t    }\n\t    return truncate(source || '');\n\t  }\n\t  function DqElement(element, options, spec) {\n\t    this._fromFrame = !!spec;\n\t    this.spec = spec || {};\n\t    if (options && options.absolutePaths) {\n\t      this._options = {\n\t        toRoot: true\n\t      };\n\t    }\n\t    this.source = this.spec.source !== undefined ? this.spec.source : getSource(element);\n\t    this._element = element;\n\t  }\n\t  DqElement.prototype = {\n\t    get selector() {\n\t      return this.spec.selector || [ axe.utils.getSelector(this.element, this._options) ];\n\t    },\n\t    get xpath() {\n\t      return this.spec.xpath || [ axe.utils.getXpath(this.element) ];\n\t    },\n\t    get element() {\n\t      return this._element;\n\t    },\n\t    get fromFrame() {\n\t      return this._fromFrame;\n\t    },\n\t    toJSON: function toJSON() {\n\t      'use strict';\n\t      return {\n\t        selector: this.selector,\n\t        source: this.source,\n\t        xpath: this.xpath\n\t      };\n\t    }\n\t  };\n\t  DqElement.fromFrame = function(node, options, frame) {\n\t    node.selector.unshift(frame.selector);\n\t    node.xpath.unshift(frame.xpath);\n\t    return new axe.utils.DqElement(frame.element, options, node);\n\t  };\n\t  axe.utils.DqElement = DqElement;\n\t  'use strict';\n\t  axe.utils.matchesSelector = function() {\n\t    'use strict';\n\t    var method;\n\t    function getMethod(win) {\n\t      var index, candidate, elProto = win.Element.prototype, candidates = [ 'matches', 'matchesSelector', 'mozMatchesSelector', 'webkitMatchesSelector', 'msMatchesSelector' ], length = candidates.length;\n\t      for (index = 0; index < length; index++) {\n\t        candidate = candidates[index];\n\t        if (elProto[candidate]) {\n\t          return candidate;\n\t        }\n\t      }\n\t    }\n\t    return function(node, selector) {\n\t      if (!method || !node[method]) {\n\t        method = getMethod(node.ownerDocument.defaultView);\n\t      }\n\t      return node[method](selector);\n\t    };\n\t  }();\n\t  'use strict';\n\t  axe.utils.escapeSelector = function(value) {\n\t    'use strict';\n\t    var string = String(value);\n\t    var length = string.length;\n\t    var index = -1;\n\t    var codeUnit;\n\t    var result = '';\n\t    var firstCodeUnit = string.charCodeAt(0);\n\t    while (++index < length) {\n\t      codeUnit = string.charCodeAt(index);\n\t      if (codeUnit == 0) {\n\t        throw new Error('INVALID_CHARACTER_ERR');\n\t      }\n\t      if (codeUnit >= 1 && codeUnit <= 31 || codeUnit >= 127 && codeUnit <= 159 || index == 0 && codeUnit >= 48 && codeUnit <= 57 || index == 1 && codeUnit >= 48 && codeUnit <= 57 && firstCodeUnit == 45) {\n\t        result += '\\\\' + codeUnit.toString(16) + ' ';\n\t        continue;\n\t      }\n\t      if (index == 1 && codeUnit == 45 && firstCodeUnit == 45) {\n\t        result += '\\\\' + string.charAt(index);\n\t        continue;\n\t      }\n\t      if (codeUnit >= 128 || codeUnit == 45 || codeUnit == 95 || codeUnit >= 48 && codeUnit <= 57 || codeUnit >= 65 && codeUnit <= 90 || codeUnit >= 97 && codeUnit <= 122) {\n\t        result += string.charAt(index);\n\t        continue;\n\t      }\n\t      result += '\\\\' + string.charAt(index);\n\t    }\n\t    return result;\n\t  };\n\t  'use strict';\n\t  axe.utils.extendMetaData = function(to, from) {\n\t    Object.assign(to, from);\n\t    Object.keys(from).filter(function(prop) {\n\t      return typeof from[prop] === 'function';\n\t    }).forEach(function(prop) {\n\t      to[prop] = null;\n\t      try {\n\t        to[prop] = from[prop](to);\n\t      } catch (e) {}\n\t    });\n\t  };\n\t  'use strict';\n\t  axe.utils.finalizeRuleResult = function(ruleResult) {\n\t    Object.assign(ruleResult, axe.utils.aggregateNodeResults(ruleResult.nodes));\n\t    delete ruleResult.nodes;\n\t    return ruleResult;\n\t  };\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  axe.utils.findBy = function(array, key, value) {\n\t    if (Array.isArray(array)) {\n\t      return array.find(function(obj) {\n\t        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj[key] === value;\n\t      });\n\t    }\n\t  };\n\t  'use strict';\n\t  var axe = axe || {\n\t    utils: {}\n\t  };\n\t  function virtualDOMfromNode(node, shadowId) {\n\t    return {\n\t      shadowId: shadowId,\n\t      children: [],\n\t      actualNode: node\n\t    };\n\t  }\n\t  function getSlotChildren(node) {\n\t    var retVal = [];\n\t    node = node.firstChild;\n\t    while (node) {\n\t      retVal.push(node);\n\t      node = node.nextSibling;\n\t    }\n\t    return retVal;\n\t  }\n\t  axe.utils.getFlattenedTree = function(node, shadowId) {\n\t    var retVal, realArray, nodeName;\n\t    function reduceShadowDOM(res, child) {\n\t      var replacements = axe.utils.getFlattenedTree(child, shadowId);\n\t      if (replacements) {\n\t        res = res.concat(replacements);\n\t      }\n\t      return res;\n\t    }\n\t    if (node.documentElement) {\n\t      node = node.documentElement;\n\t    }\n\t    nodeName = node.nodeName.toLowerCase();\n\t    if (axe.utils.isShadowRoot(node)) {\n\t      retVal = virtualDOMfromNode(node, shadowId);\n\t      shadowId = 'a' + Math.random().toString().substring(2);\n\t      realArray = Array.from(node.shadowRoot.childNodes);\n\t      retVal.children = realArray.reduce(reduceShadowDOM, []);\n\t      return [ retVal ];\n\t    } else {\n\t      if (nodeName === 'content') {\n\t        realArray = Array.from(node.getDistributedNodes());\n\t        return realArray.reduce(reduceShadowDOM, []);\n\t      } else if (nodeName === 'slot') {\n\t        realArray = Array.from(node.assignedNodes());\n\t        if (!realArray.length) {\n\t          realArray = getSlotChildren(node);\n\t        }\n\t        var styl = window.getComputedStyle(node);\n\t        if (false) {\n\t          retVal = virtualDOMfromNode(node, shadowId);\n\t          retVal.children = realArray.reduce(reduceShadowDOM, []);\n\t          return [ retVal ];\n\t        } else {\n\t          return realArray.reduce(reduceShadowDOM, []);\n\t        }\n\t      } else {\n\t        if (node.nodeType === 1) {\n\t          retVal = virtualDOMfromNode(node, shadowId);\n\t          realArray = Array.from(node.childNodes);\n\t          retVal.children = realArray.reduce(reduceShadowDOM, []);\n\t          return [ retVal ];\n\t        } else if (node.nodeType === 3) {\n\t          return [ virtualDOMfromNode(node) ];\n\t        }\n\t        return undefined;\n\t      }\n\t    }\n\t  };\n\t  axe.utils.getNodeFromTree = function(vNode, node) {\n\t    var found;\n\t    if (vNode.actualNode === node) {\n\t      return vNode;\n\t    }\n\t    vNode.children.forEach(function(candidate) {\n\t      var retVal;\n\t      if (candidate.actualNode === node) {\n\t        found = candidate;\n\t      } else {\n\t        retVal = axe.utils.getNodeFromTree(candidate, node);\n\t        if (retVal) {\n\t          found = retVal;\n\t        }\n\t      }\n\t    });\n\t    return found;\n\t  };\n\t  'use strict';\n\t  axe.utils.getAllChecks = function getAllChecks(object) {\n\t    'use strict';\n\t    var result = [];\n\t    return result.concat(object.any || []).concat(object.all || []).concat(object.none || []);\n\t  };\n\t  'use strict';\n\t  axe.utils.getCheckOption = function(check, ruleID, options) {\n\t    var ruleCheckOption = ((options.rules && options.rules[ruleID] || {}).checks || {})[check.id];\n\t    var checkOption = (options.checks || {})[check.id];\n\t    var enabled = check.enabled;\n\t    var opts = check.options;\n\t    if (checkOption) {\n\t      if (checkOption.hasOwnProperty('enabled')) {\n\t        enabled = checkOption.enabled;\n\t      }\n\t      if (checkOption.hasOwnProperty('options')) {\n\t        opts = checkOption.options;\n\t      }\n\t    }\n\t    if (ruleCheckOption) {\n\t      if (ruleCheckOption.hasOwnProperty('enabled')) {\n\t        enabled = ruleCheckOption.enabled;\n\t      }\n\t      if (ruleCheckOption.hasOwnProperty('options')) {\n\t        opts = ruleCheckOption.options;\n\t      }\n\t    }\n\t    return {\n\t      enabled: enabled,\n\t      options: opts,\n\t      absolutePaths: options.absolutePaths\n\t    };\n\t  };\n\t  'use strict';\n\t  var _slicedToArray = function() {\n\t    function sliceIterator(arr, i) {\n\t      var _arr = [];\n\t      var _n = true;\n\t      var _d = false;\n\t      var _e = undefined;\n\t      try {\n\t        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t          _arr.push(_s.value);\n\t          if (i && _arr.length === i) {\n\t            break;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _d = true;\n\t        _e = err;\n\t      } finally {\n\t        try {\n\t          if (!_n && _i['return']) {\n\t            _i['return']();\n\t          }\n\t        } finally {\n\t          if (_d) {\n\t            throw _e;\n\t          }\n\t        }\n\t      }\n\t      return _arr;\n\t    }\n\t    return function(arr, i) {\n\t      if (Array.isArray(arr)) {\n\t        return arr;\n\t      } else if (Symbol.iterator in Object(arr)) {\n\t        return sliceIterator(arr, i);\n\t      } else {\n\t        throw new TypeError('Invalid attempt to destructure non-iterable instance');\n\t      }\n\t    };\n\t  }();\n\t  function isMostlyNumbers() {\n\t    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t    return str.length !== 0 && (str.match(/[0-9]/g) || '').length >= str.length / 2;\n\t  }\n\t  function splitString(str, splitIndex) {\n\t    return [ str.substring(0, splitIndex), str.substring(splitIndex) ];\n\t  }\n\t  function uriParser(url) {\n\t    var original = url;\n\t    var protocol = '', domain = '', port = '', path = '', query = '', hash = '';\n\t    if (url.includes('#')) {\n\t      var _splitString = splitString(url, url.indexOf('#'));\n\t      var _splitString2 = _slicedToArray(_splitString, 2);\n\t      url = _splitString2[0];\n\t      hash = _splitString2[1];\n\t    }\n\t    if (url.includes('?')) {\n\t      var _splitString3 = splitString(url, url.indexOf('?'));\n\t      var _splitString4 = _slicedToArray(_splitString3, 2);\n\t      url = _splitString4[0];\n\t      query = _splitString4[1];\n\t    }\n\t    if (url.includes('://')) {\n\t      var _url$split = url.split('://');\n\t      var _url$split2 = _slicedToArray(_url$split, 2);\n\t      protocol = _url$split2[0];\n\t      url = _url$split2[1];\n\t      var _splitString5 = splitString(url, url.indexOf('/'));\n\t      var _splitString6 = _slicedToArray(_splitString5, 2);\n\t      domain = _splitString6[0];\n\t      url = _splitString6[1];\n\t    } else if (url.substr(0, 2) === '//') {\n\t      url = url.substr(2);\n\t      var _splitString7 = splitString(url, url.indexOf('/'));\n\t      var _splitString8 = _slicedToArray(_splitString7, 2);\n\t      domain = _splitString8[0];\n\t      url = _splitString8[1];\n\t    }\n\t    if (domain.substr(0, 4) === 'www.') {\n\t      domain = domain.substr(4);\n\t    }\n\t    if (domain && domain.includes(':')) {\n\t      var _splitString9 = splitString(domain, domain.indexOf(':'));\n\t      var _splitString10 = _slicedToArray(_splitString9, 2);\n\t      domain = _splitString10[0];\n\t      port = _splitString10[1];\n\t    }\n\t    path = url;\n\t    return {\n\t      original: original,\n\t      protocol: protocol,\n\t      domain: domain,\n\t      port: port,\n\t      path: path,\n\t      query: query,\n\t      hash: hash\n\t    };\n\t  }\n\t  axe.utils.getFriendlyUriEnd = function getFriendlyUriEnd() {\n\t    var uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    if (uri.length <= 1 || uri.substr(0, 5) === 'data:' || uri.substr(0, 11) === 'javascript:' || uri.includes('?')) {\n\t      return;\n\t    }\n\t    var currentDomain = options.currentDomain, _options$maxLength = options.maxLength, maxLength = _options$maxLength === undefined ? 25 : _options$maxLength;\n\t    var _uriParser = uriParser(uri), path = _uriParser.path, domain = _uriParser.domain, hash = _uriParser.hash;\n\t    var pathEnd = path.substr(path.substr(0, path.length - 2).lastIndexOf('/') + 1);\n\t    if (hash) {\n\t      if (pathEnd && (pathEnd + hash).length <= maxLength) {\n\t        return pathEnd + hash;\n\t      } else if (pathEnd.length < 2 && hash.length > 2 && hash.length <= maxLength) {\n\t        return hash;\n\t      } else {\n\t        return;\n\t      }\n\t    } else if (domain && domain.length < maxLength && path.length <= 1) {\n\t      return domain + path;\n\t    }\n\t    if (path === '/' + pathEnd && domain && currentDomain && domain !== currentDomain && (domain + path).length <= maxLength) {\n\t      return domain + path;\n\t    }\n\t    var lastDotIndex = pathEnd.lastIndexOf('.');\n\t    if ((lastDotIndex === -1 || lastDotIndex > 1) && (lastDotIndex !== -1 || pathEnd.length > 2) && pathEnd.length <= maxLength && !pathEnd.match(/index(\\.[a-zA-Z]{2-4})?/) && !isMostlyNumbers(pathEnd)) {\n\t      return pathEnd;\n\t    }\n\t  };\n\t  'use strict';\n\t  var escapeSelector = axe.utils.escapeSelector;\n\t  var isXHTML = void 0;\n\t  var ignoredAttributes = [ 'class', 'style', 'id', 'selected', 'checked', 'disabled', 'tabindex', 'aria-checked', 'aria-selected', 'aria-invalid', 'aria-activedescendant', 'aria-busy', 'aria-disabled', 'aria-expanded', 'aria-grabbed', 'aria-pressed', 'aria-valuenow' ];\n\t  var MAXATTRIBUTELENGTH = 31;\n\t  function getAttributeNameValue(node, at) {\n\t    var name = at.name;\n\t    var atnv = void 0;\n\t    if (name.indexOf('href') !== -1 || name.indexOf('src') !== -1) {\n\t      var friendly = axe.utils.getFriendlyUriEnd(node.getAttribute(name));\n\t      if (friendly) {\n\t        var value = encodeURI(friendly);\n\t        if (value) {\n\t          atnv = escapeSelector(at.name) + '$=\"' + value + '\"';\n\t        } else {\n\t          return;\n\t        }\n\t      } else {\n\t        atnv = escapeSelector(at.name) + '=\"' + node.getAttribute(name) + '\"';\n\t      }\n\t    } else {\n\t      atnv = escapeSelector(name) + '=\"' + escapeSelector(at.value) + '\"';\n\t    }\n\t    return atnv;\n\t  }\n\t  function countSort(a, b) {\n\t    return a.count < b.count ? -1 : a.count === b.count ? 0 : 1;\n\t  }\n\t  function filterAttributes(at) {\n\t    return !ignoredAttributes.includes(at.name) && at.name.indexOf(':') === -1 && (!at.value || at.value.length < MAXATTRIBUTELENGTH);\n\t  }\n\t  axe.utils.getSelectorData = function(domTree) {\n\t    var data = {\n\t      classes: {},\n\t      tags: {},\n\t      attributes: {}\n\t    };\n\t    domTree = Array.isArray(domTree) ? domTree : [ domTree ];\n\t    var currentLevel = domTree.slice();\n\t    var stack = [];\n\t    var _loop = function _loop() {\n\t      var current = currentLevel.pop();\n\t      var node = current.actualNode;\n\t      if (!!node.querySelectorAll) {\n\t        var tag = node.nodeName;\n\t        if (data.tags[tag]) {\n\t          data.tags[tag]++;\n\t        } else {\n\t          data.tags[tag] = 1;\n\t        }\n\t        if (node.classList) {\n\t          Array.from(node.classList).forEach(function(cl) {\n\t            var ind = escapeSelector(cl);\n\t            if (data.classes[ind]) {\n\t              data.classes[ind]++;\n\t            } else {\n\t              data.classes[ind] = 1;\n\t            }\n\t          });\n\t        }\n\t        if (node.attributes) {\n\t          Array.from(node.attributes).filter(filterAttributes).forEach(function(at) {\n\t            var atnv = getAttributeNameValue(node, at);\n\t            if (atnv) {\n\t              if (data.attributes[atnv]) {\n\t                data.attributes[atnv]++;\n\t              } else {\n\t                data.attributes[atnv] = 1;\n\t              }\n\t            }\n\t          });\n\t        }\n\t      }\n\t      if (current.children.length) {\n\t        stack.push(currentLevel);\n\t        currentLevel = current.children.slice();\n\t      }\n\t      while (!currentLevel.length && stack.length) {\n\t        currentLevel = stack.pop();\n\t      }\n\t    };\n\t    while (currentLevel.length) {\n\t      _loop();\n\t    }\n\t    return data;\n\t  };\n\t  function uncommonClasses(node, selectorData) {\n\t    var retVal = [];\n\t    var classData = selectorData.classes;\n\t    var tagData = selectorData.tags;\n\t    if (node.classList) {\n\t      Array.from(node.classList).forEach(function(cl) {\n\t        var ind = escapeSelector(cl);\n\t        if (classData[ind] < tagData[node.nodeName]) {\n\t          retVal.push({\n\t            name: ind,\n\t            count: classData[ind],\n\t            species: 'class'\n\t          });\n\t        }\n\t      });\n\t    }\n\t    return retVal.sort(countSort);\n\t  }\n\t  function getNthChildString(elm, selector) {\n\t    var siblings = elm.parentNode && Array.from(elm.parentNode.children || '') || [];\n\t    var hasMatchingSiblings = siblings.find(function(sibling) {\n\t      return sibling !== elm && axe.utils.matchesSelector(sibling, selector);\n\t    });\n\t    if (hasMatchingSiblings) {\n\t      var nthChild = 1 + siblings.indexOf(elm);\n\t      return ':nth-child(' + nthChild + ')';\n\t    } else {\n\t      return '';\n\t    }\n\t  }\n\t  function getElmId(elm) {\n\t    if (!elm.getAttribute('id')) {\n\t      return;\n\t    }\n\t    var doc = elm.getRootNode && elm.getRootNode() || document;\n\t    var id = '#' + escapeSelector(elm.getAttribute('id') || '');\n\t    if (!id.match(/player_uid_/) && doc.querySelectorAll(id).length === 1) {\n\t      return id;\n\t    }\n\t  }\n\t  function getBaseSelector(elm) {\n\t    if (typeof isXHTML === 'undefined') {\n\t      isXHTML = axe.utils.isXHTML(document);\n\t    }\n\t    return escapeSelector(isXHTML ? elm.localName : elm.nodeName.toLowerCase());\n\t  }\n\t  function uncommonAttributes(node, selectorData) {\n\t    var retVal = [];\n\t    var attData = selectorData.attributes;\n\t    var tagData = selectorData.tags;\n\t    if (node.attributes) {\n\t      Array.from(node.attributes).filter(filterAttributes).forEach(function(at) {\n\t        var atnv = getAttributeNameValue(node, at);\n\t        if (atnv && attData[atnv] < tagData[node.nodeName]) {\n\t          retVal.push({\n\t            name: atnv,\n\t            count: attData[atnv],\n\t            species: 'attribute'\n\t          });\n\t        }\n\t      });\n\t    }\n\t    return retVal.sort(countSort);\n\t  }\n\t  function getThreeLeastCommonFeatures(elm, selectorData) {\n\t    var selector = '';\n\t    var features = void 0;\n\t    var clss = uncommonClasses(elm, selectorData);\n\t    var atts = uncommonAttributes(elm, selectorData);\n\t    if (clss.length && clss[0].count === 1) {\n\t      features = [ clss[0] ];\n\t    } else if (atts.length && atts[0].count === 1) {\n\t      features = [ atts[0] ];\n\t      selector = getBaseSelector(elm);\n\t    } else {\n\t      features = clss.concat(atts);\n\t      features.sort(countSort);\n\t      features = features.slice(0, 3);\n\t      if (!features.some(function(feat) {\n\t        return feat.species === 'class';\n\t      })) {\n\t        selector = getBaseSelector(elm);\n\t      } else {\n\t        features.sort(function(a, b) {\n\t          return a.species !== b.species && a.species === 'class' ? -1 : a.species === b.species ? 0 : 1;\n\t        });\n\t      }\n\t    }\n\t    return selector += features.reduce(function(val, feat) {\n\t      switch (feat.species) {\n\t       case 'class':\n\t        return val + '.' + feat.name;\n\t\n\t       case 'attribute':\n\t        return val + '[' + feat.name + ']';\n\t      }\n\t      return val;\n\t    }, '');\n\t  }\n\t  function generateSelector(elm, options, doc) {\n\t    if (!axe._selectorData) {\n\t      throw new Error('Expect axe._selectorData to be set up');\n\t    }\n\t    var _options$toRoot = options.toRoot, toRoot = _options$toRoot === undefined ? false : _options$toRoot;\n\t    var selector = void 0;\n\t    var similar = void 0;\n\t    do {\n\t      var features = getElmId(elm);\n\t      if (!features) {\n\t        features = getThreeLeastCommonFeatures(elm, axe._selectorData);\n\t        features += getNthChildString(elm, features);\n\t      }\n\t      if (selector) {\n\t        selector = features + ' > ' + selector;\n\t      } else {\n\t        selector = features;\n\t      }\n\t      if (!similar) {\n\t        similar = Array.from(doc.querySelectorAll(selector));\n\t      } else {\n\t        similar = similar.filter(function(item) {\n\t          return axe.utils.matchesSelector(item, selector);\n\t        });\n\t      }\n\t      elm = elm.parentElement;\n\t    } while ((similar.length > 1 || toRoot) && elm && elm.nodeType !== 11);\n\t    if (similar.length === 1) {\n\t      return selector;\n\t    } else if (selector.indexOf(' > ') !== -1) {\n\t      return ':root' + selector.substring(selector.indexOf(' > '));\n\t    }\n\t    return ':root';\n\t  }\n\t  axe.utils.getSelector = function createUniqueSelector(elm) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    if (!elm) {\n\t      return '';\n\t    }\n\t    var doc = elm.getRootNode && elm.getRootNode() || document;\n\t    if (doc.nodeType === 11) {\n\t      var stack = [];\n\t      while (doc.nodeType === 11) {\n\t        stack.push({\n\t          elm: elm,\n\t          doc: doc\n\t        });\n\t        elm = doc.host;\n\t        doc = elm.getRootNode();\n\t      }\n\t      stack.push({\n\t        elm: elm,\n\t        doc: doc\n\t      });\n\t      return stack.reverse().map(function(comp) {\n\t        return generateSelector(comp.elm, options, comp.doc);\n\t      });\n\t    } else {\n\t      return generateSelector(elm, options, doc);\n\t    }\n\t  };\n\t  'use strict';\n\t  function getXPathArray(node, path) {\n\t    var sibling, count;\n\t    if (!node) {\n\t      return [];\n\t    }\n\t    if (!path && node.nodeType === 9) {\n\t      path = [ {\n\t        str: 'html'\n\t      } ];\n\t      return path;\n\t    }\n\t    path = path || [];\n\t    if (node.parentNode && node.parentNode !== node) {\n\t      path = getXPathArray(node.parentNode, path);\n\t    }\n\t    if (node.previousSibling) {\n\t      count = 1;\n\t      sibling = node.previousSibling;\n\t      do {\n\t        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n\t          count++;\n\t        }\n\t        sibling = sibling.previousSibling;\n\t      } while (sibling);\n\t      if (count === 1) {\n\t        count = null;\n\t      }\n\t    } else if (node.nextSibling) {\n\t      sibling = node.nextSibling;\n\t      do {\n\t        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n\t          count = 1;\n\t          sibling = null;\n\t        } else {\n\t          count = null;\n\t          sibling = sibling.previousSibling;\n\t        }\n\t      } while (sibling);\n\t    }\n\t    if (node.nodeType === 1) {\n\t      var element = {};\n\t      element.str = node.nodeName.toLowerCase();\n\t      var id = node.getAttribute && axe.utils.escapeSelector(node.getAttribute('id'));\n\t      if (id && node.ownerDocument.querySelectorAll('#' + id).length === 1) {\n\t        element.id = node.getAttribute('id');\n\t      }\n\t      if (count > 1) {\n\t        element.count = count;\n\t      }\n\t      path.push(element);\n\t    }\n\t    return path;\n\t  }\n\t  function xpathToString(xpathArray) {\n\t    return xpathArray.reduce(function(str, elm) {\n\t      if (elm.id) {\n\t        return '/' + elm.str + '[@id=\\'' + elm.id + '\\']';\n\t      } else {\n\t        return str + ('/' + elm.str) + (elm.count > 0 ? '[' + elm.count + ']' : '');\n\t      }\n\t    }, '');\n\t  }\n\t  axe.utils.getXpath = function getXpath(node) {\n\t    var xpathArray = getXPathArray(node);\n\t    return xpathToString(xpathArray);\n\t  };\n\t  'use strict';\n\t  var styleSheet;\n\t  function injectStyle(style) {\n\t    'use strict';\n\t    if (styleSheet && styleSheet.parentNode) {\n\t      if (styleSheet.styleSheet === undefined) {\n\t        styleSheet.appendChild(document.createTextNode(style));\n\t      } else {\n\t        styleSheet.styleSheet.cssText += style;\n\t      }\n\t      return styleSheet;\n\t    }\n\t    if (!style) {\n\t      return;\n\t    }\n\t    var head = document.head || document.getElementsByTagName('head')[0];\n\t    styleSheet = document.createElement('style');\n\t    styleSheet.type = 'text/css';\n\t    if (styleSheet.styleSheet === undefined) {\n\t      styleSheet.appendChild(document.createTextNode(style));\n\t    } else {\n\t      styleSheet.styleSheet.cssText = style;\n\t    }\n\t    head.appendChild(styleSheet);\n\t    return styleSheet;\n\t  }\n\t  axe.utils.injectStyle = injectStyle;\n\t  'use strict';\n\t  axe.utils.isHidden = function isHidden(el, recursed) {\n\t    'use strict';\n\t    var parent;\n\t    if (el.nodeType === 9) {\n\t      return false;\n\t    }\n\t    if (el.nodeType === 11) {\n\t      el = el.host;\n\t    }\n\t    var style = window.getComputedStyle(el, null);\n\t    if (!style || !el.parentNode || style.getPropertyValue('display') === 'none' || !recursed && style.getPropertyValue('visibility') === 'hidden' || el.getAttribute('aria-hidden') === 'true') {\n\t      return true;\n\t    }\n\t    parent = el.assignedSlot ? el.assignedSlot : el.parentNode;\n\t    return axe.utils.isHidden(parent, true);\n\t  };\n\t  'use strict';\n\t  var possibleShadowRoots = [ 'article', 'aside', 'blockquote', 'body', 'div', 'footer', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'main', 'nav', 'p', 'section', 'span' ];\n\t  axe.utils.isShadowRoot = function isShadowRoot(node) {\n\t    var nodeName = node.nodeName.toLowerCase();\n\t    if (node.shadowRoot) {\n\t      if (/^[a-z][a-z0-9_.-]*-[a-z0-9_.-]*$/.test(nodeName) || possibleShadowRoots.includes(nodeName)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t  'use strict';\n\t  axe.utils.isXHTML = function(doc) {\n\t    'use strict';\n\t    if (!doc.createElement) {\n\t      return false;\n\t    }\n\t    return doc.createElement('A').localName === 'A';\n\t  };\n\t  'use strict';\n\t  function pushFrame(resultSet, options, frameElement, frameSelector) {\n\t    'use strict';\n\t    var frameXpath = axe.utils.getXpath(frameElement);\n\t    var frameSpec = {\n\t      element: frameElement,\n\t      selector: frameSelector,\n\t      xpath: frameXpath\n\t    };\n\t    resultSet.forEach(function(res) {\n\t      res.node = axe.utils.DqElement.fromFrame(res.node, options, frameSpec);\n\t      var checks = axe.utils.getAllChecks(res);\n\t      if (checks.length) {\n\t        checks.forEach(function(check) {\n\t          check.relatedNodes = check.relatedNodes.map(function(node) {\n\t            return axe.utils.DqElement.fromFrame(node, options, frameSpec);\n\t          });\n\t        });\n\t      }\n\t    });\n\t  }\n\t  function spliceNodes(target, to) {\n\t    'use strict';\n\t    var firstFromFrame = to[0].node, sorterResult, t;\n\t    for (var i = 0, l = target.length; i < l; i++) {\n\t      t = target[i].node;\n\t      sorterResult = axe.utils.nodeSorter({\n\t        actualNode: t.element\n\t      }, {\n\t        actualNode: firstFromFrame.element\n\t      });\n\t      if (sorterResult > 0 || sorterResult === 0 && firstFromFrame.selector.length < t.selector.length) {\n\t        target.splice.apply(target, [ i, 0 ].concat(to));\n\t        return;\n\t      }\n\t    }\n\t    target.push.apply(target, to);\n\t  }\n\t  function normalizeResult(result) {\n\t    'use strict';\n\t    if (!result || !result.results) {\n\t      return null;\n\t    }\n\t    if (!Array.isArray(result.results)) {\n\t      return [ result.results ];\n\t    }\n\t    if (!result.results.length) {\n\t      return null;\n\t    }\n\t    return result.results;\n\t  }\n\t  axe.utils.mergeResults = function mergeResults(frameResults, options) {\n\t    'use strict';\n\t    var result = [];\n\t    frameResults.forEach(function(frameResult) {\n\t      var results = normalizeResult(frameResult);\n\t      if (!results || !results.length) {\n\t        return;\n\t      }\n\t      results.forEach(function(ruleResult) {\n\t        if (ruleResult.nodes && frameResult.frame) {\n\t          pushFrame(ruleResult.nodes, options, frameResult.frameElement, frameResult.frame);\n\t        }\n\t        var res = axe.utils.findBy(result, 'id', ruleResult.id);\n\t        if (!res) {\n\t          result.push(ruleResult);\n\t        } else {\n\t          if (ruleResult.nodes.length) {\n\t            spliceNodes(res.nodes, ruleResult.nodes);\n\t          }\n\t        }\n\t      });\n\t    });\n\t    return result;\n\t  };\n\t  'use strict';\n\t  axe.utils.nodeSorter = function nodeSorter(a, b) {\n\t    'use strict';\n\t    if (a.actualNode === b.actualNode) {\n\t      return 0;\n\t    }\n\t    if (a.actualNode.compareDocumentPosition(b.actualNode) & 4) {\n\t      return -1;\n\t    }\n\t    return 1;\n\t  };\n\t  'use strict';\n\t  utils.performanceTimer = function() {\n\t    'use strict';\n\t    function now() {\n\t      if (window.performance && window.performance) {\n\t        return window.performance.now();\n\t      }\n\t    }\n\t    var originalTime = null;\n\t    var lastRecordedTime = now();\n\t    return {\n\t      start: function start() {\n\t        this.mark('mark_axe_start');\n\t      },\n\t      end: function end() {\n\t        this.mark('mark_axe_end');\n\t        this.measure('axe', 'mark_axe_start', 'mark_axe_end');\n\t        this.logMeasures('axe');\n\t      },\n\t      auditStart: function auditStart() {\n\t        this.mark('mark_audit_start');\n\t      },\n\t      auditEnd: function auditEnd() {\n\t        this.mark('mark_audit_end');\n\t        this.measure('audit_start_to_end', 'mark_audit_start', 'mark_audit_end');\n\t        this.logMeasures();\n\t      },\n\t      mark: function mark(markName) {\n\t        if (window.performance && window.performance.mark !== undefined) {\n\t          window.performance.mark(markName);\n\t        }\n\t      },\n\t      measure: function measure(measureName, startMark, endMark) {\n\t        if (window.performance && window.performance.measure !== undefined) {\n\t          window.performance.measure(measureName, startMark, endMark);\n\t        }\n\t      },\n\t      logMeasures: function logMeasures(measureName) {\n\t        function log(req) {\n\t          axe.log('Measure ' + req.name + ' took ' + req.duration + 'ms');\n\t        }\n\t        if (window.performance && window.performance.getEntriesByType !== undefined) {\n\t          var measures = window.performance.getEntriesByType('measure');\n\t          for (var i = 0; i < measures.length; ++i) {\n\t            var req = measures[i];\n\t            if (req.name === measureName) {\n\t              log(req);\n\t              return;\n\t            }\n\t            log(req);\n\t          }\n\t        }\n\t      },\n\t      timeElapsed: function timeElapsed() {\n\t        return now() - lastRecordedTime;\n\t      },\n\t      reset: function reset() {\n\t        if (!originalTime) {\n\t          originalTime = now();\n\t        }\n\t        lastRecordedTime = now();\n\t      }\n\t    };\n\t  }();\n\t  'use strict';\n\t  if (typeof Object.assign !== 'function') {\n\t    (function() {\n\t      Object.assign = function(target) {\n\t        'use strict';\n\t        if (target === undefined || target === null) {\n\t          throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t        var output = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t          var source = arguments[index];\n\t          if (source !== undefined && source !== null) {\n\t            for (var nextKey in source) {\n\t              if (source.hasOwnProperty(nextKey)) {\n\t                output[nextKey] = source[nextKey];\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return output;\n\t      };\n\t    })();\n\t  }\n\t  if (!Array.prototype.find) {\n\t    Object.defineProperty(Array.prototype, 'find', {\n\t      value: function value(predicate) {\n\t        if (this === null) {\n\t          throw new TypeError('Array.prototype.find called on null or undefined');\n\t        }\n\t        if (typeof predicate !== 'function') {\n\t          throw new TypeError('predicate must be a function');\n\t        }\n\t        var list = Object(this);\n\t        var length = list.length >>> 0;\n\t        var thisArg = arguments[1];\n\t        var value;\n\t        for (var i = 0; i < length; i++) {\n\t          value = list[i];\n\t          if (predicate.call(thisArg, value, i, list)) {\n\t            return value;\n\t          }\n\t        }\n\t        return undefined;\n\t      }\n\t    });\n\t  }\n\t  axe.utils.pollyfillElementsFromPoint = function() {\n\t    if (document.elementsFromPoint) {\n\t      return document.elementsFromPoint;\n\t    }\n\t    if (document.msElementsFromPoint) {\n\t      return document.msElementsFromPoint;\n\t    }\n\t    var usePointer = function() {\n\t      var element = document.createElement('x');\n\t      element.style.cssText = 'pointer-events:auto';\n\t      return element.style.pointerEvents === 'auto';\n\t    }();\n\t    var cssProp = usePointer ? 'pointer-events' : 'visibility';\n\t    var cssDisableVal = usePointer ? 'none' : 'hidden';\n\t    var style = document.createElement('style');\n\t    style.innerHTML = usePointer ? '* { pointer-events: all }' : '* { visibility: visible }';\n\t    return function(x, y) {\n\t      var current, i, d;\n\t      var elements = [];\n\t      var previousPointerEvents = [];\n\t      document.head.appendChild(style);\n\t      while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1) {\n\t        elements.push(current);\n\t        previousPointerEvents.push({\n\t          value: current.style.getPropertyValue(cssProp),\n\t          priority: current.style.getPropertyPriority(cssProp)\n\t        });\n\t        current.style.setProperty(cssProp, cssDisableVal, 'important');\n\t      }\n\t      if (elements.indexOf(document.documentElement) < elements.length - 1) {\n\t        elements.splice(elements.indexOf(document.documentElement), 1);\n\t        elements.push(document.documentElement);\n\t      }\n\t      for (i = previousPointerEvents.length; !!(d = previousPointerEvents[--i]); ) {\n\t        elements[i].style.setProperty(cssProp, d.value ? d.value : '', d.priority);\n\t      }\n\t      document.head.removeChild(style);\n\t      return elements;\n\t    };\n\t  };\n\t  if (typeof window.addEventListener === 'function') {\n\t    document.elementsFromPoint = axe.utils.pollyfillElementsFromPoint();\n\t  }\n\t  if (!Array.prototype.includes) {\n\t    Object.defineProperty(Array.prototype, 'includes', {\n\t      value: function value(searchElement) {\n\t        'use strict';\n\t        var O = Object(this);\n\t        var len = parseInt(O.length, 10) || 0;\n\t        if (len === 0) {\n\t          return false;\n\t        }\n\t        var n = parseInt(arguments[1], 10) || 0;\n\t        var k;\n\t        if (n >= 0) {\n\t          k = n;\n\t        } else {\n\t          k = len + n;\n\t          if (k < 0) {\n\t            k = 0;\n\t          }\n\t        }\n\t        var currentElement;\n\t        while (k < len) {\n\t          currentElement = O[k];\n\t          if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {\n\t            return true;\n\t          }\n\t          k++;\n\t        }\n\t        return false;\n\t      }\n\t    });\n\t  }\n\t  if (!Array.prototype.some) {\n\t    Object.defineProperty(Array.prototype, 'some', {\n\t      value: function value(fun) {\n\t        'use strict';\n\t        if (this == null) {\n\t          throw new TypeError('Array.prototype.some called on null or undefined');\n\t        }\n\t        if (typeof fun !== 'function') {\n\t          throw new TypeError();\n\t        }\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\t        for (var i = 0; i < len; i++) {\n\t          if (i in t && fun.call(thisArg, t[i], i, t)) {\n\t            return true;\n\t          }\n\t        }\n\t        return false;\n\t      }\n\t    });\n\t  }\n\t  if (!Array.from) {\n\t    Object.defineProperty(Array, 'from', {\n\t      value: function() {\n\t        var toStr = Object.prototype.toString;\n\t        var isCallable = function isCallable(fn) {\n\t          return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n\t        };\n\t        var toInteger = function toInteger(value) {\n\t          var number = Number(value);\n\t          if (isNaN(number)) {\n\t            return 0;\n\t          }\n\t          if (number === 0 || !isFinite(number)) {\n\t            return number;\n\t          }\n\t          return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n\t        };\n\t        var maxSafeInteger = Math.pow(2, 53) - 1;\n\t        var toLength = function toLength(value) {\n\t          var len = toInteger(value);\n\t          return Math.min(Math.max(len, 0), maxSafeInteger);\n\t        };\n\t        return function from(arrayLike) {\n\t          var C = this;\n\t          var items = Object(arrayLike);\n\t          if (arrayLike == null) {\n\t            throw new TypeError('Array.from requires an array-like object - not null or undefined');\n\t          }\n\t          var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\t          var T;\n\t          if (typeof mapFn !== 'undefined') {\n\t            if (!isCallable(mapFn)) {\n\t              throw new TypeError('Array.from: when provided, the second argument must be a function');\n\t            }\n\t            if (arguments.length > 2) {\n\t              T = arguments[2];\n\t            }\n\t          }\n\t          var len = toLength(items.length);\n\t          var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\t          var k = 0;\n\t          var kValue;\n\t          while (k < len) {\n\t            kValue = items[k];\n\t            if (mapFn) {\n\t              A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n\t            } else {\n\t              A[k] = kValue;\n\t            }\n\t            k += 1;\n\t          }\n\t          A.length = len;\n\t          return A;\n\t        };\n\t      }()\n\t    });\n\t  }\n\t  if (!String.prototype.includes) {\n\t    String.prototype.includes = function(search, start) {\n\t      if (typeof start !== 'number') {\n\t        start = 0;\n\t      }\n\t      if (start + search.length > this.length) {\n\t        return false;\n\t      } else {\n\t        return this.indexOf(search, start) !== -1;\n\t      }\n\t    };\n\t  }\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  function getIncompleteReason(checkData, messages) {\n\t    function getDefaultMsg(messages) {\n\t      if (messages.incomplete && messages.incomplete.default) {\n\t        return messages.incomplete.default;\n\t      } else {\n\t        return helpers.incompleteFallbackMessage();\n\t      }\n\t    }\n\t    if (checkData && checkData.missingData) {\n\t      try {\n\t        var msg = messages.incomplete[checkData.missingData[0].reason];\n\t        if (!msg) {\n\t          throw new Error();\n\t        }\n\t        return msg;\n\t      } catch (e) {\n\t        if (typeof checkData.missingData === 'string') {\n\t          return messages.incomplete[checkData.missingData];\n\t        } else {\n\t          return getDefaultMsg(messages);\n\t        }\n\t      }\n\t    } else {\n\t      return getDefaultMsg(messages);\n\t    }\n\t  }\n\t  function extender(checksData, shouldBeTrue) {\n\t    'use strict';\n\t    return function(check) {\n\t      var sourceData = checksData[check.id] || {};\n\t      var messages = sourceData.messages || {};\n\t      var data = Object.assign({}, sourceData);\n\t      delete data.messages;\n\t      if (check.result === undefined) {\n\t        if (_typeof(messages.incomplete) === 'object') {\n\t          data.message = function() {\n\t            return getIncompleteReason(check.data, messages);\n\t          };\n\t        } else {\n\t          data.message = messages.incomplete;\n\t        }\n\t      } else {\n\t        data.message = check.result === shouldBeTrue ? messages.pass : messages.fail;\n\t      }\n\t      axe.utils.extendMetaData(check, data);\n\t    };\n\t  }\n\t  axe.utils.publishMetaData = function(ruleResult) {\n\t    'use strict';\n\t    var checksData = axe._audit.data.checks || {};\n\t    var rulesData = axe._audit.data.rules || {};\n\t    var rule = axe.utils.findBy(axe._audit.rules, 'id', ruleResult.id) || {};\n\t    ruleResult.tags = axe.utils.clone(rule.tags || []);\n\t    var shouldBeTrue = extender(checksData, true);\n\t    var shouldBeFalse = extender(checksData, false);\n\t    ruleResult.nodes.forEach(function(detail) {\n\t      detail.any.forEach(shouldBeTrue);\n\t      detail.all.forEach(shouldBeTrue);\n\t      detail.none.forEach(shouldBeFalse);\n\t    });\n\t    axe.utils.extendMetaData(ruleResult, axe.utils.clone(rulesData[ruleResult.id] || {}));\n\t  };\n\t  'use strict';\n\t  var convertExpressions = function convertExpressions() {};\n\t  var matchExpressions = function matchExpressions() {};\n\t  function matchesTag(node, exp) {\n\t    return node.nodeType === 1 && (exp.tag === '*' || node.nodeName.toLowerCase() === exp.tag);\n\t  }\n\t  function matchesClasses(node, exp) {\n\t    return !exp.classes || exp.classes.reduce(function(result, cl) {\n\t      return result && node.className && node.className.match(cl.regexp);\n\t    }, true);\n\t  }\n\t  function matchesAttributes(node, exp) {\n\t    return !exp.attributes || exp.attributes.reduce(function(result, att) {\n\t      var nodeAtt = node.getAttribute(att.key);\n\t      return result && nodeAtt !== null && (!att.value || att.test(nodeAtt));\n\t    }, true);\n\t  }\n\t  function matchesId(node, exp) {\n\t    return !exp.id || node.id === exp.id;\n\t  }\n\t  function matchesPseudos(target, exp) {\n\t    if (!exp.pseudos || exp.pseudos.reduce(function(result, pseudo) {\n\t      if (pseudo.name === 'not') {\n\t        return result && !matchExpressions([ target ], pseudo.expressions, false).length;\n\t      }\n\t      throw new Error('the pseudo selector ' + pseudo.name + ' has not yet been implemented');\n\t    }, true)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  var escapeRegExp = function() {\n\t    /*! Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License */\n\t    var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g;\n\t    var to = '\\\\';\n\t    return function(string) {\n\t      return string.replace(from, to);\n\t    };\n\t  }();\n\t  var reUnescape = /\\\\/g;\n\t  function convertAttributes(atts) {\n\t    /*! Credit Mootools Copyright Mootools, MIT License */\n\t    if (!atts) {\n\t      return;\n\t    }\n\t    return atts.map(function(att) {\n\t      var attributeKey = att.name.replace(reUnescape, '');\n\t      var attributeValue = (att.value || '').replace(reUnescape, '');\n\t      var test, regexp;\n\t      switch (att.operator) {\n\t       case '^=':\n\t        regexp = new RegExp('^' + escapeRegExp(attributeValue));\n\t        break;\n\t\n\t       case '$=':\n\t        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\n\t        break;\n\t\n\t       case '~=':\n\t        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\n\t        break;\n\t\n\t       case '|=':\n\t        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\n\t        break;\n\t\n\t       case '=':\n\t        test = function test(value) {\n\t          return attributeValue === value;\n\t        };\n\t        break;\n\t\n\t       case '*=':\n\t        test = function test(value) {\n\t          return value && value.includes(attributeValue);\n\t        };\n\t        break;\n\t\n\t       case '!=':\n\t        test = function test(value) {\n\t          return attributeValue !== value;\n\t        };\n\t        break;\n\t\n\t       default:\n\t        test = function test(value) {\n\t          return !!value;\n\t        };\n\t      }\n\t      if (attributeValue === '' && /^[*$^]=$/.test(att.operator)) {\n\t        test = function test() {\n\t          return false;\n\t        };\n\t      }\n\t      if (!test) {\n\t        test = function test(value) {\n\t          return value && regexp.test(value);\n\t        };\n\t      }\n\t      return {\n\t        key: attributeKey,\n\t        value: attributeValue,\n\t        test: test\n\t      };\n\t    });\n\t  }\n\t  function convertClasses(classes) {\n\t    if (!classes) {\n\t      return;\n\t    }\n\t    return classes.map(function(className) {\n\t      className = className.replace(reUnescape, '');\n\t      return {\n\t        value: className,\n\t        regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\n\t      };\n\t    });\n\t  }\n\t  function convertPseudos(pseudos) {\n\t    if (!pseudos) {\n\t      return;\n\t    }\n\t    return pseudos.map(function(p) {\n\t      var expressions;\n\t      if (p.name === 'not') {\n\t        expressions = axe.utils.cssParser.parse(p.value);\n\t        expressions = expressions.selectors ? expressions.selectors : [ expressions ];\n\t        expressions = convertExpressions(expressions);\n\t      }\n\t      return {\n\t        name: p.name,\n\t        expressions: expressions,\n\t        value: p.value\n\t      };\n\t    });\n\t  }\n\t  convertExpressions = function convertExpressions(expressions) {\n\t    return expressions.map(function(exp) {\n\t      var newExp = [];\n\t      var rule = exp.rule;\n\t      while (rule) {\n\t        newExp.push({\n\t          tag: rule.tagName ? rule.tagName.toLowerCase() : '*',\n\t          combinator: rule.nestingOperator ? rule.nestingOperator : ' ',\n\t          id: rule.id,\n\t          attributes: convertAttributes(rule.attrs),\n\t          classes: convertClasses(rule.classNames),\n\t          pseudos: convertPseudos(rule.pseudos)\n\t        });\n\t        rule = rule.rule;\n\t      }\n\t      return newExp;\n\t    });\n\t  };\n\t  function createLocalVariables(nodes, anyLevel, thisLevel, parentShadowId) {\n\t    var retVal = {\n\t      nodes: nodes.slice(),\n\t      anyLevel: anyLevel,\n\t      thisLevel: thisLevel,\n\t      parentShadowId: parentShadowId\n\t    };\n\t    retVal.nodes.reverse();\n\t    return retVal;\n\t  }\n\t  function matchesSelector(node, exp) {\n\t    return matchesTag(node.actualNode, exp[0]) && matchesClasses(node.actualNode, exp[0]) && matchesAttributes(node.actualNode, exp[0]) && matchesId(node.actualNode, exp[0]) && matchesPseudos(node, exp[0]);\n\t  }\n\t  matchExpressions = function matchExpressions(domTree, expressions, recurse, filter) {\n\t    var stack = [];\n\t    var nodes = Array.isArray(domTree) ? domTree : [ domTree ];\n\t    var currentLevel = createLocalVariables(nodes, expressions, [], domTree[0].shadowId);\n\t    var result = [];\n\t    while (currentLevel.nodes.length) {\n\t      var node = currentLevel.nodes.pop();\n\t      var childOnly = [];\n\t      var childAny = [];\n\t      var combined = currentLevel.anyLevel.slice().concat(currentLevel.thisLevel);\n\t      var added = false;\n\t      for (var i = 0; i < combined.length; i++) {\n\t        var exp = combined[i];\n\t        if (matchesSelector(node, exp) && (!exp[0].id || node.shadowId === currentLevel.parentShadowId)) {\n\t          if (exp.length === 1) {\n\t            if (!added && (!filter || filter(node))) {\n\t              result.push(node);\n\t              added = true;\n\t            }\n\t          } else {\n\t            var rest = exp.slice(1);\n\t            if ([ ' ', '>' ].includes(rest[0].combinator) === false) {\n\t              throw new Error('axe.utils.querySelectorAll does not support the combinator: ' + exp[1].combinator);\n\t            }\n\t            if (rest[0].combinator === '>') {\n\t              childOnly.push(rest);\n\t            } else {\n\t              childAny.push(rest);\n\t            }\n\t          }\n\t        }\n\t        if (currentLevel.anyLevel.includes(exp) && (!exp[0].id || node.shadowId === currentLevel.parentShadowId)) {\n\t          childAny.push(exp);\n\t        }\n\t      }\n\t      if (node.children && node.children.length && recurse) {\n\t        stack.push(currentLevel);\n\t        currentLevel = createLocalVariables(node.children, childAny, childOnly, node.shadowId);\n\t      }\n\t      while (!currentLevel.nodes.length && stack.length) {\n\t        currentLevel = stack.pop();\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t  axe.utils.querySelectorAll = function(domTree, selector) {\n\t    return axe.utils.querySelectorAllFilter(domTree, selector);\n\t  };\n\t  axe.utils.querySelectorAllFilter = function(domTree, selector, filter) {\n\t    domTree = Array.isArray(domTree) ? domTree : [ domTree ];\n\t    var expressions = axe.utils.cssParser.parse(selector);\n\t    expressions = expressions.selectors ? expressions.selectors : [ expressions ];\n\t    expressions = convertExpressions(expressions);\n\t    return matchExpressions(domTree, expressions, true, filter);\n\t  };\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  (function() {\n\t    'use strict';\n\t    function noop() {}\n\t    function funcGuard(f) {\n\t      if (typeof f !== 'function') {\n\t        throw new TypeError('Queue methods require functions as arguments');\n\t      }\n\t    }\n\t    function queue() {\n\t      var tasks = [];\n\t      var started = 0;\n\t      var remaining = 0;\n\t      var completeQueue = noop;\n\t      var complete = false;\n\t      var err;\n\t      var defaultFail = function defaultFail(e) {\n\t        err = e;\n\t        setTimeout(function() {\n\t          if (err !== undefined && err !== null) {\n\t            axe.log('Uncaught error (of queue)', err);\n\t          }\n\t        }, 1);\n\t      };\n\t      var failed = defaultFail;\n\t      function createResolve(i) {\n\t        return function(r) {\n\t          tasks[i] = r;\n\t          remaining -= 1;\n\t          if (!remaining && completeQueue !== noop) {\n\t            complete = true;\n\t            completeQueue(tasks);\n\t          }\n\t        };\n\t      }\n\t      function abort(msg) {\n\t        completeQueue = noop;\n\t        failed(msg);\n\t        return tasks;\n\t      }\n\t      function pop() {\n\t        var length = tasks.length;\n\t        for (;started < length; started++) {\n\t          var task = tasks[started];\n\t          try {\n\t            task.call(null, createResolve(started), abort);\n\t          } catch (e) {\n\t            abort(e);\n\t          }\n\t        }\n\t      }\n\t      var q = {\n\t        defer: function defer(fn) {\n\t          if ((typeof fn === 'undefined' ? 'undefined' : _typeof(fn)) === 'object' && fn.then && fn.catch) {\n\t            var defer = fn;\n\t            fn = function fn(resolve, reject) {\n\t              defer.then(resolve).catch(reject);\n\t            };\n\t          }\n\t          funcGuard(fn);\n\t          if (err !== undefined) {\n\t            return;\n\t          } else if (complete) {\n\t            throw new Error('Queue already completed');\n\t          }\n\t          tasks.push(fn);\n\t          ++remaining;\n\t          pop();\n\t          return q;\n\t        },\n\t        then: function then(fn) {\n\t          funcGuard(fn);\n\t          if (completeQueue !== noop) {\n\t            throw new Error('queue `then` already set');\n\t          }\n\t          if (!err) {\n\t            completeQueue = fn;\n\t            if (!remaining) {\n\t              complete = true;\n\t              completeQueue(tasks);\n\t            }\n\t          }\n\t          return q;\n\t        },\n\t        catch: function _catch(fn) {\n\t          funcGuard(fn);\n\t          if (failed !== defaultFail) {\n\t            throw new Error('queue `catch` already set');\n\t          }\n\t          if (!err) {\n\t            failed = fn;\n\t          } else {\n\t            fn(err);\n\t            err = null;\n\t          }\n\t          return q;\n\t        },\n\t        abort: abort\n\t      };\n\t      return q;\n\t    }\n\t    axe.utils.queue = queue;\n\t  })();\n\t  'use strict';\n\t  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n\t    return typeof obj;\n\t  } : function(obj) {\n\t    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n\t  };\n\t  (function(exports) {\n\t    'use strict';\n\t    var messages = {}, subscribers = {}, errorTypes = Object.freeze([ 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError', 'TypeError', 'URIError' ]);\n\t    function _getSource() {\n\t      var application = 'axe', version = '', src;\n\t      if (typeof axe !== 'undefined' && axe._audit && !axe._audit.application) {\n\t        application = axe._audit.application;\n\t      }\n\t      if (typeof axe !== 'undefined') {\n\t        version = axe.version;\n\t      }\n\t      src = application + '.' + version;\n\t      return src;\n\t    }\n\t    function verify(postedMessage) {\n\t      if ((typeof postedMessage === 'undefined' ? 'undefined' : _typeof(postedMessage)) === 'object' && typeof postedMessage.uuid === 'string' && postedMessage._respondable === true) {\n\t        var messageSource = _getSource();\n\t        return postedMessage._source === messageSource || postedMessage._source === 'axe.x.y.z' || messageSource === 'axe.x.y.z';\n\t      }\n\t      return false;\n\t    }\n\t    function post(win, topic, message, uuid, keepalive, callback) {\n\t      var error;\n\t      if (message instanceof Error) {\n\t        error = {\n\t          name: message.name,\n\t          message: message.message,\n\t          stack: message.stack\n\t        };\n\t        message = undefined;\n\t      }\n\t      var data = {\n\t        uuid: uuid,\n\t        topic: topic,\n\t        message: message,\n\t        error: error,\n\t        _respondable: true,\n\t        _source: _getSource(),\n\t        _keepalive: keepalive\n\t      };\n\t      if (typeof callback === 'function') {\n\t        messages[uuid] = callback;\n\t      }\n\t      win.postMessage(JSON.stringify(data), '*');\n\t    }\n\t    function respondable(win, topic, message, keepalive, callback) {\n\t      var id = uuid.v1();\n\t      post(win, topic, message, id, keepalive, callback);\n\t    }\n\t    respondable.subscribe = function(topic, callback) {\n\t      subscribers[topic] = callback;\n\t    };\n\t    respondable.isInFrame = function(win) {\n\t      win = win || window;\n\t      return !!win.frameElement;\n\t    };\n\t    function createResponder(source, topic, uuid) {\n\t      return function(message, keepalive, callback) {\n\t        post(source, topic, message, uuid, keepalive, callback);\n\t      };\n\t    }\n\t    function publish(target, data, keepalive) {\n\t      var topic = data.topic;\n\t      var subscriber = subscribers[topic];\n\t      if (subscriber) {\n\t        var responder = createResponder(target, null, data.uuid);\n\t        subscriber(data.message, keepalive, responder);\n\t      }\n\t    }\n\t    function buildErrorObject(error) {\n\t      var msg = error.message || 'Unknown error occurred';\n\t      var errorName = errorTypes.includes(error.name) ? error.name : 'Error';\n\t      var ErrConstructor = window[errorName] || Error;\n\t      if (error.stack) {\n\t        msg += '\\n' + error.stack.replace(error.message, '');\n\t      }\n\t      return new ErrConstructor(msg);\n\t    }\n\t    function parseMessage(dataString) {\n\t      var data;\n\t      if (typeof dataString !== 'string') {\n\t        return;\n\t      }\n\t      try {\n\t        data = JSON.parse(dataString);\n\t      } catch (ex) {}\n\t      if (!verify(data)) {\n\t        return;\n\t      }\n\t      if (_typeof(data.error) === 'object') {\n\t        data.error = buildErrorObject(data.error);\n\t      } else {\n\t        data.error = undefined;\n\t      }\n\t      return data;\n\t    }\n\t    if (typeof window.addEventListener === 'function') {\n\t      window.addEventListener('message', function(e) {\n\t        var data = parseMessage(e.data);\n\t        if (!data) {\n\t          return;\n\t        }\n\t        var uuid = data.uuid;\n\t        var keepalive = data._keepalive;\n\t        var callback = messages[uuid];\n\t        if (callback) {\n\t          var result = data.error || data.message;\n\t          var responder = createResponder(e.source, data.topic, uuid);\n\t          callback(result, keepalive, responder);\n\t          if (!keepalive) {\n\t            delete messages[uuid];\n\t          }\n\t        }\n\t        if (!data.error) {\n\t          try {\n\t            publish(e.source, data, keepalive);\n\t          } catch (err) {\n\t            post(e.source, data.topic, err, uuid, false);\n\t          }\n\t        }\n\t      }, false);\n\t    }\n\t    exports.respondable = respondable;\n\t  })(utils);\n\t  'use strict';\n\t  function matchTags(rule, runOnly) {\n\t    'use strict';\n\t    var include, exclude, matching;\n\t    var defaultExclude = axe._audit && axe._audit.tagExclude ? axe._audit.tagExclude : [];\n\t    if (runOnly.hasOwnProperty('include') || runOnly.hasOwnProperty('exclude')) {\n\t      include = runOnly.include || [];\n\t      include = Array.isArray(include) ? include : [ include ];\n\t      exclude = runOnly.exclude || [];\n\t      exclude = Array.isArray(exclude) ? exclude : [ exclude ];\n\t      exclude = exclude.concat(defaultExclude.filter(function(tag) {\n\t        return include.indexOf(tag) === -1;\n\t      }));\n\t    } else {\n\t      include = Array.isArray(runOnly) ? runOnly : [ runOnly ];\n\t      exclude = defaultExclude.filter(function(tag) {\n\t        return include.indexOf(tag) === -1;\n\t      });\n\t    }\n\t    matching = include.some(function(tag) {\n\t      return rule.tags.indexOf(tag) !== -1;\n\t    });\n\t    if (matching || include.length === 0 && rule.enabled !== false) {\n\t      return exclude.every(function(tag) {\n\t        return rule.tags.indexOf(tag) === -1;\n\t      });\n\t    } else {\n\t      return false;\n\t    }\n\t  }\n\t  axe.utils.ruleShouldRun = function(rule, context, options) {\n\t    'use strict';\n\t    var runOnly = options.runOnly || {};\n\t    var ruleOptions = (options.rules || {})[rule.id];\n\t    if (rule.pageLevel && !context.page) {\n\t      return false;\n\t    } else if (runOnly.type === 'rule') {\n\t      return runOnly.values.indexOf(rule.id) !== -1;\n\t    } else if (ruleOptions && typeof ruleOptions.enabled === 'boolean') {\n\t      return ruleOptions.enabled;\n\t    } else if (runOnly.type === 'tag' && runOnly.values) {\n\t      return matchTags(rule, runOnly.values);\n\t    } else {\n\t      return matchTags(rule, []);\n\t    }\n\t  };\n\t  'use strict';\n\t  function getScroll(elm) {\n\t    var style = window.getComputedStyle(elm);\n\t    var visibleOverflowY = style.getPropertyValue('overflow-y') === 'visible';\n\t    var visibleOverflowX = style.getPropertyValue('overflow-x') === 'visible';\n\t    if (!visibleOverflowY && elm.scrollHeight > elm.clientHeight || !visibleOverflowX && elm.scrollWidth > elm.clientWidth) {\n\t      return {\n\t        elm: elm,\n\t        top: elm.scrollTop,\n\t        left: elm.scrollLeft\n\t      };\n\t    }\n\t  }\n\t  function setScroll(elm, top, left) {\n\t    if (elm === window) {\n\t      return elm.scroll(top, left);\n\t    } else {\n\t      elm.scrollTop = top;\n\t      elm.scrollLeft = left;\n\t    }\n\t  }\n\t  function getElmScrollRecursive(root) {\n\t    return Array.from(root.children).reduce(function(scrolls, elm) {\n\t      var scroll = getScroll(elm);\n\t      if (scroll) {\n\t        scrolls.push(scroll);\n\t      }\n\t      return scrolls.concat(getElmScrollRecursive(elm));\n\t    }, []);\n\t  }\n\t  axe.utils.getScrollState = function getScrollState() {\n\t    var win = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n\t    var root = win.document.documentElement;\n\t    var windowScroll = [ win.pageXOffset !== undefined ? {\n\t      elm: win,\n\t      top: win.pageYOffset,\n\t      left: win.pageXOffset\n\t    } : {\n\t      elm: root,\n\t      top: root.scrollTop,\n\t      left: root.scrollLeft\n\t    } ];\n\t    return windowScroll.concat(getElmScrollRecursive(document.body));\n\t  };\n\t  axe.utils.setScrollState = function setScrollState(scrollState) {\n\t    scrollState.forEach(function(_ref) {\n\t      var elm = _ref.elm, top = _ref.top, left = _ref.left;\n\t      return setScroll(elm, top, left);\n\t    });\n\t  };\n\t  'use strict';\n\t  function getDeepest(collection) {\n\t    'use strict';\n\t    return collection.sort(function(a, b) {\n\t      if (axe.utils.contains(a, b)) {\n\t        return 1;\n\t      }\n\t      return -1;\n\t    })[0];\n\t  }\n\t  function isNodeInContext(node, context) {\n\t    'use strict';\n\t    var include = context.include && getDeepest(context.include.filter(function(candidate) {\n\t      return axe.utils.contains(candidate, node);\n\t    }));\n\t    var exclude = context.exclude && getDeepest(context.exclude.filter(function(candidate) {\n\t      return axe.utils.contains(candidate, node);\n\t    }));\n\t    if (!exclude && include || exclude && axe.utils.contains(exclude, include)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function pushNode(result, nodes) {\n\t    'use strict';\n\t    var temp;\n\t    if (result.length === 0) {\n\t      return nodes;\n\t    }\n\t    if (result.length < nodes.length) {\n\t      temp = result;\n\t      result = nodes;\n\t      nodes = temp;\n\t    }\n\t    for (var i = 0, l = nodes.length; i < l; i++) {\n\t      if (!result.includes(nodes[i])) {\n\t        result.push(nodes[i]);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function reduceIncludes(includes) {\n\t    return includes.reduce(function(res, el) {\n\t      if (!res.length || !res[res.length - 1].actualNode.contains(el.actualNode)) {\n\t        res.push(el);\n\t      }\n\t      return res;\n\t    }, []);\n\t  }\n\t  axe.utils.select = function select(selector, context) {\n\t    'use strict';\n\t    var result = [], candidate;\n\t    if (axe._selectCache) {\n\t      for (var j = 0, l = axe._selectCache.length; j < l; j++) {\n\t        var item = axe._selectCache[j];\n\t        if (item.selector === selector) {\n\t          return item.result;\n\t        }\n\t      }\n\t    }\n\t    var curried = function(context) {\n\t      return function(node) {\n\t        return isNodeInContext(node, context);\n\t      };\n\t    }(context);\n\t    var reducedIncludes = reduceIncludes(context.include);\n\t    for (var i = 0; i < reducedIncludes.length; i++) {\n\t      candidate = reducedIncludes[i];\n\t      if (candidate.actualNode.nodeType === candidate.actualNode.ELEMENT_NODE && axe.utils.matchesSelector(candidate.actualNode, selector) && curried(candidate)) {\n\t        result = pushNode(result, [ candidate ]);\n\t      }\n\t      result = pushNode(result, axe.utils.querySelectorAllFilter(candidate, selector, curried));\n\t    }\n\t    if (axe._selectCache) {\n\t      axe._selectCache.push({\n\t        selector: selector,\n\t        result: result\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t  'use strict';\n\t  axe.utils.toArray = function(thing) {\n\t    'use strict';\n\t    return Array.prototype.slice.call(thing);\n\t  };\n\t  axe.utils.uniqueArray = function(arr1, arr2) {\n\t    return arr1.concat(arr2).filter(function(elem, pos, arr) {\n\t      return arr.indexOf(elem) === pos;\n\t    });\n\t  };\n\t  'use strict';\n\t  var uuid;\n\t  (function(_global) {\n\t    var _rng;\n\t    var _crypto = _global.crypto || _global.msCrypto;\n\t    if (!_rng && _crypto && _crypto.getRandomValues) {\n\t      var _rnds8 = new Uint8Array(16);\n\t      _rng = function whatwgRNG() {\n\t        _crypto.getRandomValues(_rnds8);\n\t        return _rnds8;\n\t      };\n\t    }\n\t    if (!_rng) {\n\t      var _rnds = new Array(16);\n\t      _rng = function _rng() {\n\t        for (var i = 0, r; i < 16; i++) {\n\t          if ((i & 3) === 0) {\n\t            r = Math.random() * 4294967296;\n\t          }\n\t          _rnds[i] = r >>> ((i & 3) << 3) & 255;\n\t        }\n\t        return _rnds;\n\t      };\n\t    }\n\t    var BufferClass = typeof _global.Buffer == 'function' ? _global.Buffer : Array;\n\t    var _byteToHex = [];\n\t    var _hexToByte = {};\n\t    for (var i = 0; i < 256; i++) {\n\t      _byteToHex[i] = (i + 256).toString(16).substr(1);\n\t      _hexToByte[_byteToHex[i]] = i;\n\t    }\n\t    function parse(s, buf, offset) {\n\t      var i = buf && offset || 0, ii = 0;\n\t      buf = buf || [];\n\t      s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n\t        if (ii < 16) {\n\t          buf[i + ii++] = _hexToByte[oct];\n\t        }\n\t      });\n\t      while (ii < 16) {\n\t        buf[i + ii++] = 0;\n\t      }\n\t      return buf;\n\t    }\n\t    function unparse(buf, offset) {\n\t      var i = offset || 0, bth = _byteToHex;\n\t      return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n\t    }\n\t    var _seedBytes = _rng();\n\t    var _nodeId = [ _seedBytes[0] | 1, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5] ];\n\t    var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 16383;\n\t    var _lastMSecs = 0, _lastNSecs = 0;\n\t    function v1(options, buf, offset) {\n\t      var i = buf && offset || 0;\n\t      var b = buf || [];\n\t      options = options || {};\n\t      var clockseq = options.clockseq != null ? options.clockseq : _clockseq;\n\t      var msecs = options.msecs != null ? options.msecs : new Date().getTime();\n\t      var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;\n\t      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n\t      if (dt < 0 && options.clockseq == null) {\n\t        clockseq = clockseq + 1 & 16383;\n\t      }\n\t      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n\t        nsecs = 0;\n\t      }\n\t      if (nsecs >= 1e4) {\n\t        throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n\t      }\n\t      _lastMSecs = msecs;\n\t      _lastNSecs = nsecs;\n\t      _clockseq = clockseq;\n\t      msecs += 122192928e5;\n\t      var tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n\t      b[i++] = tl >>> 24 & 255;\n\t      b[i++] = tl >>> 16 & 255;\n\t      b[i++] = tl >>> 8 & 255;\n\t      b[i++] = tl & 255;\n\t      var tmh = msecs / 4294967296 * 1e4 & 268435455;\n\t      b[i++] = tmh >>> 8 & 255;\n\t      b[i++] = tmh & 255;\n\t      b[i++] = tmh >>> 24 & 15 | 16;\n\t      b[i++] = tmh >>> 16 & 255;\n\t      b[i++] = clockseq >>> 8 | 128;\n\t      b[i++] = clockseq & 255;\n\t      var node = options.node || _nodeId;\n\t      for (var n = 0; n < 6; n++) {\n\t        b[i + n] = node[n];\n\t      }\n\t      return buf ? buf : unparse(b);\n\t    }\n\t    function v4(options, buf, offset) {\n\t      var i = buf && offset || 0;\n\t      if (typeof options == 'string') {\n\t        buf = options == 'binary' ? new BufferClass(16) : null;\n\t        options = null;\n\t      }\n\t      options = options || {};\n\t      var rnds = options.random || (options.rng || _rng)();\n\t      rnds[6] = rnds[6] & 15 | 64;\n\t      rnds[8] = rnds[8] & 63 | 128;\n\t      if (buf) {\n\t        for (var ii = 0; ii < 16; ii++) {\n\t          buf[i + ii] = rnds[ii];\n\t        }\n\t      }\n\t      return buf || unparse(rnds);\n\t    }\n\t    uuid = v4;\n\t    uuid.v1 = v1;\n\t    uuid.v4 = v4;\n\t    uuid.parse = parse;\n\t    uuid.unparse = unparse;\n\t    uuid.BufferClass = BufferClass;\n\t  })(window);\n\t  'use strict';\n\t  axe._load({\n\t    data: {\n\t      rules: {\n\t        accesskeys: {\n\t          description: 'Ensures every accesskey attribute value is unique',\n\t          help: 'accesskey attribute value must be unique'\n\t        },\n\t        'area-alt': {\n\t          description: 'Ensures <area> elements of image maps have alternate text',\n\t          help: 'Active <area> elements must have alternate text'\n\t        },\n\t        'aria-allowed-attr': {\n\t          description: 'Ensures ARIA attributes are allowed for an element\\'s role',\n\t          help: 'Elements must only use allowed ARIA attributes'\n\t        },\n\t        'aria-dpub-role-fallback': {\n\t          description: 'Ensures unsupported DPUB roles are only used on elements with implicit fallback roles',\n\t          help: 'Unsupported DPUB ARIA roles should be used on elements with implicit fallback roles'\n\t        },\n\t        'aria-hidden-body': {\n\t          description: 'Ensures aria-hidden=\\'true\\' is not present on the document body.',\n\t          help: 'aria-hidden=\\'true\\' must not be present on the document body'\n\t        },\n\t        'aria-required-attr': {\n\t          description: 'Ensures elements with ARIA roles have all required ARIA attributes',\n\t          help: 'Required ARIA attributes must be provided'\n\t        },\n\t        'aria-required-children': {\n\t          description: 'Ensures elements with an ARIA role that require child roles contain them',\n\t          help: 'Certain ARIA roles must contain particular children'\n\t        },\n\t        'aria-required-parent': {\n\t          description: 'Ensures elements with an ARIA role that require parent roles are contained by them',\n\t          help: 'Certain ARIA roles must be contained by particular parents'\n\t        },\n\t        'aria-roles': {\n\t          description: 'Ensures all elements with a role attribute use a valid value',\n\t          help: 'ARIA roles used must conform to valid values'\n\t        },\n\t        'aria-valid-attr-value': {\n\t          description: 'Ensures all ARIA attributes have valid values',\n\t          help: 'ARIA attributes must conform to valid values'\n\t        },\n\t        'aria-valid-attr': {\n\t          description: 'Ensures attributes that begin with aria- are valid ARIA attributes',\n\t          help: 'ARIA attributes must conform to valid names'\n\t        },\n\t        'audio-caption': {\n\t          description: 'Ensures <audio> elements have captions',\n\t          help: '<audio> elements must have a captions track'\n\t        },\n\t        blink: {\n\t          description: 'Ensures <blink> elements are not used',\n\t          help: '<blink> elements are deprecated and must not be used'\n\t        },\n\t        'button-name': {\n\t          description: 'Ensures buttons have discernible text',\n\t          help: 'Buttons must have discernible text'\n\t        },\n\t        bypass: {\n\t          description: 'Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content',\n\t          help: 'Page must have means to bypass repeated blocks'\n\t        },\n\t        checkboxgroup: {\n\t          description: 'Ensures related <input type=\"checkbox\"> elements have a group and that that group designation is consistent',\n\t          help: 'Checkbox inputs with the same name attribute value must be part of a group'\n\t        },\n\t        'color-contrast': {\n\t          description: 'Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds',\n\t          help: 'Elements must have sufficient color contrast'\n\t        },\n\t        'definition-list': {\n\t          description: 'Ensures <dl> elements are structured correctly',\n\t          help: '<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script> or <template> elements'\n\t        },\n\t        dlitem: {\n\t          description: 'Ensures <dt> and <dd> elements are contained by a <dl>',\n\t          help: '<dt> and <dd> elements must be contained by a <dl>'\n\t        },\n\t        'document-title': {\n\t          description: 'Ensures each HTML document contains a non-empty <title> element',\n\t          help: 'Documents must have <title> element to aid in navigation'\n\t        },\n\t        'duplicate-id': {\n\t          description: 'Ensures every id attribute value is unique',\n\t          help: 'id attribute value must be unique'\n\t        },\n\t        'empty-heading': {\n\t          description: 'Ensures headings have discernible text',\n\t          help: 'Headings must not be empty'\n\t        },\n\t        'focus-order-semantics': {\n\t          description: 'Ensures elements in the focus order have an appropriate role',\n\t          help: 'Elements in the focus order need a role appropriate for interactive content'\n\t        },\n\t        'frame-tested': {\n\t          description: 'Ensures <iframe> and <frame> elements contain the axe-core script',\n\t          help: 'Frames must be tested with axe-core'\n\t        },\n\t        'frame-title-unique': {\n\t          description: 'Ensures <iframe> and <frame> elements contain a unique title attribute',\n\t          help: 'Frames must have a unique title attribute'\n\t        },\n\t        'frame-title': {\n\t          description: 'Ensures <iframe> and <frame> elements contain a non-empty title attribute',\n\t          help: 'Frames must have title attribute'\n\t        },\n\t        'heading-order': {\n\t          description: 'Ensures the order of headings is semantically correct',\n\t          help: 'Heading levels should only increase by one'\n\t        },\n\t        'hidden-content': {\n\t          description: 'Informs users about hidden content.',\n\t          help: 'Hidden content on the page cannot be analyzed'\n\t        },\n\t        'html-has-lang': {\n\t          description: 'Ensures every HTML document has a lang attribute',\n\t          help: '<html> element must have a lang attribute'\n\t        },\n\t        'html-lang-valid': {\n\t          description: 'Ensures the lang attribute of the <html> element has a valid value',\n\t          help: '<html> element must have a valid value for the lang attribute'\n\t        },\n\t        'image-alt': {\n\t          description: 'Ensures <img> elements have alternate text or a role of none or presentation',\n\t          help: 'Images must have alternate text'\n\t        },\n\t        'image-redundant-alt': {\n\t          description: 'Ensure button and link text is not repeated as image alternative',\n\t          help: 'Text of buttons and links should not be repeated in the image alternative'\n\t        },\n\t        'input-image-alt': {\n\t          description: 'Ensures <input type=\"image\"> elements have alternate text',\n\t          help: 'Image buttons must have alternate text'\n\t        },\n\t        'label-title-only': {\n\t          description: 'Ensures that every form element is not solely labeled using the title or aria-describedby attributes',\n\t          help: 'Form elements should have a visible label'\n\t        },\n\t        label: {\n\t          description: 'Ensures every form element has a label',\n\t          help: 'Form elements must have labels'\n\t        },\n\t        'landmark-banner-is-top-level': {\n\t          description: 'The banner landmark should not be contained in another landmark',\n\t          help: 'Banner landmark must be at top level'\n\t        },\n\t        'landmark-contentinfo-is-top-level': {\n\t          description: 'The contentinfo landmark should not be contained in another landmark',\n\t          help: 'Contentinfo landmark must be at top level'\n\t        },\n\t        'landmark-main-is-top-level': {\n\t          description: 'The main landmark should not be contained in another landmark',\n\t          help: 'Main landmark is not at top level'\n\t        },\n\t        'landmark-no-duplicate-banner': {\n\t          description: 'Ensures the document has no more than one banner landmark',\n\t          help: 'Document contain at most one banner landmark'\n\t        },\n\t        'landmark-no-duplicate-contentinfo': {\n\t          description: 'Ensures the document has no more than one contentinfo landmark',\n\t          help: 'Document contain at most one contentinfo landmark'\n\t        },\n\t        'landmark-one-main': {\n\t          description: 'Ensures a navigation point to the primary content of the page. If the page contains iframes, each iframe should contain either no main landmarks or just one',\n\t          help: 'Page must contain one main landmark'\n\t        },\n\t        'layout-table': {\n\t          description: 'Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute',\n\t          help: 'Layout tables must not use data table elements'\n\t        },\n\t        'link-in-text-block': {\n\t          description: 'Links can be distinguished without relying on color',\n\t          help: 'Links must be distinguished from surrounding text in a way that does not rely on color'\n\t        },\n\t        'link-name': {\n\t          description: 'Ensures links have discernible text',\n\t          help: 'Links must have discernible text'\n\t        },\n\t        list: {\n\t          description: 'Ensures that lists are structured correctly',\n\t          help: '<ul> and <ol> must only directly contain <li>, <script> or <template> elements'\n\t        },\n\t        listitem: {\n\t          description: 'Ensures <li> elements are used semantically',\n\t          help: '<li> elements must be contained in a <ul> or <ol>'\n\t        },\n\t        marquee: {\n\t          description: 'Ensures <marquee> elements are not used',\n\t          help: '<marquee> elements are deprecated and must not be used'\n\t        },\n\t        'meta-refresh': {\n\t          description: 'Ensures <meta http-equiv=\"refresh\"> is not used',\n\t          help: 'Timed refresh must not exist'\n\t        },\n\t        'meta-viewport-large': {\n\t          description: 'Ensures <meta name=\"viewport\"> can scale a significant amount',\n\t          help: 'Users should be able to zoom and scale the text up to 500%'\n\t        },\n\t        'meta-viewport': {\n\t          description: 'Ensures <meta name=\"viewport\"> does not disable text scaling and zooming',\n\t          help: 'Zooming and scaling must not be disabled'\n\t        },\n\t        'object-alt': {\n\t          description: 'Ensures <object> elements have alternate text',\n\t          help: '<object> elements must have alternate text'\n\t        },\n\t        'p-as-heading': {\n\t          description: 'Ensure p elements are not used to style headings',\n\t          help: 'Bold, italic text and font-size are not used to style p elements as a heading'\n\t        },\n\t        'page-has-heading-one': {\n\t          description: 'Ensure that the page, or at least one of its frames contains a level-one heading',\n\t          help: 'Page must contain a level-one heading'\n\t        },\n\t        radiogroup: {\n\t          description: 'Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent',\n\t          help: 'Radio inputs with the same name attribute value must be part of a group'\n\t        },\n\t        region: {\n\t          description: 'Ensures all content is contained within a landmark region',\n\t          help: 'Content should be contained in a landmark region'\n\t        },\n\t        'scope-attr-valid': {\n\t          description: 'Ensures the scope attribute is used correctly on tables',\n\t          help: 'scope attribute should be used correctly'\n\t        },\n\t        'server-side-image-map': {\n\t          description: 'Ensures that server-side image maps are not used',\n\t          help: 'Server-side image maps must not be used'\n\t        },\n\t        'skip-link': {\n\t          description: 'Ensure all skip links have a focusable target',\n\t          help: 'The skip-link target should exist and be focusable'\n\t        },\n\t        tabindex: {\n\t          description: 'Ensures tabindex attribute values are not greater than 0',\n\t          help: 'Elements should not have tabindex greater than zero'\n\t        },\n\t        'table-duplicate-name': {\n\t          description: 'Ensure that tables do not have the same summary and caption',\n\t          help: 'The <caption> element should not contain the same text as the summary attribute'\n\t        },\n\t        'table-fake-caption': {\n\t          description: 'Ensure that tables with a caption use the <caption> element.',\n\t          help: 'Data or header cells should not be used to give caption to a data table.'\n\t        },\n\t        'td-has-header': {\n\t          description: 'Ensure that each non-empty data cell in a large table has one or more table headers',\n\t          help: 'All non-empty td element in table larger than 3 by 3 must have an associated table header'\n\t        },\n\t        'td-headers-attr': {\n\t          description: 'Ensure that each cell in a table using the headers refers to another cell in that table',\n\t          help: 'All cells in a table element that use the headers attribute must only refer to other cells of that same table'\n\t        },\n\t        'th-has-data-cells': {\n\t          description: 'Ensure that each table header in a data table refers to data cells',\n\t          help: 'All th elements and elements with role=columnheader/rowheader must have data cells they describe'\n\t        },\n\t        'valid-lang': {\n\t          description: 'Ensures lang attributes have valid values',\n\t          help: 'lang attribute must have a valid value'\n\t        },\n\t        'video-caption': {\n\t          description: 'Ensures <video> elements have captions',\n\t          help: '<video> elements must have captions'\n\t        },\n\t        'video-description': {\n\t          description: 'Ensures <video> elements have audio descriptions',\n\t          help: '<video> elements must have an audio description track'\n\t        }\n\t      },\n\t      checks: {\n\t        accesskeys: {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Accesskey attribute value is unique';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Document has multiple elements with the same accesskey';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'non-empty-alt': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has a non-empty alt attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has no alt attribute or the alt attribute is empty';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'non-empty-title': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has a title attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has no title attribute or the title attribute is empty';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-label': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'aria-label attribute exists and is not empty';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'aria-label attribute does not exist or is empty';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-labelledby': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'aria-labelledby attribute exists and references elements that are visible to screen readers';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty or not visible';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-allowed-attr': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'ARIA attributes are used correctly for the defined role';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'ARIA attribute' + (it.data && it.data.length > 1 ? 's are' : ' is') + ' not allowed:';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' ' + value;\n\t                }\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'implicit-role-fallback': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element’s implicit ARIA role is an appropriate fallback';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element’s implicit ARIA role is not a good fallback for the (unsupported) role';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-hidden-body': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'No aria-hidden attribute is present on document body';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'aria-hidden=true should not be present on the document body';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-required-attr': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'All required ARIA attributes are present';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Required ARIA attribute' + (it.data && it.data.length > 1 ? 's' : '') + ' not present:';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' ' + value;\n\t                }\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-required-children': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Required ARIA children are present';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Required ARIA ' + (it.data && it.data.length > 1 ? 'children' : 'child') + ' role not present:';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' ' + value;\n\t                }\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-required-parent': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Required ARIA parent role present';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Required ARIA parent' + (it.data && it.data.length > 1 ? 's' : '') + ' role not present:';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' ' + value;\n\t                }\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        invalidrole: {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'ARIA role is valid';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Role must be one of the valid ARIA roles';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        abstractrole: {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Abstract roles are not used';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Abstract roles cannot be directly used';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-valid-attr-value': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'ARIA attribute values are valid';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Invalid ARIA attribute value' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' ' + value;\n\t                }\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-errormessage': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Uses a supported aria-errormessage technique';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'aria-errormessage value' + (it.data && it.data.length > 1 ? 's' : '') + ' ';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' `' + value;\n\t                }\n\t              }\n\t              out += '` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'aria-valid-attr': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ' are valid';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Invalid ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n\t              var arr1 = it.data;\n\t              if (arr1) {\n\t                var value, i1 = -1, l1 = arr1.length - 1;\n\t                while (i1 < l1) {\n\t                  value = arr1[i1 += 1];\n\t                  out += ' ' + value;\n\t                }\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        caption: {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The multimedia element has a captions track';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The multimedia element does not have a captions track';\n\t              return out;\n\t            },\n\t            incomplete: function anonymous(it) {\n\t              var out = 'A captions track for this element could not be found';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'is-on-screen': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element is not visible';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element is visible';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'non-empty-if-present': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element ';\n\t              if (it.data) {\n\t                out += 'has a non-empty value attribute';\n\t              } else {\n\t                out += 'does not have a value attribute';\n\t              }\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has a value attribute and the value attribute is empty';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'non-empty-value': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has a non-empty value attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has no value attribute or the value attribute is empty';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'button-has-visible-text': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has inner text that is visible to screen readers';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element does not have inner text that is visible to screen readers';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'role-presentation': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element\\'s default semantics were overriden with role=\"presentation\"';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element\\'s default semantics were not overridden with role=\"presentation\"';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'role-none': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element\\'s default semantics were overriden with role=\"none\"';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element\\'s default semantics were not overridden with role=\"none\"';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'focusable-no-name': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element is not in tab order or has accessible text';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element is in tab order and does not have accessible text';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'internal-link-present': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Valid skip link found';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'No valid skip link found';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'header-present': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Page has a header';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Page does not have a header';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        landmark: {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Page has a landmark region';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Page does not have a landmark region';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'group-labelledby': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'All elements with the name \"' + it.data.name + '\" reference the same element with aria-labelledby';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'All elements with the name \"' + it.data.name + '\" do not reference the same element with aria-labelledby';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        fieldset: {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element is contained in a fieldset';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = '';\n\t              var code = it.data && it.data.failureCode;\n\t              if (code === 'no-legend') {\n\t                out += 'Fieldset does not have a legend as its first child';\n\t              } else if (code === 'empty-legend') {\n\t                out += 'Legend does not have text that is visible to screen readers';\n\t              } else if (code === 'mixed-inputs') {\n\t                out += 'Fieldset contains unrelated inputs';\n\t              } else if (code === 'no-group-label') {\n\t                out += 'ARIA group does not have aria-label or aria-labelledby';\n\t              } else if (code === 'group-mixed-inputs') {\n\t                out += 'ARIA group contains unrelated inputs';\n\t              } else {\n\t                out += 'Element does not have a containing fieldset or ARIA group';\n\t              }\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'color-contrast': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has sufficient color contrast of ' + it.data.contrastRatio;\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has insufficient color contrast of ' + it.data.contrastRatio + ' (foreground color: ' + it.data.fgColor + ', background color: ' + it.data.bgColor + ', font size: ' + it.data.fontSize + ', font weight: ' + it.data.fontWeight + '). Expected contrast ratio of ' + it.data.expectedContrastRatio;\n\t              return out;\n\t            },\n\t            incomplete: {\n\t              bgImage: 'Element\\'s background color could not be determined due to a background image',\n\t              bgGradient: 'Element\\'s background color could not be determined due to a background gradient',\n\t              imgNode: 'Element\\'s background color could not be determined because element contains an image node',\n\t              bgOverlap: 'Element\\'s background color could not be determined because it is overlapped by another element',\n\t              fgAlpha: 'Element\\'s foreground color could not be determined because of alpha transparency',\n\t              elmPartiallyObscured: 'Element\\'s background color could not be determined because it\\'s partially obscured by another element',\n\t              elmPartiallyObscuring: 'Element\\'s background color could not be determined because it partially overlaps other elements',\n\t              outsideViewport: 'Element\\'s background color could not be determined because it\\'s outside the viewport',\n\t              equalRatio: 'Element has a 1:1 contrast ratio with the background',\n\t              default: 'Unable to determine contrast ratio'\n\t            }\n\t          }\n\t        },\n\t        'structured-dlitems': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'When not empty, element has both <dt> and <dd> elements';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'When not empty, element does not have at least one <dt> element followed by at least one <dd> element';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'only-dlitems': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'List element only has direct children that are allowed inside <dt> or <dd> elements';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'List element has direct children that are not allowed inside <dt> or <dd> elements';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        dlitem: {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Description list item has a <dl> parent element';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Description list item does not have a <dl> parent element';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'doc-has-title': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Document has a non-empty <title> element';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Document does not have a non-empty <title> element';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'duplicate-id': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Document has no elements that share the same id attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Document has multiple elements with the same id attribute: ' + it.data;\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-visible-text': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has text that is visible to screen readers';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element does not have text that is visible to screen readers';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-widget-role': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has a widget role.';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element does not have a widget role.';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'valid-scrollable-semantics': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has valid semantics for an element in the focus order.';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has invalid semantics for an element in the focus order.';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'frame-tested': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The iframe was tested with axe-core';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The iframe could not be tested with axe-core';\n\t              return out;\n\t            },\n\t            incomplete: function anonymous(it) {\n\t              var out = 'The iframe still has to be tested with axe-core';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'unique-frame-title': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element\\'s title attribute is unique';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element\\'s title attribute is not unique';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'heading-order': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Heading order valid';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Heading order invalid';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'hidden-content': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'All content on the page has been analyzed.';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'There were problems analyzing the content on this page.';\n\t              return out;\n\t            },\n\t            incomplete: function anonymous(it) {\n\t              var out = 'There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it.';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-lang': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The <html> element has a lang attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The <html> element does not have a lang attribute';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'valid-lang': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Value of lang attribute is included in the list of valid languages';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Value of lang attribute not included in the list of valid languages';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-alt': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element has an alt attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element does not have an alt attribute';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'duplicate-img-label': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element does not duplicate existing text in <img> alt text';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element contains <img> element with alt text that duplicates existing text';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'title-only': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Form element does not solely use title attribute for its label';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Only title used to generate label for form element';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'implicit-label': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Form element has an implicit (wrapped) <label>';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Form element does not have an implicit (wrapped) <label>';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'explicit-label': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Form element has an explicit <label>';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Form element does not have an explicit <label>';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'help-same-as-label': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Help text (title or aria-describedby) does not duplicate label text';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Help text (title or aria-describedby) text is the same as the label text';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'multiple-label': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Form element does not have multiple <label> elements';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Form element has multiple <label> elements';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'landmark-is-top-level': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The ' + it.data.role + ' landmark is at the top level.';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The ' + it.data.role + ' landmark is contained in another landmark.';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'page-no-duplicate-banner': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Document has no more than one banner landmark';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Document has more than one banner landmark';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'page-no-duplicate-contentinfo': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Document has no more than one contentinfo landmark';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Document has more than one contentinfo landmark';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'page-has-main': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Page has at least one main landmark';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Page must have a main landmark';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'page-no-duplicate-main': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Document has no more than one main landmark';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Document has more than one main landmark';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-th': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Layout table does not use <th> elements';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Layout table uses <th> elements';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-caption': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Layout table does not use <caption> element';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Layout table uses <caption> element';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'has-summary': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Layout table does not use summary attribute';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Layout table uses summary attribute';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'link-in-text-block': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Links can be distinguished from surrounding text in some way other than by color';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Links need to be distinguished from surrounding text in some way other than by color';\n\t              return out;\n\t            },\n\t            incomplete: {\n\t              bgContrast: 'Element\\'s contrast ratio could not be determined. Check for a distinct hover/focus style',\n\t              bgImage: 'Element\\'s contrast ratio could not be determined due to a background image',\n\t              bgGradient: 'Element\\'s contrast ratio could not be determined due to a background gradient',\n\t              imgNode: 'Element\\'s contrast ratio could not be determined because element contains an image node',\n\t              bgOverlap: 'Element\\'s contrast ratio could not be determined because of element overlap',\n\t              default: 'Unable to determine contrast ratio'\n\t            }\n\t          }\n\t        },\n\t        'only-listitems': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'List element only has direct children that are allowed inside <li> elements';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'List element has direct children that are not allowed inside <li> elements';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        listitem: {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'List item has a <ul>, <ol> or role=\"list\" parent element';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'List item does not have a <ul>, <ol> or role=\"list\" parent element';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'meta-refresh': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = '<meta> tag does not immediately refresh the page';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = '<meta> tag forces timed refresh of page';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'meta-viewport-large': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = '<meta> tag does not prevent significant zooming on mobile devices';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = '<meta> tag limits zooming on mobile devices';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'meta-viewport': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = '<meta> tag does not disable zooming on mobile devices';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = '<meta> tag disables zooming on mobile devices';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'p-as-heading': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = '<p> elements are not styled as headings';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Heading elements should be used instead of styled p elements';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'page-has-heading-one': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Page has at least one level-one heading';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Page must have a level-one heading';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        region: {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Content contained by ARIA landmark';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Content not contained by an ARIA landmark';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'html5-scope': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Scope attribute is only used on table header elements (<th>)';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'In HTML 5, scope attributes may only be used on table header elements (<th>)';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'scope-value': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Scope attribute is used correctly';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The value of the scope attribute may only be \\'row\\' or \\'col\\'';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        exists: {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element does not exist';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element exists';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'skip-link': {\n\t          impact: 'moderate',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Skip link target exists';\n\t              return out;\n\t            },\n\t            incomplete: function anonymous(it) {\n\t              var out = 'Skip link target should become visible on activation';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'No skip link target';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        tabindex: {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Element does not have a tabindex greater than 0';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Element has a tabindex greater than 0';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'same-caption-summary': {\n\t          impact: 'minor',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'Content of summary attribute and <caption> are not duplicated';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Content of summary attribute and <caption> element are identical';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'caption-faked': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The first row of a table is not used as a caption';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The first row of the table should be a caption instead of a table cell';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'td-has-header': {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'All non-empty data cells have table headers';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Some non-empty data cells do not have table headers';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'td-headers-attr': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The headers attribute is exclusively used to refer to other cells in the table';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The headers attribute is not exclusively used to refer to other cells in the table';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        'th-has-data-cells': {\n\t          impact: 'serious',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'All table header cells refer to data cells';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'Not all table header cells refer to data cells';\n\t              return out;\n\t            },\n\t            incomplete: function anonymous(it) {\n\t              var out = 'Table data cells are missing or empty';\n\t              return out;\n\t            }\n\t          }\n\t        },\n\t        description: {\n\t          impact: 'critical',\n\t          messages: {\n\t            pass: function anonymous(it) {\n\t              var out = 'The multimedia element has an audio description track';\n\t              return out;\n\t            },\n\t            fail: function anonymous(it) {\n\t              var out = 'The multimedia element does not have an audio description track';\n\t              return out;\n\t            },\n\t            incomplete: function anonymous(it) {\n\t              var out = 'An audio description track for this element could not be found';\n\t              return out;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      failureSummaries: {\n\t        any: {\n\t          failureMessage: function anonymous(it) {\n\t            var out = 'Fix any of the following:';\n\t            var arr1 = it;\n\t            if (arr1) {\n\t              var value, i1 = -1, l1 = arr1.length - 1;\n\t              while (i1 < l1) {\n\t                value = arr1[i1 += 1];\n\t                out += '\\n  ' + value.split('\\n').join('\\n  ');\n\t              }\n\t            }\n\t            return out;\n\t          }\n\t        },\n\t        none: {\n\t          failureMessage: function anonymous(it) {\n\t            var out = 'Fix all of the following:';\n\t            var arr1 = it;\n\t            if (arr1) {\n\t              var value, i1 = -1, l1 = arr1.length - 1;\n\t              while (i1 < l1) {\n\t                value = arr1[i1 += 1];\n\t                out += '\\n  ' + value.split('\\n').join('\\n  ');\n\t              }\n\t            }\n\t            return out;\n\t          }\n\t        }\n\t      },\n\t      incompleteFallbackMessage: function anonymous(it) {\n\t        var out = 'aXe couldn\\'t tell the reason. Time to break out the element inspector!';\n\t        return out;\n\t      }\n\t    },\n\t    rules: [ {\n\t      id: 'accesskeys',\n\t      selector: '[accesskey]',\n\t      excludeHidden: false,\n\t      tags: [ 'wcag2a', 'wcag211', 'cat.keyboard' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'accesskeys' ]\n\t    }, {\n\t      id: 'area-alt',\n\t      selector: 'map area[href]',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [ 'non-empty-alt', 'non-empty-title', 'aria-label', 'aria-labelledby' ],\n\t      none: []\n\t    }, {\n\t      id: 'aria-allowed-attr',\n\t      matches: function matches(node, virtualNode) {\n\t        var role = node.getAttribute('role');\n\t        if (!role) {\n\t          role = axe.commons.aria.implicitRole(node);\n\t        }\n\t        var allowed = axe.commons.aria.allowedAttr(role);\n\t        if (role && allowed) {\n\t          var aria = /^aria-/;\n\t          if (node.hasAttributes()) {\n\t            var attrs = node.attributes;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t              if (aria.test(attrs[i].name)) {\n\t                return true;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return false;\n\t      },\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag411', 'wcag412' ],\n\t      all: [],\n\t      any: [ 'aria-allowed-attr' ],\n\t      none: []\n\t    }, {\n\t      id: 'aria-dpub-role-fallback',\n\t      selector: '[role]',\n\t      matches: function matches(node, virtualNode) {\n\t        var role = node.getAttribute('role');\n\t        return [ 'doc-backlink', 'doc-biblioentry', 'doc-biblioref', 'doc-cover', 'doc-endnote', 'doc-glossref', 'doc-noteref' ].includes(role);\n\t      },\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n\t      all: [ 'implicit-role-fallback' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'aria-hidden-body',\n\t      selector: 'body',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n\t      all: [],\n\t      any: [ 'aria-hidden-body' ],\n\t      none: []\n\t    }, {\n\t      id: 'aria-required-attr',\n\t      selector: '[role]',\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag411', 'wcag412' ],\n\t      all: [],\n\t      any: [ 'aria-required-attr' ],\n\t      none: []\n\t    }, {\n\t      id: 'aria-required-children',\n\t      selector: '[role]',\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [ 'aria-required-children' ],\n\t      none: []\n\t    }, {\n\t      id: 'aria-required-parent',\n\t      selector: '[role]',\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [ 'aria-required-parent' ],\n\t      none: []\n\t    }, {\n\t      id: 'aria-roles',\n\t      selector: '[role]',\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag131', 'wcag411', 'wcag412' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'invalidrole', 'abstractrole' ]\n\t    }, {\n\t      id: 'aria-valid-attr-value',\n\t      matches: function matches(node, virtualNode) {\n\t        var aria = /^aria-/;\n\t        if (node.hasAttributes()) {\n\t          var attrs = node.attributes;\n\t          for (var i = 0, l = attrs.length; i < l; i++) {\n\t            if (aria.test(attrs[i].name)) {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        return false;\n\t      },\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag131', 'wcag411', 'wcag412' ],\n\t      all: [ {\n\t        options: [],\n\t        id: 'aria-valid-attr-value'\n\t      }, 'aria-errormessage' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'aria-valid-attr',\n\t      matches: function matches(node, virtualNode) {\n\t        var aria = /^aria-/;\n\t        if (node.hasAttributes()) {\n\t          var attrs = node.attributes;\n\t          for (var i = 0, l = attrs.length; i < l; i++) {\n\t            if (aria.test(attrs[i].name)) {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        return false;\n\t      },\n\t      tags: [ 'cat.aria', 'wcag2a', 'wcag411' ],\n\t      all: [],\n\t      any: [ {\n\t        options: [],\n\t        id: 'aria-valid-attr'\n\t      } ],\n\t      none: []\n\t    }, {\n\t      id: 'audio-caption',\n\t      selector: 'audio',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag121', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'caption' ]\n\t    }, {\n\t      id: 'blink',\n\t      selector: 'blink',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag222', 'section508', 'section508.22.j' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'is-on-screen' ]\n\t    }, {\n\t      id: 'button-name',\n\t      selector: 'button, [role=\"button\"], input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]',\n\t      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag412', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [ 'non-empty-if-present', 'non-empty-value', 'button-has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n\t      none: [ 'focusable-no-name' ]\n\t    }, {\n\t      id: 'bypass',\n\t      selector: 'html',\n\t      pageLevel: true,\n\t      matches: function matches(node, virtualNode) {\n\t        return !!node.querySelector('a[href]');\n\t      },\n\t      tags: [ 'cat.keyboard', 'wcag2a', 'wcag241', 'section508', 'section508.22.o' ],\n\t      all: [],\n\t      any: [ 'internal-link-present', 'header-present', 'landmark' ],\n\t      none: []\n\t    }, {\n\t      id: 'checkboxgroup',\n\t      selector: 'input[type=checkbox][name]',\n\t      tags: [ 'cat.forms', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'group-labelledby', 'fieldset' ],\n\t      none: []\n\t    }, {\n\t      id: 'color-contrast',\n\t      matches: function matches(node, virtualNode) {\n\t        var nodeName = node.nodeName.toUpperCase(), nodeType = node.type;\n\t        if (node.getAttribute('aria-disabled') === 'true' || axe.commons.dom.findUpVirtual(virtualNode, '[aria-disabled=\"true\"]')) {\n\t          return false;\n\t        }\n\t        if (nodeName === 'INPUT') {\n\t          return [ 'hidden', 'range', 'color', 'checkbox', 'radio', 'image' ].indexOf(nodeType) === -1 && !node.disabled;\n\t        }\n\t        if (nodeName === 'SELECT') {\n\t          return !!node.options.length && !node.disabled;\n\t        }\n\t        if (nodeName === 'TEXTAREA') {\n\t          return !node.disabled;\n\t        }\n\t        if (nodeName === 'OPTION') {\n\t          return false;\n\t        }\n\t        if (nodeName === 'BUTTON' && node.disabled || axe.commons.dom.findUpVirtual(virtualNode, 'button[disabled]')) {\n\t          return false;\n\t        }\n\t        if (nodeName === 'FIELDSET' && node.disabled || axe.commons.dom.findUpVirtual(virtualNode, 'fieldset[disabled]')) {\n\t          return false;\n\t        }\n\t        var nodeParentLabel = axe.commons.dom.findUpVirtual(virtualNode, 'label');\n\t        if (nodeName === 'LABEL' || nodeParentLabel) {\n\t          var relevantNode = node;\n\t          var relevantVirtualNode = virtualNode;\n\t          if (nodeParentLabel) {\n\t            relevantNode = nodeParentLabel;\n\t            relevantVirtualNode = axe.utils.getNodeFromTree(axe._tree[0], nodeParentLabel);\n\t          }\n\t          var doc = axe.commons.dom.getRootNode(relevantNode);\n\t          var candidate = relevantNode.htmlFor && doc.getElementById(relevantNode.htmlFor);\n\t          if (candidate && candidate.disabled) {\n\t            return false;\n\t          }\n\t          var candidate = axe.utils.querySelectorAll(relevantVirtualNode, 'input:not([type=\"hidden\"]):not([type=\"image\"])' + ':not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]), select, textarea');\n\t          if (candidate.length && candidate[0].actualNode.disabled) {\n\t            return false;\n\t          }\n\t        }\n\t        if (node.getAttribute('id')) {\n\t          var id = axe.commons.utils.escapeSelector(node.getAttribute('id'));\n\t          var _doc = axe.commons.dom.getRootNode(node);\n\t          var candidate = _doc.querySelector('[aria-labelledby~=' + id + ']');\n\t          if (candidate && candidate.disabled) {\n\t            return false;\n\t          }\n\t        }\n\t        if (axe.commons.text.visibleVirtual(virtualNode, false, true) === '') {\n\t          return false;\n\t        }\n\t        var range = document.createRange(), childNodes = virtualNode.children, length = childNodes.length, child, index;\n\t        for (index = 0; index < length; index++) {\n\t          child = childNodes[index];\n\t          if (child.actualNode.nodeType === 3 && axe.commons.text.sanitize(child.actualNode.nodeValue) !== '') {\n\t            range.selectNodeContents(child.actualNode);\n\t          }\n\t        }\n\t        var rects = range.getClientRects();\n\t        length = rects.length;\n\t        for (index = 0; index < length; index++) {\n\t          if (axe.commons.dom.visuallyOverlaps(rects[index], node)) {\n\t            return true;\n\t          }\n\t        }\n\t        return false;\n\t      },\n\t      excludeHidden: false,\n\t      options: {\n\t        noScroll: false\n\t      },\n\t      tags: [ 'cat.color', 'wcag2aa', 'wcag143' ],\n\t      all: [],\n\t      any: [ 'color-contrast' ],\n\t      none: []\n\t    }, {\n\t      id: 'definition-list',\n\t      selector: 'dl',\n\t      matches: function matches(node, virtualNode) {\n\t        return !node.getAttribute('role');\n\t      },\n\t      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'structured-dlitems', 'only-dlitems' ]\n\t    }, {\n\t      id: 'dlitem',\n\t      selector: 'dd, dt',\n\t      matches: function matches(node, virtualNode) {\n\t        return !node.getAttribute('role');\n\t      },\n\t      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [ 'dlitem' ],\n\t      none: []\n\t    }, {\n\t      id: 'document-title',\n\t      selector: 'html',\n\t      matches: function matches(node, virtualNode) {\n\t        return node.ownerDocument.defaultView.self === node.ownerDocument.defaultView.top;\n\t      },\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag242' ],\n\t      all: [],\n\t      any: [ 'doc-has-title' ],\n\t      none: []\n\t    }, {\n\t      id: 'duplicate-id',\n\t      selector: '[id]',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.parsing', 'wcag2a', 'wcag411' ],\n\t      all: [],\n\t      any: [ 'duplicate-id' ],\n\t      none: []\n\t    }, {\n\t      id: 'empty-heading',\n\t      selector: 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]',\n\t      matches: function matches(node, virtualNode) {\n\t        var explicitRoles = void 0;\n\t        if (node.hasAttribute('role')) {\n\t          explicitRoles = node.getAttribute('role').split(/\\s+/i).filter(axe.commons.aria.isValidRole);\n\t        }\n\t        if (explicitRoles && explicitRoles.length > 0) {\n\t          return explicitRoles.includes('heading');\n\t        } else {\n\t          return axe.commons.aria.implicitRole(node) === 'heading';\n\t        }\n\t      },\n\t      tags: [ 'cat.name-role-value', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'has-visible-text' ],\n\t      none: []\n\t    }, {\n\t      id: 'focus-order-semantics',\n\t      selector: 'div, h1, h2, h3, h4, h5, h6, [role=heading], p, span',\n\t      matches: function matches(node, virtualNode) {\n\t        return axe.commons.dom.insertedIntoFocusOrder(node);\n\t      },\n\t      tags: [ 'cat.keyboard', 'best-practice', 'experimental' ],\n\t      all: [],\n\t      any: [ {\n\t        options: [],\n\t        id: 'has-widget-role'\n\t      }, {\n\t        options: [],\n\t        id: 'valid-scrollable-semantics'\n\t      } ],\n\t      none: []\n\t    }, {\n\t      id: 'frame-tested',\n\t      selector: 'frame, iframe',\n\t      tags: [ 'cat.structure', 'review-item' ],\n\t      all: [ {\n\t        options: {\n\t          isViolation: false\n\t        },\n\t        id: 'frame-tested'\n\t      } ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'frame-title-unique',\n\t      selector: 'frame[title], iframe[title]',\n\t      matches: function matches(node, virtualNode) {\n\t        var title = node.getAttribute('title');\n\t        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n\t      },\n\t      tags: [ 'cat.text-alternatives', 'best-practice' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'unique-frame-title' ]\n\t    }, {\n\t      id: 'frame-title',\n\t      selector: 'frame, iframe',\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag241', 'section508', 'section508.22.i' ],\n\t      all: [],\n\t      any: [ 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n\t      none: []\n\t    }, {\n\t      id: 'heading-order',\n\t      selector: 'h1, h2, h3, h4, h5, h6, [role=heading]',\n\t      matches: function matches(node, virtualNode) {\n\t        var explicitRoles = void 0;\n\t        if (node.hasAttribute('role')) {\n\t          explicitRoles = node.getAttribute('role').split(/\\s+/i).filter(axe.commons.aria.isValidRole);\n\t        }\n\t        if (explicitRoles && explicitRoles.length > 0) {\n\t          return explicitRoles.includes('heading');\n\t        } else {\n\t          return axe.commons.aria.implicitRole(node) === 'heading';\n\t        }\n\t      },\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'heading-order' ],\n\t      none: []\n\t    }, {\n\t      id: 'hidden-content',\n\t      selector: '*',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.structure', 'experimental', 'review-item' ],\n\t      all: [],\n\t      any: [ 'hidden-content' ],\n\t      none: []\n\t    }, {\n\t      id: 'html-has-lang',\n\t      selector: 'html',\n\t      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n\t      all: [],\n\t      any: [ 'has-lang' ],\n\t      none: []\n\t    }, {\n\t      id: 'html-lang-valid',\n\t      selector: 'html[lang]',\n\t      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'valid-lang' ]\n\t    }, {\n\t      id: 'image-alt',\n\t      selector: 'img, [role=\\'img\\']:not(svg)',\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [ 'has-alt', 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n\t      none: []\n\t    }, {\n\t      id: 'image-redundant-alt',\n\t      selector: 'button, [role=\"button\"], a[href], p, li, td, th',\n\t      tags: [ 'cat.text-alternatives', 'best-practice' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'duplicate-img-label' ]\n\t    }, {\n\t      id: 'input-image-alt',\n\t      selector: 'input[type=\"image\"]',\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [ 'non-empty-alt', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n\t      none: []\n\t    }, {\n\t      id: 'label-title-only',\n\t      selector: 'input, select, textarea',\n\t      matches: function matches(node, virtualNode) {\n\t        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n\t          return true;\n\t        }\n\t        var type = node.getAttribute('type').toLowerCase();\n\t        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n\t      },\n\t      tags: [ 'cat.forms', 'best-practice' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'title-only' ]\n\t    }, {\n\t      id: 'label',\n\t      selector: 'input, select, textarea',\n\t      matches: function matches(node, virtualNode) {\n\t        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n\t          return true;\n\t        }\n\t        var type = node.getAttribute('type').toLowerCase();\n\t        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n\t      },\n\t      tags: [ 'cat.forms', 'wcag2a', 'wcag332', 'wcag131', 'section508', 'section508.22.n' ],\n\t      all: [],\n\t      any: [ 'aria-label', 'aria-labelledby', 'implicit-label', 'explicit-label', 'non-empty-title' ],\n\t      none: [ 'help-same-as-label', 'multiple-label' ]\n\t    }, {\n\t      id: 'landmark-banner-is-top-level',\n\t      selector: 'header:not([role]), [role=banner]',\n\t      matches: function matches(node, virtualNode) {\n\t        var nativeScopeFilter = 'article, aside, main, nav, section';\n\t        return node.hasAttribute('role') || !axe.commons.dom.findUpVirtual(virtualNode, nativeScopeFilter);\n\t      },\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'landmark-is-top-level' ],\n\t      none: []\n\t    }, {\n\t      id: 'landmark-contentinfo-is-top-level',\n\t      selector: 'footer:not([role]), [role=contentinfo]',\n\t      matches: function matches(node, virtualNode) {\n\t        var nativeScopeFilter = 'article, aside, main, nav, section';\n\t        return node.hasAttribute('role') || !axe.commons.dom.findUpVirtual(virtualNode, nativeScopeFilter);\n\t      },\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'landmark-is-top-level' ],\n\t      none: []\n\t    }, {\n\t      id: 'landmark-main-is-top-level',\n\t      selector: 'main:not([role]), [role=main]',\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'landmark-is-top-level' ],\n\t      none: []\n\t    }, {\n\t      id: 'landmark-no-duplicate-banner',\n\t      selector: 'html',\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [],\n\t      any: [ {\n\t        options: {\n\t          selector: 'header:not([role]), [role=banner]',\n\t          nativeScopeFilter: 'article, aside, main, nav, section'\n\t        },\n\t        id: 'page-no-duplicate-banner'\n\t      } ],\n\t      none: []\n\t    }, {\n\t      id: 'landmark-no-duplicate-contentinfo',\n\t      selector: 'html',\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [],\n\t      any: [ {\n\t        options: {\n\t          selector: 'footer:not([role]), [role=contentinfo]',\n\t          nativeScopeFilter: 'article, aside, main, nav, section'\n\t        },\n\t        id: 'page-no-duplicate-contentinfo'\n\t      } ],\n\t      none: []\n\t    }, {\n\t      id: 'landmark-one-main',\n\t      selector: 'html',\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [ {\n\t        options: {\n\t          selector: 'main:not([role]), [role=\\'main\\']'\n\t        },\n\t        id: 'page-has-main'\n\t      }, {\n\t        options: {\n\t          selector: 'main:not([role]), [role=\\'main\\']'\n\t        },\n\t        id: 'page-no-duplicate-main'\n\t      } ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'layout-table',\n\t      selector: 'table',\n\t      matches: function matches(node, virtualNode) {\n\t        return !axe.commons.table.isDataTable(node);\n\t      },\n\t      tags: [ 'cat.semantics', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'has-th', 'has-caption', 'has-summary' ]\n\t    }, {\n\t      id: 'link-in-text-block',\n\t      selector: 'a[href], [role=link]',\n\t      matches: function matches(node, virtualNode) {\n\t        var text = axe.commons.text.sanitize(node.textContent);\n\t        var role = node.getAttribute('role');\n\t        if (role && role !== 'link') {\n\t          return false;\n\t        }\n\t        if (!text) {\n\t          return false;\n\t        }\n\t        if (!axe.commons.dom.isVisible(node, false)) {\n\t          return false;\n\t        }\n\t        return axe.commons.dom.isInTextBlock(node);\n\t      },\n\t      excludeHidden: false,\n\t      tags: [ 'cat.color', 'experimental', 'wcag2a', 'wcag141' ],\n\t      all: [ 'link-in-text-block' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'link-name',\n\t      selector: 'a[href], [role=link][href]',\n\t      matches: function matches(node, virtualNode) {\n\t        return node.getAttribute('role') !== 'button';\n\t      },\n\t      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag111', 'wcag412', 'wcag244', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n\t      none: [ 'focusable-no-name' ]\n\t    }, {\n\t      id: 'list',\n\t      selector: 'ul, ol',\n\t      matches: function matches(node, virtualNode) {\n\t        return !node.getAttribute('role');\n\t      },\n\t      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'only-listitems' ]\n\t    }, {\n\t      id: 'listitem',\n\t      selector: 'li',\n\t      matches: function matches(node, virtualNode) {\n\t        return !node.getAttribute('role');\n\t      },\n\t      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n\t      all: [],\n\t      any: [ 'listitem' ],\n\t      none: []\n\t    }, {\n\t      id: 'marquee',\n\t      selector: 'marquee',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.parsing', 'wcag2a', 'wcag222' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'is-on-screen' ]\n\t    }, {\n\t      id: 'meta-refresh',\n\t      selector: 'meta[http-equiv=\"refresh\"]',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.time', 'wcag2a', 'wcag2aaa', 'wcag221', 'wcag224', 'wcag325' ],\n\t      all: [],\n\t      any: [ 'meta-refresh' ],\n\t      none: []\n\t    }, {\n\t      id: 'meta-viewport-large',\n\t      selector: 'meta[name=\"viewport\"]',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.sensory-and-visual-cues', 'best-practice' ],\n\t      all: [],\n\t      any: [ {\n\t        options: {\n\t          scaleMinimum: 5,\n\t          lowerBound: 2\n\t        },\n\t        id: 'meta-viewport-large'\n\t      } ],\n\t      none: []\n\t    }, {\n\t      id: 'meta-viewport',\n\t      selector: 'meta[name=\"viewport\"]',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.sensory-and-visual-cues', 'wcag2aa', 'wcag144' ],\n\t      all: [],\n\t      any: [ {\n\t        options: {\n\t          scaleMinimum: 2\n\t        },\n\t        id: 'meta-viewport'\n\t      } ],\n\t      none: []\n\t    }, {\n\t      id: 'object-alt',\n\t      selector: 'object',\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n\t      none: []\n\t    }, {\n\t      id: 'p-as-heading',\n\t      selector: 'p',\n\t      matches: function matches(node, virtualNode) {\n\t        var children = Array.from(node.parentNode.childNodes);\n\t        var nodeText = node.textContent.trim();\n\t        var isSentence = /[.!?:;](?![.!?:;])/g;\n\t        if (nodeText.length === 0 || (nodeText.match(isSentence) || []).length >= 2) {\n\t          return false;\n\t        }\n\t        var siblingsAfter = children.slice(children.indexOf(node) + 1).filter(function(elm) {\n\t          return elm.nodeName.toUpperCase() === 'P' && elm.textContent.trim() !== '';\n\t        });\n\t        return siblingsAfter.length !== 0;\n\t      },\n\t      tags: [ 'cat.semantics', 'wcag2a', 'wcag131', 'experimental' ],\n\t      all: [ {\n\t        options: {\n\t          margins: [ {\n\t            weight: 150,\n\t            italic: true\n\t          }, {\n\t            weight: 150,\n\t            size: 1.15\n\t          }, {\n\t            italic: true,\n\t            size: 1.15\n\t          }, {\n\t            size: 1.4\n\t          } ]\n\t        },\n\t        id: 'p-as-heading'\n\t      } ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'page-has-heading-one',\n\t      selector: 'html',\n\t      tags: [ 'cat.semantics', 'best-practice' ],\n\t      all: [ {\n\t        options: {\n\t          selector: 'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'\n\t        },\n\t        id: 'page-has-heading-one'\n\t      } ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'radiogroup',\n\t      selector: 'input[type=radio][name]',\n\t      tags: [ 'cat.forms', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'group-labelledby', 'fieldset' ],\n\t      none: []\n\t    }, {\n\t      id: 'region',\n\t      selector: 'html',\n\t      pageLevel: true,\n\t      tags: [ 'cat.keyboard', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'region' ],\n\t      none: []\n\t    }, {\n\t      id: 'scope-attr-valid',\n\t      selector: 'td[scope], th[scope]',\n\t      tags: [ 'cat.tables', 'best-practice' ],\n\t      all: [ 'html5-scope', 'scope-value' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'server-side-image-map',\n\t      selector: 'img[ismap]',\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag211', 'section508', 'section508.22.f' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'exists' ]\n\t    }, {\n\t      id: 'skip-link',\n\t      selector: 'a[href]',\n\t      matches: function matches(node, virtualNode) {\n\t        var href = node.getAttribute('href');\n\t        return href[0] === '#' && href.length > 1;\n\t      },\n\t      tags: [ 'cat.keyboard', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'skip-link' ],\n\t      none: []\n\t    }, {\n\t      id: 'tabindex',\n\t      selector: '[tabindex]',\n\t      tags: [ 'cat.keyboard', 'best-practice' ],\n\t      all: [],\n\t      any: [ 'tabindex' ],\n\t      none: []\n\t    }, {\n\t      id: 'table-duplicate-name',\n\t      selector: 'table',\n\t      tags: [ 'cat.tables', 'best-practice' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'same-caption-summary' ]\n\t    }, {\n\t      id: 'table-fake-caption',\n\t      selector: 'table',\n\t      matches: function matches(node, virtualNode) {\n\t        return axe.commons.table.isDataTable(node);\n\t      },\n\t      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n\t      all: [ 'caption-faked' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'td-has-header',\n\t      selector: 'table',\n\t      matches: function matches(node, virtualNode) {\n\t        if (axe.commons.table.isDataTable(node)) {\n\t          var tableArray = axe.commons.table.toArray(node);\n\t          return tableArray.length >= 3 && tableArray[0].length >= 3 && tableArray[1].length >= 3 && tableArray[2].length >= 3;\n\t        }\n\t        return false;\n\t      },\n\t      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n\t      all: [ 'td-has-header' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'td-headers-attr',\n\t      selector: 'table',\n\t      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n\t      all: [ 'td-headers-attr' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'th-has-data-cells',\n\t      selector: 'table',\n\t      matches: function matches(node, virtualNode) {\n\t        return axe.commons.table.isDataTable(node);\n\t      },\n\t      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n\t      all: [ 'th-has-data-cells' ],\n\t      any: [],\n\t      none: []\n\t    }, {\n\t      id: 'valid-lang',\n\t      selector: '[lang], [xml\\\\:lang]',\n\t      matches: function matches(node, virtualNode) {\n\t        return node.nodeName.toLowerCase() !== 'html';\n\t      },\n\t      tags: [ 'cat.language', 'wcag2aa', 'wcag312' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'valid-lang' ]\n\t    }, {\n\t      id: 'video-caption',\n\t      selector: 'video',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag122', 'wcag123', 'section508', 'section508.22.a' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'caption' ]\n\t    }, {\n\t      id: 'video-description',\n\t      selector: 'video',\n\t      excludeHidden: false,\n\t      tags: [ 'cat.text-alternatives', 'wcag2aa', 'wcag125', 'section508', 'section508.22.b' ],\n\t      all: [],\n\t      any: [],\n\t      none: [ 'description' ]\n\t    } ],\n\t    checks: [ {\n\t      id: 'abstractrole',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return axe.commons.aria.getRoleType(node.getAttribute('role')) === 'abstract';\n\t      }\n\t    }, {\n\t      id: 'aria-allowed-attr',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = options || {};\n\t        var invalid = [];\n\t        var attr, attrName, allowed, role = node.getAttribute('role'), attrs = node.attributes;\n\t        if (!role) {\n\t          role = axe.commons.aria.implicitRole(node);\n\t        }\n\t        allowed = axe.commons.aria.allowedAttr(role);\n\t        if (Array.isArray(options[role])) {\n\t          allowed = axe.utils.uniqueArray(options[role].concat(allowed));\n\t        }\n\t        if (role && allowed) {\n\t          for (var i = 0, l = attrs.length; i < l; i++) {\n\t            attr = attrs[i];\n\t            attrName = attr.name;\n\t            if (axe.commons.aria.validateAttr(attrName) && !allowed.includes(attrName)) {\n\t              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n\t            }\n\t          }\n\t        }\n\t        if (invalid.length) {\n\t          this.data(invalid);\n\t          return false;\n\t        }\n\t        return true;\n\t      }\n\t    }, {\n\t      id: 'aria-hidden-body',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return node.getAttribute('aria-hidden') !== 'true';\n\t      }\n\t    }, {\n\t      id: 'aria-errormessage',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = Array.isArray(options) ? options : [];\n\t        var attr = node.getAttribute('aria-errormessage'), hasAttr = node.hasAttribute('aria-errormessage');\n\t        var doc = axe.commons.dom.getRootNode(node);\n\t        function validateAttrValue() {\n\t          var idref = attr && doc.getElementById(attr);\n\t          if (idref) {\n\t            return idref.getAttribute('role') === 'alert' || idref.getAttribute('aria-live') === 'assertive' || axe.utils.tokenList(node.getAttribute('aria-describedby') || '').indexOf(attr) > -1;\n\t          }\n\t        }\n\t        if (options.indexOf(attr) === -1 && hasAttr) {\n\t          if (!validateAttrValue()) {\n\t            this.data(attr);\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      }\n\t    }, {\n\t      id: 'has-widget-role',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var role = node.getAttribute('role');\n\t        if (role === null) {\n\t          return false;\n\t        }\n\t        var roleType = axe.commons.aria.getRoleType(role);\n\t        return roleType === 'widget' || roleType === 'composite';\n\t      },\n\t      options: []\n\t    }, {\n\t      id: 'implicit-role-fallback',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var role = node.getAttribute('role');\n\t        if (role === null || !axe.commons.aria.isValidRole(role)) {\n\t          return true;\n\t        }\n\t        var roleType = axe.commons.aria.getRoleType(role);\n\t        return axe.commons.aria.implicitRole(node) === roleType;\n\t      }\n\t    }, {\n\t      id: 'invalidrole',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return !axe.commons.aria.isValidRole(node.getAttribute('role'));\n\t      }\n\t    }, {\n\t      id: 'aria-required-attr',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = options || {};\n\t        var missing = [];\n\t        if (node.hasAttributes()) {\n\t          var attr, role = node.getAttribute('role'), required = axe.commons.aria.requiredAttr(role);\n\t          if (Array.isArray(options[role])) {\n\t            required = axe.utils.uniqueArray(options[role], required);\n\t          }\n\t          if (role && required) {\n\t            for (var i = 0, l = required.length; i < l; i++) {\n\t              attr = required[i];\n\t              if (!node.getAttribute(attr)) {\n\t                missing.push(attr);\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (missing.length) {\n\t          this.data(missing);\n\t          return false;\n\t        }\n\t        return true;\n\t      }\n\t    }, {\n\t      id: 'aria-required-children',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var requiredOwned = axe.commons.aria.requiredOwned, implicitNodes = axe.commons.aria.implicitNodes, matchesSelector = axe.commons.utils.matchesSelector, idrefs = axe.commons.dom.idrefs;\n\t        function owns(node, virtualTree, role, ariaOwned) {\n\t          if (node === null) {\n\t            return false;\n\t          }\n\t          var implicit = implicitNodes(role), selector = [ '[role=\"' + role + '\"]' ];\n\t          if (implicit) {\n\t            selector = selector.concat(implicit);\n\t          }\n\t          selector = selector.join(',');\n\t          return ariaOwned ? matchesSelector(node, selector) || !!axe.utils.querySelectorAll(virtualTree, selector)[0] : !!axe.utils.querySelectorAll(virtualTree, selector)[0];\n\t        }\n\t        function ariaOwns(nodes, role) {\n\t          var index, length;\n\t          for (index = 0, length = nodes.length; index < length; index++) {\n\t            if (nodes[index] === null) {\n\t              continue;\n\t            }\n\t            var virtualTree = axe.utils.getNodeFromTree(axe._tree[0], nodes[index]);\n\t            if (owns(nodes[index], virtualTree, role, true)) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t        function missingRequiredChildren(node, childRoles, all, role) {\n\t          var i, l = childRoles.length, missing = [], ownedElements = idrefs(node, 'aria-owns');\n\t          for (i = 0; i < l; i++) {\n\t            var r = childRoles[i];\n\t            if (owns(node, virtualNode, r) || ariaOwns(ownedElements, r)) {\n\t              if (!all) {\n\t                return null;\n\t              }\n\t            } else {\n\t              if (all) {\n\t                missing.push(r);\n\t              }\n\t            }\n\t          }\n\t          if (role === 'combobox') {\n\t            var textboxIndex = missing.indexOf('textbox');\n\t            var textTypeInputs = [ 'text', 'search', 'email', 'url', 'tel' ];\n\t            if (textboxIndex >= 0 && node.tagName === 'INPUT' && textTypeInputs.includes(node.type)) {\n\t              missing.splice(textboxIndex, 1);\n\t            }\n\t            var listboxIndex = missing.indexOf('listbox');\n\t            var expanded = node.getAttribute('aria-expanded');\n\t            if (listboxIndex >= 0 && (!expanded || expanded === 'false')) {\n\t              missing.splice(listboxIndex, 1);\n\t            }\n\t          }\n\t          if (missing.length) {\n\t            return missing;\n\t          }\n\t          if (!all && childRoles.length) {\n\t            return childRoles;\n\t          }\n\t          return null;\n\t        }\n\t        var role = node.getAttribute('role');\n\t        var required = requiredOwned(role);\n\t        if (!required) {\n\t          return true;\n\t        }\n\t        var all = false;\n\t        var childRoles = required.one;\n\t        if (!childRoles) {\n\t          var all = true;\n\t          childRoles = required.all;\n\t        }\n\t        var missing = missingRequiredChildren(node, childRoles, all, role);\n\t        if (!missing) {\n\t          return true;\n\t        }\n\t        this.data(missing);\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'aria-required-parent',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        function getSelector(role) {\n\t          var impliedNative = axe.commons.aria.implicitNodes(role) || [];\n\t          return impliedNative.concat('[role=\"' + role + '\"]').join(',');\n\t        }\n\t        function getMissingContext(virtualNode, requiredContext, includeElement) {\n\t          var index, length, role = virtualNode.actualNode.getAttribute('role'), missing = [];\n\t          if (!requiredContext) {\n\t            requiredContext = axe.commons.aria.requiredContext(role);\n\t          }\n\t          if (!requiredContext) {\n\t            return null;\n\t          }\n\t          for (index = 0, length = requiredContext.length; index < length; index++) {\n\t            if (includeElement && axe.utils.matchesSelector(virtualNode.actualNode, getSelector(requiredContext[index]))) {\n\t              return null;\n\t            }\n\t            if (axe.commons.dom.findUpVirtual(virtualNode, getSelector(requiredContext[index]))) {\n\t              return null;\n\t            } else {\n\t              missing.push(requiredContext[index]);\n\t            }\n\t          }\n\t          return missing;\n\t        }\n\t        function getAriaOwners(element) {\n\t          var owners = [], o = null;\n\t          while (element) {\n\t            if (element.getAttribute('id')) {\n\t              var id = axe.commons.utils.escapeSelector(element.getAttribute('id'));\n\t              var doc = axe.commons.dom.getRootNode(element);\n\t              o = doc.querySelector('[aria-owns~=' + id + ']');\n\t              if (o) {\n\t                owners.push(o);\n\t              }\n\t            }\n\t            element = element.parentElement;\n\t          }\n\t          return owners.length ? owners : null;\n\t        }\n\t        var missingParents = getMissingContext(virtualNode);\n\t        if (!missingParents) {\n\t          return true;\n\t        }\n\t        var owners = getAriaOwners(node);\n\t        if (owners) {\n\t          for (var i = 0, l = owners.length; i < l; i++) {\n\t            missingParents = getMissingContext(axe.utils.getNodeFromTree(axe._tree[0], owners[i]), missingParents, true);\n\t            if (!missingParents) {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        this.data(missingParents);\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'aria-valid-attr-value',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = Array.isArray(options) ? options : [];\n\t        var invalid = [], aria = /^aria-/;\n\t        var attr, attrName, attrs = node.attributes;\n\t        var skipAttrs = [ 'aria-errormessage' ];\n\t        for (var i = 0, l = attrs.length; i < l; i++) {\n\t          attr = attrs[i];\n\t          attrName = attr.name;\n\t          if (!skipAttrs.includes(attrName)) {\n\t            if (options.indexOf(attrName) === -1 && aria.test(attrName) && !axe.commons.aria.validateAttrValue(node, attrName)) {\n\t              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n\t            }\n\t          }\n\t        }\n\t        if (invalid.length) {\n\t          this.data(invalid);\n\t          return false;\n\t        }\n\t        return true;\n\t      },\n\t      options: []\n\t    }, {\n\t      id: 'aria-valid-attr',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = Array.isArray(options) ? options : [];\n\t        var invalid = [], aria = /^aria-/;\n\t        var attr, attrs = node.attributes;\n\t        for (var i = 0, l = attrs.length; i < l; i++) {\n\t          attr = attrs[i].name;\n\t          if (options.indexOf(attr) === -1 && aria.test(attr) && !axe.commons.aria.validateAttr(attr)) {\n\t            invalid.push(attr);\n\t          }\n\t        }\n\t        if (invalid.length) {\n\t          this.data(invalid);\n\t          return false;\n\t        }\n\t        return true;\n\t      },\n\t      options: []\n\t    }, {\n\t      id: 'valid-scrollable-semantics',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS = {\n\t          ARTICLE: true,\n\t          ASIDE: true,\n\t          NAV: true,\n\t          SECTION: true\n\t        };\n\t        var VALID_ROLES_FOR_SCROLLABLE_REGIONS = {\n\t          banner: false,\n\t          complementary: true,\n\t          contentinfo: true,\n\t          form: true,\n\t          main: true,\n\t          navigation: true,\n\t          region: true,\n\t          search: false\n\t        };\n\t        function validScrollableTagName(node) {\n\t          var tagName = node.tagName.toUpperCase();\n\t          return VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS[tagName] || false;\n\t        }\n\t        function validScrollableRole(node) {\n\t          var role = node.getAttribute('role');\n\t          if (!role) {\n\t            return false;\n\t          }\n\t          return VALID_ROLES_FOR_SCROLLABLE_REGIONS[role.toLowerCase()] || false;\n\t        }\n\t        function validScrollableSemantics(node) {\n\t          return validScrollableRole(node) || validScrollableTagName(node);\n\t        }\n\t        return validScrollableSemantics(node);\n\t      },\n\t      options: []\n\t    }, {\n\t      id: 'color-contrast',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!axe.commons.dom.isVisible(node, false)) {\n\t          return true;\n\t        }\n\t        var noScroll = !!(options || {}).noScroll;\n\t        var bgNodes = [], bgColor = axe.commons.color.getBackgroundColor(node, bgNodes, noScroll), fgColor = axe.commons.color.getForegroundColor(node, noScroll);\n\t        var nodeStyle = window.getComputedStyle(node);\n\t        var fontSize = parseFloat(nodeStyle.getPropertyValue('font-size'));\n\t        var fontWeight = nodeStyle.getPropertyValue('font-weight');\n\t        var bold = [ 'bold', 'bolder', '600', '700', '800', '900' ].indexOf(fontWeight) !== -1;\n\t        var cr = axe.commons.color.hasValidContrastRatio(bgColor, fgColor, fontSize, bold);\n\t        var truncatedResult = Math.floor(cr.contrastRatio * 100) / 100;\n\t        var missing;\n\t        if (bgColor === null) {\n\t          missing = axe.commons.color.incompleteData.get('bgColor');\n\t        }\n\t        var equalRatio = false;\n\t        if (truncatedResult === 1) {\n\t          equalRatio = true;\n\t          missing = axe.commons.color.incompleteData.set('bgColor', 'equalRatio');\n\t        }\n\t        var data = {\n\t          fgColor: fgColor ? fgColor.toHexString() : undefined,\n\t          bgColor: bgColor ? bgColor.toHexString() : undefined,\n\t          contrastRatio: cr ? truncatedResult : undefined,\n\t          fontSize: (fontSize * 72 / 96).toFixed(1) + 'pt',\n\t          fontWeight: bold ? 'bold' : 'normal',\n\t          missingData: missing,\n\t          expectedContrastRatio: cr.expectedContrastRatio + ':1'\n\t        };\n\t        this.data(data);\n\t        if (fgColor === null || bgColor === null || equalRatio) {\n\t          missing = null;\n\t          axe.commons.color.incompleteData.clear();\n\t          this.relatedNodes(bgNodes);\n\t          return undefined;\n\t        } else if (!cr.isValid) {\n\t          this.relatedNodes(bgNodes);\n\t        }\n\t        return cr.isValid;\n\t      }\n\t    }, {\n\t      id: 'link-in-text-block',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var _axe$commons = axe.commons, color = _axe$commons.color, dom = _axe$commons.dom;\n\t        function getContrast(color1, color2) {\n\t          var c1lum = color1.getRelativeLuminance();\n\t          var c2lum = color2.getRelativeLuminance();\n\t          return (Math.max(c1lum, c2lum) + .05) / (Math.min(c1lum, c2lum) + .05);\n\t        }\n\t        var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n\t        function isBlock(elm) {\n\t          var display = window.getComputedStyle(elm).getPropertyValue('display');\n\t          return blockLike.indexOf(display) !== -1 || display.substr(0, 6) === 'table-';\n\t        }\n\t        if (isBlock(node)) {\n\t          return false;\n\t        }\n\t        var parentBlock = dom.getComposedParent(node);\n\t        while (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n\t          parentBlock = dom.getComposedParent(parentBlock);\n\t        }\n\t        this.relatedNodes([ parentBlock ]);\n\t        if (color.elementIsDistinct(node, parentBlock)) {\n\t          return true;\n\t        } else {\n\t          var nodeColor, parentColor;\n\t          nodeColor = color.getForegroundColor(node);\n\t          parentColor = color.getForegroundColor(parentBlock);\n\t          if (!nodeColor || !parentColor) {\n\t            return undefined;\n\t          }\n\t          var contrast = getContrast(nodeColor, parentColor);\n\t          if (contrast === 1) {\n\t            return true;\n\t          } else if (contrast >= 3) {\n\t            axe.commons.color.incompleteData.set('fgColor', 'bgContrast');\n\t            this.data({\n\t              missingData: axe.commons.color.incompleteData.get('fgColor')\n\t            });\n\t            axe.commons.color.incompleteData.clear();\n\t            return undefined;\n\t          }\n\t          nodeColor = color.getBackgroundColor(node);\n\t          parentColor = color.getBackgroundColor(parentBlock);\n\t          if (!nodeColor || !parentColor || getContrast(nodeColor, parentColor) >= 3) {\n\t            var reason = void 0;\n\t            if (!nodeColor || !parentColor) {\n\t              reason = axe.commons.color.incompleteData.get('bgColor');\n\t            } else {\n\t              reason = 'bgContrast';\n\t            }\n\t            axe.commons.color.incompleteData.set('fgColor', reason);\n\t            this.data({\n\t              missingData: axe.commons.color.incompleteData.get('fgColor')\n\t            });\n\t            axe.commons.color.incompleteData.clear();\n\t            return undefined;\n\t          }\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'fieldset',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var failureCode, self = this;\n\t        function getUnrelatedElements(parent, name) {\n\t          return axe.commons.utils.toArray(parent.querySelectorAll('select,textarea,button,input:not([name=\"' + name + '\"]):not([type=\"hidden\"])'));\n\t        }\n\t        function checkFieldset(group, name) {\n\t          var firstNode = group.firstElementChild;\n\t          if (!firstNode || firstNode.nodeName.toUpperCase() !== 'LEGEND') {\n\t            self.relatedNodes([ group ]);\n\t            failureCode = 'no-legend';\n\t            return false;\n\t          }\n\t          if (!axe.commons.text.accessibleText(firstNode)) {\n\t            self.relatedNodes([ firstNode ]);\n\t            failureCode = 'empty-legend';\n\t            return false;\n\t          }\n\t          var otherElements = getUnrelatedElements(group, name);\n\t          if (otherElements.length) {\n\t            self.relatedNodes(otherElements);\n\t            failureCode = 'mixed-inputs';\n\t            return false;\n\t          }\n\t          return true;\n\t        }\n\t        function checkARIAGroup(group, name) {\n\t          var hasLabelledByText = axe.commons.dom.idrefs(group, 'aria-labelledby').some(function(element) {\n\t            return element && axe.commons.text.accessibleText(element);\n\t          });\n\t          var ariaLabel = group.getAttribute('aria-label');\n\t          if (!hasLabelledByText && !(ariaLabel && axe.commons.text.sanitize(ariaLabel))) {\n\t            self.relatedNodes(group);\n\t            failureCode = 'no-group-label';\n\t            return false;\n\t          }\n\t          var otherElements = getUnrelatedElements(group, name);\n\t          if (otherElements.length) {\n\t            self.relatedNodes(otherElements);\n\t            failureCode = 'group-mixed-inputs';\n\t            return false;\n\t          }\n\t          return true;\n\t        }\n\t        function spliceCurrentNode(nodes, current) {\n\t          return axe.commons.utils.toArray(nodes).filter(function(candidate) {\n\t            return candidate !== current;\n\t          });\n\t        }\n\t        function runCheck(virtualNode) {\n\t          var name = axe.commons.utils.escapeSelector(virtualNode.actualNode.name);\n\t          var root = axe.commons.dom.getRootNode(virtualNode.actualNode);\n\t          var matchingNodes = root.querySelectorAll('input[type=\"' + axe.commons.utils.escapeSelector(virtualNode.actualNode.type) + '\"][name=\"' + name + '\"]');\n\t          if (matchingNodes.length < 2) {\n\t            return true;\n\t          }\n\t          var fieldset = axe.commons.dom.findUpVirtual(virtualNode, 'fieldset');\n\t          var group = axe.commons.dom.findUpVirtual(virtualNode, '[role=\"group\"]' + (virtualNode.actualNode.type === 'radio' ? ',[role=\"radiogroup\"]' : ''));\n\t          if (!group && !fieldset) {\n\t            failureCode = 'no-group';\n\t            self.relatedNodes(spliceCurrentNode(matchingNodes, virtualNode.actualNode));\n\t            return false;\n\t          } else if (fieldset) {\n\t            return checkFieldset(fieldset, name);\n\t          } else {\n\t            return checkARIAGroup(group, name);\n\t          }\n\t        }\n\t        var data = {\n\t          name: node.getAttribute('name'),\n\t          type: node.getAttribute('type')\n\t        };\n\t        var result = runCheck(virtualNode);\n\t        if (!result) {\n\t          data.failureCode = failureCode;\n\t        }\n\t        this.data(data);\n\t        return result;\n\t      },\n\t      after: function after(results, options) {\n\t        var seen = {};\n\t        return results.filter(function(result) {\n\t          if (result.result) {\n\t            return true;\n\t          }\n\t          var data = result.data;\n\t          if (data) {\n\t            seen[data.type] = seen[data.type] || {};\n\t            if (!seen[data.type][data.name]) {\n\t              seen[data.type][data.name] = [ data ];\n\t              return true;\n\t            }\n\t            var hasBeenSeen = seen[data.type][data.name].some(function(candidate) {\n\t              return candidate.failureCode === data.failureCode;\n\t            });\n\t            if (!hasBeenSeen) {\n\t              seen[data.type][data.name].push(data);\n\t            }\n\t            return !hasBeenSeen;\n\t          }\n\t          return false;\n\t        });\n\t      }\n\t    }, {\n\t      id: 'group-labelledby',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        this.data({\n\t          name: node.getAttribute('name'),\n\t          type: node.getAttribute('type')\n\t        });\n\t        var doc = axe.commons.dom.getRootNode(node);\n\t        var matchingNodes = doc.querySelectorAll('input[type=\"' + axe.commons.utils.escapeSelector(node.type) + '\"][name=\"' + axe.commons.utils.escapeSelector(node.name) + '\"]');\n\t        if (matchingNodes.length <= 1) {\n\t          return true;\n\t        }\n\t        return [].map.call(matchingNodes, function(m) {\n\t          var l = m.getAttribute('aria-labelledby');\n\t          return l ? l.split(/\\s+/) : [];\n\t        }).reduce(function(prev, curr) {\n\t          return prev.filter(function(n) {\n\t            return curr.includes(n);\n\t          });\n\t        }).filter(function(n) {\n\t          var labelNode = doc.getElementById(n);\n\t          return labelNode && axe.commons.text.accessibleText(labelNode, true);\n\t        }).length !== 0;\n\t      },\n\t      after: function after(results, options) {\n\t        var seen = {};\n\t        return results.filter(function(result) {\n\t          var data = result.data;\n\t          if (data) {\n\t            seen[data.type] = seen[data.type] || {};\n\t            if (!seen[data.type][data.name]) {\n\t              seen[data.type][data.name] = true;\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        });\n\t      }\n\t    }, {\n\t      id: 'accesskeys',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (axe.commons.dom.isVisible(node, false)) {\n\t          this.data(node.getAttribute('accesskey'));\n\t          this.relatedNodes([ node ]);\n\t        }\n\t        return true;\n\t      },\n\t      after: function after(results, options) {\n\t        var seen = {};\n\t        return results.filter(function(r) {\n\t          if (!r.data) {\n\t            return false;\n\t          }\n\t          var key = r.data.toUpperCase();\n\t          if (!seen[key]) {\n\t            seen[key] = r;\n\t            r.relatedNodes = [];\n\t            return true;\n\t          }\n\t          seen[key].relatedNodes.push(r.relatedNodes[0]);\n\t          return false;\n\t        }).map(function(r) {\n\t          r.result = !!r.relatedNodes.length;\n\t          return r;\n\t        });\n\t      }\n\t    }, {\n\t      id: 'focusable-no-name',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var tabIndex = node.getAttribute('tabindex'), inFocusOrder = axe.commons.dom.isFocusable(node) && tabIndex > -1;\n\t        if (!inFocusOrder) {\n\t          return false;\n\t        }\n\t        return !axe.commons.text.accessibleTextVirtual(virtualNode);\n\t      }\n\t    }, {\n\t      id: 'landmark-is-top-level',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var landmarks = axe.commons.aria.getRolesByType('landmark');\n\t        var parent = axe.commons.dom.getComposedParent(node);\n\t        this.data({\n\t          role: node.getAttribute('role') || axe.commons.aria.implicitRole(node)\n\t        });\n\t        while (parent) {\n\t          var role = parent.getAttribute('role');\n\t          if (!role && parent.tagName.toLowerCase() !== 'form') {\n\t            role = axe.commons.aria.implicitRole(parent);\n\t          }\n\t          if (role && landmarks.includes(role)) {\n\t            return false;\n\t          }\n\t          parent = axe.commons.dom.getComposedParent(parent);\n\t        }\n\t        return true;\n\t      }\n\t    }, {\n\t      id: 'page-has-heading-one',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!options || !options.selector || typeof options.selector !== 'string') {\n\t          throw new TypeError('visible-in-page requires options.selector to be a string');\n\t        }\n\t        var matchingElms = axe.utils.querySelectorAll(virtualNode, options.selector);\n\t        this.relatedNodes(matchingElms.map(function(vNode) {\n\t          return vNode.actualNode;\n\t        }));\n\t        return matchingElms.length > 0;\n\t      },\n\t      after: function after(results, options) {\n\t        var elmUsedAnywhere = results.some(function(frameResult) {\n\t          return frameResult.result === true;\n\t        });\n\t        if (elmUsedAnywhere) {\n\t          results.forEach(function(result) {\n\t            result.result = true;\n\t          });\n\t        }\n\t        return results;\n\t      },\n\t      options: {\n\t        selector: 'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'\n\t      }\n\t    }, {\n\t      id: 'page-has-main',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!options || !options.selector || typeof options.selector !== 'string') {\n\t          throw new TypeError('visible-in-page requires options.selector to be a string');\n\t        }\n\t        var matchingElms = axe.utils.querySelectorAll(virtualNode, options.selector);\n\t        this.relatedNodes(matchingElms.map(function(vNode) {\n\t          return vNode.actualNode;\n\t        }));\n\t        return matchingElms.length > 0;\n\t      },\n\t      after: function after(results, options) {\n\t        var elmUsedAnywhere = results.some(function(frameResult) {\n\t          return frameResult.result === true;\n\t        });\n\t        if (elmUsedAnywhere) {\n\t          results.forEach(function(result) {\n\t            result.result = true;\n\t          });\n\t        }\n\t        return results;\n\t      },\n\t      options: {\n\t        selector: 'main:not([role]), [role=\\'main\\']'\n\t      }\n\t    }, {\n\t      id: 'page-no-duplicate-banner',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!options || !options.selector || typeof options.selector !== 'string') {\n\t          throw new TypeError('visible-in-page requires options.selector to be a string');\n\t        }\n\t        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n\t        if (typeof options.nativeScopeFilter === 'string') {\n\t          elms = elms.filter(function(elm) {\n\t            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n\t          });\n\t        }\n\t        this.relatedNodes(elms.map(function(elm) {\n\t          return elm.actualNode;\n\t        }));\n\t        return elms.length <= 1;\n\t      },\n\t      options: {\n\t        selector: 'header:not([role]), [role=banner]',\n\t        nativeScopeFilter: 'article, aside, main, nav, section'\n\t      }\n\t    }, {\n\t      id: 'page-no-duplicate-contentinfo',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!options || !options.selector || typeof options.selector !== 'string') {\n\t          throw new TypeError('visible-in-page requires options.selector to be a string');\n\t        }\n\t        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n\t        if (typeof options.nativeScopeFilter === 'string') {\n\t          elms = elms.filter(function(elm) {\n\t            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n\t          });\n\t        }\n\t        this.relatedNodes(elms.map(function(elm) {\n\t          return elm.actualNode;\n\t        }));\n\t        return elms.length <= 1;\n\t      },\n\t      options: {\n\t        selector: 'footer:not([role]), [role=contentinfo]',\n\t        nativeScopeFilter: 'article, aside, main, nav, section'\n\t      }\n\t    }, {\n\t      id: 'page-no-duplicate-main',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!options || !options.selector || typeof options.selector !== 'string') {\n\t          throw new TypeError('visible-in-page requires options.selector to be a string');\n\t        }\n\t        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n\t        if (typeof options.nativeScopeFilter === 'string') {\n\t          elms = elms.filter(function(elm) {\n\t            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n\t          });\n\t        }\n\t        this.relatedNodes(elms.map(function(elm) {\n\t          return elm.actualNode;\n\t        }));\n\t        return elms.length <= 1;\n\t      },\n\t      options: {\n\t        selector: 'main:not([role]), [role=\\'main\\']'\n\t      }\n\t    }, {\n\t      id: 'tabindex',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return node.tabIndex <= 0;\n\t      }\n\t    }, {\n\t      id: 'duplicate-img-label',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var text = axe.commons.text.visibleVirtual(virtualNode, true).toLowerCase();\n\t        if (text === '') {\n\t          return false;\n\t        }\n\t        var images = axe.utils.querySelectorAll(virtualNode, 'img').filter(function(_ref) {\n\t          var actualNode = _ref.actualNode;\n\t          return axe.commons.dom.isVisible(actualNode) && ![ 'none', 'presentation' ].includes(actualNode.getAttribute('role'));\n\t        });\n\t        return images.some(function(img) {\n\t          return text === axe.commons.text.accessibleTextVirtual(img).toLowerCase();\n\t        });\n\t      }\n\t    }, {\n\t      id: 'explicit-label',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (node.getAttribute('id')) {\n\t          var root = axe.commons.dom.getRootNode(node);\n\t          var id = axe.commons.utils.escapeSelector(node.getAttribute('id'));\n\t          var label = root.querySelector('label[for=\"' + id + '\"]');\n\t          if (label) {\n\t            return !!axe.commons.text.accessibleText(label);\n\t          }\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'help-same-as-label',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var labelText = axe.commons.text.labelVirtual(virtualNode), check = node.getAttribute('title');\n\t        if (!labelText) {\n\t          return false;\n\t        }\n\t        if (!check) {\n\t          check = '';\n\t          if (node.getAttribute('aria-describedby')) {\n\t            var ref = axe.commons.dom.idrefs(node, 'aria-describedby');\n\t            check = ref.map(function(thing) {\n\t              return thing ? axe.commons.text.accessibleText(thing) : '';\n\t            }).join('');\n\t          }\n\t        }\n\t        return axe.commons.text.sanitize(check) === axe.commons.text.sanitize(labelText);\n\t      },\n\t      enabled: false\n\t    }, {\n\t      id: 'implicit-label',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var label = axe.commons.dom.findUpVirtual(virtualNode, 'label');\n\t        if (label) {\n\t          return !!axe.commons.text.accessibleTextVirtual(label);\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'multiple-label',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var id = axe.commons.utils.escapeSelector(node.getAttribute('id'));\n\t        var labels = Array.from(document.querySelectorAll('label[for=\"' + id + '\"]'));\n\t        var parent = node.parentNode;\n\t        if (labels.length) {\n\t          labels = labels.filter(function(label, index) {\n\t            if (index === 0 && !axe.commons.dom.isVisible(label, true) || axe.commons.dom.isVisible(label, true)) {\n\t              return label;\n\t            }\n\t          });\n\t        }\n\t        while (parent) {\n\t          if (parent.tagName === 'LABEL' && labels.indexOf(parent) === -1) {\n\t            labels.push(parent);\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t        this.relatedNodes(labels);\n\t        return labels.length > 1;\n\t      }\n\t    }, {\n\t      id: 'title-only',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var labelText = axe.commons.text.labelVirtual(virtualNode);\n\t        return !labelText && !!(node.getAttribute('title') || node.getAttribute('aria-describedby'));\n\t      }\n\t    }, {\n\t      id: 'has-lang',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return !!(node.getAttribute('lang') || node.getAttribute('xml:lang') || '').trim();\n\t      }\n\t    }, {\n\t      id: 'valid-lang',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        function getBaseLang(lang) {\n\t          return lang.trim().split('-')[0].toLowerCase();\n\t        }\n\t        var langs, invalid;\n\t        langs = (options ? options : axe.commons.utils.validLangs()).map(getBaseLang);\n\t        invalid = [ 'lang', 'xml:lang' ].reduce(function(invalid, langAttr) {\n\t          var langVal = node.getAttribute(langAttr);\n\t          if (typeof langVal !== 'string') {\n\t            return invalid;\n\t          }\n\t          var baselangVal = getBaseLang(langVal);\n\t          if (baselangVal !== '' && langs.indexOf(baselangVal) === -1) {\n\t            invalid.push(langAttr + '=\"' + node.getAttribute(langAttr) + '\"');\n\t          }\n\t          return invalid;\n\t        }, []);\n\t        if (invalid.length) {\n\t          this.data(invalid);\n\t          return true;\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'dlitem',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var parent = axe.commons.dom.getComposedParent(node);\n\t        return parent.nodeName.toUpperCase() === 'DL';\n\t      }\n\t    }, {\n\t      id: 'has-listitem',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return virtualNode.children.every(function(_ref2) {\n\t          var actualNode = _ref2.actualNode;\n\t          return actualNode.nodeName.toUpperCase() !== 'LI';\n\t        });\n\t      }\n\t    }, {\n\t      id: 'listitem',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var parent = axe.commons.dom.getComposedParent(node);\n\t        return [ 'UL', 'OL' ].includes(parent.nodeName.toUpperCase()) || (parent.getAttribute('role') || '').toLowerCase() === 'list';\n\t      }\n\t    }, {\n\t      id: 'only-dlitems',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var bad = [], permitted = [ 'STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE' ], hasNonEmptyTextNode = false;\n\t        virtualNode.children.forEach(function(_ref3) {\n\t          var actualNode = _ref3.actualNode;\n\t          var nodeName = actualNode.nodeName.toUpperCase();\n\t          if (actualNode.nodeType === 1 && nodeName !== 'DT' && nodeName !== 'DD' && permitted.indexOf(nodeName) === -1) {\n\t            bad.push(actualNode);\n\t          } else if (actualNode.nodeType === 3 && actualNode.nodeValue.trim() !== '') {\n\t            hasNonEmptyTextNode = true;\n\t          }\n\t        });\n\t        if (bad.length) {\n\t          this.relatedNodes(bad);\n\t        }\n\t        var retVal = !!bad.length || hasNonEmptyTextNode;\n\t        return retVal;\n\t      }\n\t    }, {\n\t      id: 'only-listitems',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var bad = [], permitted = [ 'STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE' ], hasNonEmptyTextNode = false;\n\t        virtualNode.children.forEach(function(_ref4) {\n\t          var actualNode = _ref4.actualNode;\n\t          var nodeName = actualNode.nodeName.toUpperCase();\n\t          if (actualNode.nodeType === 1 && nodeName !== 'LI' && permitted.indexOf(nodeName) === -1) {\n\t            bad.push(actualNode);\n\t          } else if (actualNode.nodeType === 3 && actualNode.nodeValue.trim() !== '') {\n\t            hasNonEmptyTextNode = true;\n\t          }\n\t        });\n\t        if (bad.length) {\n\t          this.relatedNodes(bad);\n\t        }\n\t        return !!bad.length || hasNonEmptyTextNode;\n\t      }\n\t    }, {\n\t      id: 'structured-dlitems',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var children = virtualNode.children;\n\t        if (!children || !children.length) {\n\t          return false;\n\t        }\n\t        var hasDt = false, hasDd = false, nodeName;\n\t        for (var i = 0; i < children.length; i++) {\n\t          nodeName = children[i].actualNode.nodeName.toUpperCase();\n\t          if (nodeName === 'DT') {\n\t            hasDt = true;\n\t          }\n\t          if (hasDt && nodeName === 'DD') {\n\t            return false;\n\t          }\n\t          if (nodeName === 'DD') {\n\t            hasDd = true;\n\t          }\n\t        }\n\t        return hasDt || hasDd;\n\t      }\n\t    }, {\n\t      id: 'caption',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var tracks = axe.utils.querySelectorAll(virtualNode, 'track');\n\t        if (tracks.length) {\n\t          return !tracks.some(function(_ref5) {\n\t            var actualNode = _ref5.actualNode;\n\t            return (actualNode.getAttribute('kind') || '').toLowerCase() === 'captions';\n\t          });\n\t        }\n\t        return undefined;\n\t      }\n\t    }, {\n\t      id: 'description',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var tracks = axe.utils.querySelectorAll(virtualNode, 'track');\n\t        if (tracks.length) {\n\t          var out = !tracks.some(function(_ref6) {\n\t            var actualNode = _ref6.actualNode;\n\t            return (actualNode.getAttribute('kind') || '').toLowerCase() === 'descriptions';\n\t          });\n\t          return out;\n\t        }\n\t        return undefined;\n\t      }\n\t    }, {\n\t      id: 'frame-tested',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var resolve = this.async();\n\t        var _Object$assign = Object.assign({\n\t          isViolation: false,\n\t          timeout: 500\n\t        }, options), isViolation = _Object$assign.isViolation, timeout = _Object$assign.timeout;\n\t        var timer = setTimeout(function() {\n\t          timer = setTimeout(function() {\n\t            timer = null;\n\t            resolve(isViolation ? false : undefined);\n\t          }, 0);\n\t        }, timeout);\n\t        axe.utils.respondable(node.contentWindow, 'axe.ping', null, undefined, function() {\n\t          if (timer !== null) {\n\t            clearTimeout(timer);\n\t            resolve(true);\n\t          }\n\t        });\n\t      },\n\t      options: {\n\t        isViolation: false\n\t      }\n\t    }, {\n\t      id: 'meta-viewport-large',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = options || {};\n\t        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n\t        for (var i = 0, l = parsedParams.length; i < l; i++) {\n\t          params = parsedParams[i].split('=');\n\t          var key = params.shift().toLowerCase();\n\t          if (key && params.length) {\n\t            result[key.trim()] = params.shift().trim().toLowerCase();\n\t          }\n\t        }\n\t        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n\t          return true;\n\t        }\n\t        if (!lowerBound && result['user-scalable'] === 'no') {\n\t          return false;\n\t        }\n\t        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n\t          return false;\n\t        }\n\t        return true;\n\t      },\n\t      options: {\n\t        scaleMinimum: 5,\n\t        lowerBound: 2\n\t      }\n\t    }, {\n\t      id: 'meta-viewport',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = options || {};\n\t        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n\t        for (var i = 0, l = parsedParams.length; i < l; i++) {\n\t          params = parsedParams[i].split('=');\n\t          var key = params.shift().toLowerCase();\n\t          if (key && params.length) {\n\t            result[key.trim()] = params.shift().trim().toLowerCase();\n\t          }\n\t        }\n\t        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n\t          return true;\n\t        }\n\t        if (!lowerBound && result['user-scalable'] === 'no') {\n\t          return false;\n\t        }\n\t        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n\t          return false;\n\t        }\n\t        return true;\n\t      },\n\t      options: {\n\t        scaleMinimum: 2\n\t      }\n\t    }, {\n\t      id: 'header-present',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return !!axe.utils.querySelectorAll(virtualNode, 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]')[0];\n\t      }\n\t    }, {\n\t      id: 'heading-order',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var ariaHeadingLevel = node.getAttribute('aria-level');\n\t        if (ariaHeadingLevel !== null) {\n\t          this.data(parseInt(ariaHeadingLevel, 10));\n\t          return true;\n\t        }\n\t        var headingLevel = node.tagName.match(/H(\\d)/);\n\t        if (headingLevel) {\n\t          this.data(parseInt(headingLevel[1], 10));\n\t          return true;\n\t        }\n\t        return true;\n\t      },\n\t      after: function after(results, options) {\n\t        if (results.length < 2) {\n\t          return results;\n\t        }\n\t        var prevLevel = results[0].data;\n\t        for (var i = 1; i < results.length; i++) {\n\t          if (results[i].result && results[i].data > prevLevel + 1) {\n\t            results[i].result = false;\n\t          }\n\t          prevLevel = results[i].data;\n\t        }\n\t        return results;\n\t      }\n\t    }, {\n\t      id: 'internal-link-present',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var links = axe.utils.querySelectorAll(virtualNode, 'a[href]');\n\t        return links.some(function(vLink) {\n\t          return vLink.actualNode.getAttribute('href')[0] === '#';\n\t        });\n\t      }\n\t    }, {\n\t      id: 'landmark',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return axe.utils.querySelectorAll(virtualNode, 'main, [role=\"main\"]').length > 0;\n\t      }\n\t    }, {\n\t      id: 'meta-refresh',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/);\n\t        return content === '' || parsedParams[0] === '0';\n\t      }\n\t    }, {\n\t      id: 'p-as-heading',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var siblings = Array.from(node.parentNode.children);\n\t        var currentIndex = siblings.indexOf(node);\n\t        options = options || {};\n\t        var margins = options.margins || [];\n\t        var nextSibling = siblings.slice(currentIndex + 1).find(function(elm) {\n\t          return elm.nodeName.toUpperCase() === 'P';\n\t        });\n\t        var prevSibling = siblings.slice(0, currentIndex).reverse().find(function(elm) {\n\t          return elm.nodeName.toUpperCase() === 'P';\n\t        });\n\t        function getTextContainer(elm) {\n\t          var nextNode = elm;\n\t          var outerText = elm.textContent.trim();\n\t          var innerText = outerText;\n\t          while (innerText === outerText && nextNode !== undefined) {\n\t            var i = -1;\n\t            elm = nextNode;\n\t            if (elm.children.length === 0) {\n\t              return elm;\n\t            }\n\t            do {\n\t              i++;\n\t              innerText = elm.children[i].textContent.trim();\n\t            } while (innerText === '' && i + 1 < elm.children.length);\n\t            nextNode = elm.children[i];\n\t          }\n\t          return elm;\n\t        }\n\t        function normalizeFontWeight(weight) {\n\t          switch (weight) {\n\t           case 'lighter':\n\t            return 100;\n\t\n\t           case 'normal':\n\t            return 400;\n\t\n\t           case 'bold':\n\t            return 700;\n\t\n\t           case 'bolder':\n\t            return 900;\n\t          }\n\t          weight = parseInt(weight);\n\t          return !isNaN(weight) ? weight : 400;\n\t        }\n\t        function getStyleValues(node) {\n\t          var style = window.getComputedStyle(getTextContainer(node));\n\t          return {\n\t            fontWeight: normalizeFontWeight(style.getPropertyValue('font-weight')),\n\t            fontSize: parseInt(style.getPropertyValue('font-size')),\n\t            isItalic: style.getPropertyValue('font-style') === 'italic'\n\t          };\n\t        }\n\t        function isHeaderStyle(styleA, styleB, margins) {\n\t          return margins.reduce(function(out, margin) {\n\t            return out || (!margin.size || styleA.fontSize / margin.size > styleB.fontSize) && (!margin.weight || styleA.fontWeight - margin.weight > styleB.fontWeight) && (!margin.italic || styleA.isItalic && !styleB.isItalic);\n\t          }, false);\n\t        }\n\t        var currStyle = getStyleValues(node);\n\t        var nextStyle = nextSibling ? getStyleValues(nextSibling) : null;\n\t        var prevStyle = prevSibling ? getStyleValues(prevSibling) : null;\n\t        if (!nextStyle || !isHeaderStyle(currStyle, nextStyle, margins)) {\n\t          return true;\n\t        }\n\t        var blockquote = axe.commons.dom.findUpVirtual(virtualNode, 'blockquote');\n\t        if (blockquote && blockquote.nodeName.toUpperCase() === 'BLOCKQUOTE') {\n\t          return undefined;\n\t        }\n\t        if (prevStyle && !isHeaderStyle(currStyle, prevStyle, margins)) {\n\t          return undefined;\n\t        }\n\t        return false;\n\t      },\n\t      options: {\n\t        margins: [ {\n\t          weight: 150,\n\t          italic: true\n\t        }, {\n\t          weight: 150,\n\t          size: 1.15\n\t        }, {\n\t          italic: true,\n\t          size: 1.15\n\t        }, {\n\t          size: 1.4\n\t        } ]\n\t      }\n\t    }, {\n\t      id: 'region',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var _axe$commons2 = axe.commons, dom = _axe$commons2.dom, aria = _axe$commons2.aria;\n\t        function getSkiplink(virtualNode) {\n\t          var firstLink = axe.utils.querySelectorAll(virtualNode, 'a[href]')[0];\n\t          if (firstLink && axe.commons.dom.getElementByReference(firstLink.actualNode, 'href')) {\n\t            return firstLink.actualNode;\n\t          }\n\t        }\n\t        var skipLink = getSkiplink(virtualNode);\n\t        var landmarkRoles = aria.getRolesByType('landmark');\n\t        var implicitLandmarks = landmarkRoles.reduce(function(arr, role) {\n\t          return arr.concat(aria.implicitNodes(role));\n\t        }, []).filter(function(r) {\n\t          return r !== null;\n\t        });\n\t        function isSkipLink(vNode) {\n\t          return skipLink && skipLink === vNode.actualNode;\n\t        }\n\t        function isLandmark(virtualNode) {\n\t          var node = virtualNode.actualNode;\n\t          var explictRole = (node.getAttribute('role') || '').trim().toLowerCase();\n\t          if (explictRole) {\n\t            if (explictRole === 'form') {\n\t              return !!aria.labelVirtual(virtualNode);\n\t            }\n\t            return landmarkRoles.includes(explictRole);\n\t          } else {\n\t            return implicitLandmarks.some(function(implicitSelector) {\n\t              var matches = axe.utils.matchesSelector(node, implicitSelector);\n\t              if (node.tagName.toLowerCase() === 'form') {\n\t                return matches && !!aria.labelVirtual(virtualNode);\n\t              }\n\t              return matches;\n\t            });\n\t          }\n\t        }\n\t        function findRegionlessElms(virtualNode) {\n\t          var node = virtualNode.actualNode;\n\t          if (isLandmark(virtualNode) || isSkipLink(virtualNode) || !dom.isVisible(node, true)) {\n\t            return [];\n\t          } else if (dom.hasContent(node, true)) {\n\t            return [ node ];\n\t          } else {\n\t            return virtualNode.children.filter(function(_ref7) {\n\t              var actualNode = _ref7.actualNode;\n\t              return actualNode.nodeType === 1;\n\t            }).map(findRegionlessElms).reduce(function(a, b) {\n\t              return a.concat(b);\n\t            }, []);\n\t          }\n\t        }\n\t        var regionlessNodes = findRegionlessElms(virtualNode);\n\t        this.relatedNodes(regionlessNodes);\n\t        return regionlessNodes.length === 0;\n\t      },\n\t      after: function after(results, options) {\n\t        return [ results[0] ];\n\t      }\n\t    }, {\n\t      id: 'skip-link',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var target = axe.commons.dom.getElementByReference(node, 'href');\n\t        if (target) {\n\t          return axe.commons.dom.isVisible(target, true) || undefined;\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'unique-frame-title',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var title = axe.commons.text.sanitize(node.title).trim().toLowerCase();\n\t        this.data(title);\n\t        return true;\n\t      },\n\t      after: function after(results, options) {\n\t        var titles = {};\n\t        results.forEach(function(r) {\n\t          titles[r.data] = titles[r.data] !== undefined ? ++titles[r.data] : 0;\n\t        });\n\t        results.forEach(function(r) {\n\t          r.result = !!titles[r.data];\n\t        });\n\t        return results;\n\t      }\n\t    }, {\n\t      id: 'aria-label',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var label = node.getAttribute('aria-label');\n\t        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n\t      }\n\t    }, {\n\t      id: 'aria-labelledby',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var getIdRefs = axe.commons.dom.idrefs;\n\t        return getIdRefs(node, 'aria-labelledby').some(function(elm) {\n\t          return elm && axe.commons.text.accessibleText(elm, true);\n\t        });\n\t      }\n\t    }, {\n\t      id: 'button-has-visible-text',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var nodeName = node.nodeName.toUpperCase();\n\t        var role = node.getAttribute('role');\n\t        var label = void 0;\n\t        if (nodeName === 'BUTTON' || role === 'button' && nodeName !== 'INPUT') {\n\t          label = axe.commons.text.accessibleTextVirtual(virtualNode);\n\t          this.data(label);\n\t          return !!label;\n\t        } else {\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      id: 'doc-has-title',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var title = document.title;\n\t        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n\t      }\n\t    }, {\n\t      id: 'duplicate-id',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var id = node.getAttribute('id').trim();\n\t        if (!id) {\n\t          return true;\n\t        }\n\t        var root = axe.commons.dom.getRootNode(node);\n\t        var matchingNodes = Array.from(root.querySelectorAll('[id=\"' + axe.commons.utils.escapeSelector(id) + '\"]')).filter(function(foundNode) {\n\t          return foundNode !== node;\n\t        });\n\t        if (matchingNodes.length) {\n\t          this.relatedNodes(matchingNodes);\n\t        }\n\t        this.data(id);\n\t        return matchingNodes.length === 0;\n\t      },\n\t      after: function after(results, options) {\n\t        var uniqueIds = [];\n\t        return results.filter(function(r) {\n\t          if (uniqueIds.indexOf(r.data) === -1) {\n\t            uniqueIds.push(r.data);\n\t            return true;\n\t          }\n\t          return false;\n\t        });\n\t      }\n\t    }, {\n\t      id: 'exists',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return true;\n\t      }\n\t    }, {\n\t      id: 'has-alt',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var nn = node.nodeName.toLowerCase();\n\t        return node.hasAttribute('alt') && (nn === 'img' || nn === 'input' || nn === 'area');\n\t      }\n\t    }, {\n\t      id: 'has-visible-text',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return axe.commons.text.accessibleTextVirtual(virtualNode).length > 0;\n\t      }\n\t    }, {\n\t      id: 'is-on-screen',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return axe.commons.dom.isVisible(node, false) && !axe.commons.dom.isOffscreen(node);\n\t      }\n\t    }, {\n\t      id: 'non-empty-alt',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var label = node.getAttribute('alt');\n\t        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n\t      }\n\t    }, {\n\t      id: 'non-empty-if-present',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var nodeName = node.nodeName.toUpperCase();\n\t        var type = (node.getAttribute('type') || '').toLowerCase();\n\t        var label = node.getAttribute('value');\n\t        this.data(label);\n\t        if (nodeName === 'INPUT' && [ 'submit', 'reset' ].includes(type)) {\n\t          return label === null;\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'non-empty-title',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var title = node.getAttribute('title');\n\t        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n\t      }\n\t    }, {\n\t      id: 'non-empty-value',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var label = node.getAttribute('value');\n\t        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n\t      }\n\t    }, {\n\t      id: 'role-none',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return node.getAttribute('role') === 'none';\n\t      }\n\t    }, {\n\t      id: 'role-presentation',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return node.getAttribute('role') === 'presentation';\n\t      }\n\t    }, {\n\t      id: 'caption-faked',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var table = axe.commons.table.toGrid(node);\n\t        var firstRow = table[0];\n\t        if (table.length <= 1 || firstRow.length <= 1 || node.rows.length <= 1) {\n\t          return true;\n\t        }\n\t        return firstRow.reduce(function(out, curr, i) {\n\t          return out || curr !== firstRow[i + 1] && firstRow[i + 1] !== undefined;\n\t        }, false);\n\t      }\n\t    }, {\n\t      id: 'has-caption',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return !!node.caption;\n\t      }\n\t    }, {\n\t      id: 'has-summary',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return !!node.summary;\n\t      }\n\t    }, {\n\t      id: 'has-th',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var row, cell, badCells = [];\n\t        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n\t          row = node.rows[rowIndex];\n\t          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t            cell = row.cells[cellIndex];\n\t            if (cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1) {\n\t              badCells.push(cell);\n\t            }\n\t          }\n\t        }\n\t        if (badCells.length) {\n\t          this.relatedNodes(badCells);\n\t          return true;\n\t        }\n\t        return false;\n\t      }\n\t    }, {\n\t      id: 'html5-scope',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        if (!axe.commons.dom.isHTML5(document)) {\n\t          return true;\n\t        }\n\t        return node.nodeName.toUpperCase() === 'TH';\n\t      }\n\t    }, {\n\t      id: 'same-caption-summary',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        return !!(node.summary && node.caption) && node.summary === axe.commons.text.accessibleText(node.caption);\n\t      }\n\t    }, {\n\t      id: 'scope-value',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        options = options || {};\n\t        var value = node.getAttribute('scope').toLowerCase();\n\t        var validVals = [ 'row', 'col', 'rowgroup', 'colgroup' ] || options.values;\n\t        return validVals.indexOf(value) !== -1;\n\t      }\n\t    }, {\n\t      id: 'td-has-header',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var tableUtils = axe.commons.table;\n\t        var badCells = [];\n\t        var cells = tableUtils.getAllCells(node);\n\t        cells.forEach(function(cell) {\n\t          if (axe.commons.dom.hasContent(cell) && tableUtils.isDataCell(cell) && !axe.commons.aria.label(cell)) {\n\t            var hasHeaders = tableUtils.getHeaders(cell);\n\t            hasHeaders = hasHeaders.reduce(function(hasHeaders, header) {\n\t              return hasHeaders || header !== null && !!axe.commons.dom.hasContent(header);\n\t            }, false);\n\t            if (!hasHeaders) {\n\t              badCells.push(cell);\n\t            }\n\t          }\n\t        });\n\t        if (badCells.length) {\n\t          this.relatedNodes(badCells);\n\t          return false;\n\t        }\n\t        return true;\n\t      }\n\t    }, {\n\t      id: 'td-headers-attr',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var cells = [];\n\t        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n\t          var row = node.rows[rowIndex];\n\t          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t            cells.push(row.cells[cellIndex]);\n\t          }\n\t        }\n\t        var ids = cells.reduce(function(ids, cell) {\n\t          if (cell.getAttribute('id')) {\n\t            ids.push(cell.getAttribute('id'));\n\t          }\n\t          return ids;\n\t        }, []);\n\t        var badCells = cells.reduce(function(badCells, cell) {\n\t          var isSelf, notOfTable;\n\t          var headers = (cell.getAttribute('headers') || '').split(/\\s/).reduce(function(headers, header) {\n\t            header = header.trim();\n\t            if (header) {\n\t              headers.push(header);\n\t            }\n\t            return headers;\n\t          }, []);\n\t          if (headers.length !== 0) {\n\t            if (cell.getAttribute('id')) {\n\t              isSelf = headers.indexOf(cell.getAttribute('id').trim()) !== -1;\n\t            }\n\t            notOfTable = headers.reduce(function(fail, header) {\n\t              return fail || ids.indexOf(header) === -1;\n\t            }, false);\n\t            if (isSelf || notOfTable) {\n\t              badCells.push(cell);\n\t            }\n\t          }\n\t          return badCells;\n\t        }, []);\n\t        if (badCells.length > 0) {\n\t          this.relatedNodes(badCells);\n\t          return false;\n\t        } else {\n\t          return true;\n\t        }\n\t      }\n\t    }, {\n\t      id: 'th-has-data-cells',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var tableUtils = axe.commons.table;\n\t        var cells = tableUtils.getAllCells(node);\n\t        var checkResult = this;\n\t        var reffedHeaders = [];\n\t        cells.forEach(function(cell) {\n\t          var headers = cell.getAttribute('headers');\n\t          if (headers) {\n\t            reffedHeaders = reffedHeaders.concat(headers.split(/\\s+/));\n\t          }\n\t          var ariaLabel = cell.getAttribute('aria-labelledby');\n\t          if (ariaLabel) {\n\t            reffedHeaders = reffedHeaders.concat(ariaLabel.split(/\\s+/));\n\t          }\n\t        });\n\t        var headers = cells.filter(function(cell) {\n\t          if (axe.commons.text.sanitize(cell.textContent) === '') {\n\t            return false;\n\t          }\n\t          return cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1;\n\t        });\n\t        var tableGrid = tableUtils.toGrid(node);\n\t        var out = headers.reduce(function(res, header) {\n\t          if (header.getAttribute('id') && reffedHeaders.includes(header.getAttribute('id'))) {\n\t            return !res ? res : true;\n\t          }\n\t          var hasCell = false;\n\t          var pos = tableUtils.getCellPosition(header, tableGrid);\n\t          if (tableUtils.isColumnHeader(header)) {\n\t            hasCell = tableUtils.traverse('down', pos, tableGrid).reduce(function(out, cell) {\n\t              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isColumnHeader(cell);\n\t            }, false);\n\t          }\n\t          if (!hasCell && tableUtils.isRowHeader(header)) {\n\t            hasCell = tableUtils.traverse('right', pos, tableGrid).reduce(function(out, cell) {\n\t              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isRowHeader(cell);\n\t            }, false);\n\t          }\n\t          if (!hasCell) {\n\t            checkResult.relatedNodes(header);\n\t          }\n\t          return res && hasCell;\n\t        }, true);\n\t        return out ? true : undefined;\n\t      }\n\t    }, {\n\t      id: 'hidden-content',\n\t      evaluate: function evaluate(node, options, virtualNode) {\n\t        var whitelist = [ 'SCRIPT', 'HEAD', 'TITLE', 'NOSCRIPT', 'STYLE', 'TEMPLATE' ];\n\t        if (!whitelist.includes(node.tagName.toUpperCase()) && axe.commons.dom.hasContentVirtual(virtualNode)) {\n\t          var styles = window.getComputedStyle(node);\n\t          if (styles.getPropertyValue('display') === 'none') {\n\t            return undefined;\n\t          } else if (styles.getPropertyValue('visibility') === 'hidden') {\n\t            var parent = axe.commons.dom.getComposedParent(node);\n\t            var parentStyle = parent && window.getComputedStyle(parent);\n\t            if (!parentStyle || parentStyle.getPropertyValue('visibility') !== 'hidden') {\n\t              return undefined;\n\t            }\n\t          }\n\t        }\n\t        return true;\n\t      }\n\t    } ],\n\t    commons: function() {\n\t      var commons = {};\n\t      var aria = commons.aria = {}, lookupTable = aria.lookupTable = {};\n\t      lookupTable.attributes = {\n\t        'aria-activedescendant': {\n\t          type: 'idref'\n\t        },\n\t        'aria-atomic': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-autocomplete': {\n\t          type: 'nmtoken',\n\t          values: [ 'inline', 'list', 'both', 'none' ]\n\t        },\n\t        'aria-busy': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-checked': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'mixed', 'undefined' ]\n\t        },\n\t        'aria-colcount': {\n\t          type: 'int'\n\t        },\n\t        'aria-colindex': {\n\t          type: 'int'\n\t        },\n\t        'aria-colspan': {\n\t          type: 'int'\n\t        },\n\t        'aria-controls': {\n\t          type: 'idrefs'\n\t        },\n\t        'aria-current': {\n\t          type: 'nmtoken',\n\t          values: [ 'page', 'step', 'location', 'date', 'time', 'true', 'false' ]\n\t        },\n\t        'aria-describedby': {\n\t          type: 'idrefs'\n\t        },\n\t        'aria-disabled': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-dropeffect': {\n\t          type: 'nmtokens',\n\t          values: [ 'copy', 'move', 'reference', 'execute', 'popup', 'none' ]\n\t        },\n\t        'aria-errormessage': {\n\t          type: 'idref'\n\t        },\n\t        'aria-expanded': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'undefined' ]\n\t        },\n\t        'aria-flowto': {\n\t          type: 'idrefs'\n\t        },\n\t        'aria-grabbed': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'undefined' ]\n\t        },\n\t        'aria-haspopup': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'menu', 'listbox', 'tree', 'grid', 'dialog' ]\n\t        },\n\t        'aria-hidden': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-invalid': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'spelling', 'grammar' ]\n\t        },\n\t        'aria-keyshortcuts': {\n\t          type: 'string'\n\t        },\n\t        'aria-label': {\n\t          type: 'string'\n\t        },\n\t        'aria-labelledby': {\n\t          type: 'idrefs'\n\t        },\n\t        'aria-level': {\n\t          type: 'int'\n\t        },\n\t        'aria-live': {\n\t          type: 'nmtoken',\n\t          values: [ 'off', 'polite', 'assertive' ]\n\t        },\n\t        'aria-modal': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-multiline': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-multiselectable': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-orientation': {\n\t          type: 'nmtoken',\n\t          values: [ 'horizontal', 'vertical' ]\n\t        },\n\t        'aria-owns': {\n\t          type: 'idrefs'\n\t        },\n\t        'aria-placeholder': {\n\t          type: 'string'\n\t        },\n\t        'aria-posinset': {\n\t          type: 'int'\n\t        },\n\t        'aria-pressed': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'mixed', 'undefined' ]\n\t        },\n\t        'aria-readonly': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-relevant': {\n\t          type: 'nmtokens',\n\t          values: [ 'additions', 'removals', 'text', 'all' ]\n\t        },\n\t        'aria-required': {\n\t          type: 'boolean',\n\t          values: [ 'true', 'false' ]\n\t        },\n\t        'aria-rowcount': {\n\t          type: 'int'\n\t        },\n\t        'aria-rowindex': {\n\t          type: 'int'\n\t        },\n\t        'aria-rowspan': {\n\t          type: 'int'\n\t        },\n\t        'aria-selected': {\n\t          type: 'nmtoken',\n\t          values: [ 'true', 'false', 'undefined' ]\n\t        },\n\t        'aria-setsize': {\n\t          type: 'int'\n\t        },\n\t        'aria-sort': {\n\t          type: 'nmtoken',\n\t          values: [ 'ascending', 'descending', 'other', 'none' ]\n\t        },\n\t        'aria-valuemax': {\n\t          type: 'decimal'\n\t        },\n\t        'aria-valuemin': {\n\t          type: 'decimal'\n\t        },\n\t        'aria-valuenow': {\n\t          type: 'decimal'\n\t        },\n\t        'aria-valuetext': {\n\t          type: 'string'\n\t        }\n\t      };\n\t      lookupTable.globalAttributes = [ 'aria-atomic', 'aria-busy', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-keyshortcuts', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant' ];\n\t      lookupTable.role = {\n\t        alert: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        alertdialog: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-modal' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        application: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        article: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-posinset', 'aria-setsize' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'article' ]\n\t        },\n\t        banner: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'header' ]\n\t        },\n\t        button: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-pressed' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null,\n\t          implicit: [ 'button', 'input[type=\"button\"]', 'input[type=\"image\"]', 'input[type=\"reset\"]', 'input[type=\"submit\"]', 'summary' ]\n\t        },\n\t        cell: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'row' ],\n\t          implicit: [ 'td', 'th' ]\n\t        },\n\t        checkbox: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-checked', 'aria-required' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null,\n\t          implicit: [ 'input[type=\"checkbox\"]' ]\n\t        },\n\t        columnheader: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-required', 'aria-readonly', 'aria-selected', 'aria-sort' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'row' ],\n\t          implicit: [ 'th' ]\n\t        },\n\t        combobox: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-autocomplete', 'aria-required', 'aria-activedescendant', 'aria-orientation' ]\n\t          },\n\t          owned: {\n\t            all: [ 'listbox', 'textbox' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        command: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        },\n\t        complementary: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'aside' ]\n\t        },\n\t        composite: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        },\n\t        contentinfo: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'footer' ]\n\t        },\n\t        definition: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'dd', 'dfn' ]\n\t        },\n\t        dialog: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-modal' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'dialog' ]\n\t        },\n\t        directory: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        document: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'body' ]\n\t        },\n\t        'doc-abstract': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-acknowledgments': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-afterword': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-appendix': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-backlink': {\n\t          type: 'link',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        'doc-biblioentry': {\n\t          type: 'listitem',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: [ 'doc-bibliography' ]\n\t        },\n\t        'doc-bibliography': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-biblioref': {\n\t          type: 'link',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        'doc-chapter': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-colophon': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-conclusion': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-cover': {\n\t          type: 'img',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-credit': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-credits': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-dedication': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-endnote': {\n\t          type: 'listitem',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: [ 'doc-endnotes' ]\n\t        },\n\t        'doc-endnotes': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: [ 'doc-endnote' ],\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-epigraph': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-epilogue': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-errata': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-example': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-footnote': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-foreword': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-glossary': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: [ 'term', 'definition' ],\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-glossref': {\n\t          type: 'link',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        'doc-index': {\n\t          type: 'navigation',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-introduction': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-noteref': {\n\t          type: 'link',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        'doc-notice': {\n\t          type: 'note',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-pagebreak': {\n\t          type: 'separator',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-pagelist': {\n\t          type: 'navigation',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-part': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-preface': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-prologue': {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-pullquote': {\n\t          type: 'none',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-qna': {\n\t          type: 'section',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-subtitle': {\n\t          type: 'sectionhead',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-tip': {\n\t          type: 'note',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        'doc-toc': {\n\t          type: 'navigation',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          namefrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        feed: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: {\n\t            one: [ 'article' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        form: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'form' ]\n\t        },\n\t        grid: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-colcount', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-rowcount' ]\n\t          },\n\t          owned: {\n\t            one: [ 'rowgroup', 'row' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'table' ]\n\t        },\n\t        gridcell: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-selected', 'aria-readonly', 'aria-required' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'row' ],\n\t          implicit: [ 'td', 'th' ]\n\t        },\n\t        group: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'details', 'optgroup' ]\n\t        },\n\t        heading: {\n\t          type: 'structure',\n\t          attributes: {\n\t            required: [ 'aria-level' ],\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null,\n\t          implicit: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ]\n\t        },\n\t        img: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'img' ]\n\t        },\n\t        input: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        },\n\t        landmark: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        },\n\t        link: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null,\n\t          implicit: [ 'a[href]' ]\n\t        },\n\t        list: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: {\n\t            all: [ 'listitem' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'ol', 'ul', 'dl' ]\n\t        },\n\t        listbox: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded', 'aria-orientation' ]\n\t          },\n\t          owned: {\n\t            all: [ 'option' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'select' ]\n\t        },\n\t        listitem: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'list' ],\n\t          implicit: [ 'li', 'dt' ]\n\t        },\n\t        log: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        main: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'main' ]\n\t        },\n\t        marquee: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        math: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'math' ]\n\t        },\n\t        menu: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation' ]\n\t          },\n\t          owned: {\n\t            one: [ 'menuitem', 'menuitemradio', 'menuitemcheckbox' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'menu[type=\"context\"]' ]\n\t        },\n\t        menubar: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        menuitem: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-posinset', 'aria-setsize', 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'menu', 'menubar' ],\n\t          implicit: [ 'menuitem[type=\"command\"]' ]\n\t        },\n\t        menuitemcheckbox: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-checked', 'aria-posinset', 'aria-setsize' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'menu', 'menubar' ],\n\t          implicit: [ 'menuitem[type=\"checkbox\"]' ]\n\t        },\n\t        menuitemradio: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-checked', 'aria-selected', 'aria-posinset', 'aria-setsize' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'menu', 'menubar' ],\n\t          implicit: [ 'menuitem[type=\"radio\"]' ]\n\t        },\n\t        navigation: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'nav' ]\n\t        },\n\t        none: {\n\t          type: 'structure',\n\t          attributes: null,\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        note: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        option: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-checked' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'listbox' ],\n\t          implicit: [ 'option' ]\n\t        },\n\t        presentation: {\n\t          type: 'structure',\n\t          attributes: null,\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        progressbar: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-valuetext', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'progress' ]\n\t        },\n\t        radio: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-checked', 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-required' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null,\n\t          implicit: [ 'input[type=\"radio\"]' ]\n\t        },\n\t        radiogroup: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-required', 'aria-expanded' ]\n\t          },\n\t          owned: {\n\t            all: [ 'radio' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        range: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        },\n\t        region: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'section[aria-label]', 'section[aria-labelledby]', 'section[title]' ]\n\t        },\n\t        roletype: {\n\t          type: 'abstract'\n\t        },\n\t        row: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-colindex', 'aria-expanded', 'aria-level', 'aria-selected', 'aria-rowindex' ]\n\t          },\n\t          owned: {\n\t            one: [ 'cell', 'columnheader', 'rowheader', 'gridcell' ]\n\t          },\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'rowgroup', 'grid', 'treegrid', 'table' ],\n\t          implicit: [ 'tr' ]\n\t        },\n\t        rowgroup: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n\t          },\n\t          owned: {\n\t            all: [ 'row' ]\n\t          },\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'grid', 'table' ],\n\t          implicit: [ 'tbody', 'thead', 'tfoot' ]\n\t        },\n\t        rowheader: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-required', 'aria-readonly', 'aria-selected', 'aria-sort' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'row' ],\n\t          implicit: [ 'th' ]\n\t        },\n\t        scrollbar: {\n\t          type: 'widget',\n\t          attributes: {\n\t            required: [ 'aria-controls', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ],\n\t            allowed: [ 'aria-valuetext', 'aria-orientation' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        search: {\n\t          type: 'landmark',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        searchbox: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required', 'aria-placeholder' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'input[type=\"search\"]' ]\n\t        },\n\t        section: {\n\t          nameFrom: [ 'author', 'contents' ],\n\t          type: 'abstract'\n\t        },\n\t        sectionhead: {\n\t          nameFrom: [ 'author', 'contents' ],\n\t          type: 'abstract'\n\t        },\n\t        select: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        },\n\t        separator: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded', 'aria-orientation' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'hr' ]\n\t        },\n\t        slider: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-valuetext', 'aria-orientation' ],\n\t            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'input[type=\"range\"]' ]\n\t        },\n\t        spinbutton: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-valuetext', 'aria-required' ],\n\t            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'input[type=\"number\"]' ]\n\t        },\n\t        status: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'output' ]\n\t        },\n\t        structure: {\n\t          type: 'abstract'\n\t        },\n\t        switch: {\n\t          type: 'widget',\n\t          attributes: {\n\t            required: [ 'aria-checked' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        tab: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-selected', 'aria-expanded', 'aria-setsize', 'aria-posinset' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'tablist' ]\n\t        },\n\t        table: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-colcount', 'aria-rowcount' ]\n\t          },\n\t          owned: {\n\t            one: [ 'rowgroup', 'row' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'table' ]\n\t        },\n\t        tablist: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-orientation' ]\n\t          },\n\t          owned: {\n\t            all: [ 'tab' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        tabpanel: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        term: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null,\n\t          implicit: [ 'dt' ]\n\t        },\n\t        text: {\n\t          type: 'structure',\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        textbox: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required', 'aria-placeholder' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'input[type=\"text\"]', 'input[type=\"email\"]', 'input[type=\"password\"]', 'input[type=\"tel\"]', 'input[type=\"url\"]', 'input:not([type])', 'textarea' ]\n\t        },\n\t        timer: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        toolbar: {\n\t          type: 'structure',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author' ],\n\t          context: null,\n\t          implicit: [ 'menu[type=\"toolbar\"]' ]\n\t        },\n\t        tooltip: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-expanded' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: null\n\t        },\n\t        tree: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded', 'aria-orientation' ]\n\t          },\n\t          owned: {\n\t            all: [ 'treeitem' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        treegrid: {\n\t          type: 'composite',\n\t          attributes: {\n\t            allowed: [ 'aria-activedescendant', 'aria-colcount', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-required', 'aria-rowcount', 'aria-orientation' ]\n\t          },\n\t          owned: {\n\t            one: [ 'rowgroup', 'row' ]\n\t          },\n\t          nameFrom: [ 'author' ],\n\t          context: null\n\t        },\n\t        treeitem: {\n\t          type: 'widget',\n\t          attributes: {\n\t            allowed: [ 'aria-checked', 'aria-selected', 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n\t          },\n\t          owned: null,\n\t          nameFrom: [ 'author', 'contents' ],\n\t          context: [ 'group', 'tree' ]\n\t        },\n\t        widget: {\n\t          type: 'abstract'\n\t        },\n\t        window: {\n\t          nameFrom: [ 'author' ],\n\t          type: 'abstract'\n\t        }\n\t      };\n\t      var color = {};\n\t      commons.color = color;\n\t      var dom = commons.dom = {};\n\t      var table = commons.table = {};\n\t      var text = commons.text = {\n\t        EdgeFormDefaults: {}\n\t      };\n\t      var utils = commons.utils = axe.utils;\n\t      aria.requiredAttr = function(role) {\n\t        'use strict';\n\t        var roles = aria.lookupTable.role[role], attr = roles && roles.attributes && roles.attributes.required;\n\t        return attr || [];\n\t      };\n\t      aria.allowedAttr = function(role) {\n\t        'use strict';\n\t        var roles = aria.lookupTable.role[role], attr = roles && roles.attributes && roles.attributes.allowed || [], requiredAttr = roles && roles.attributes && roles.attributes.required || [];\n\t        return attr.concat(aria.lookupTable.globalAttributes).concat(requiredAttr);\n\t      };\n\t      aria.validateAttr = function(att) {\n\t        'use strict';\n\t        return !!aria.lookupTable.attributes[att];\n\t      };\n\t      aria.validateAttrValue = function(node, attr) {\n\t        'use strict';\n\t        var matches, list, value = node.getAttribute(attr), attrInfo = aria.lookupTable.attributes[attr];\n\t        var doc = dom.getRootNode(node);\n\t        if (!attrInfo) {\n\t          return true;\n\t        }\n\t        switch (attrInfo.type) {\n\t         case 'boolean':\n\t         case 'nmtoken':\n\t          return typeof value === 'string' && attrInfo.values.indexOf(value.toLowerCase()) !== -1;\n\t\n\t         case 'nmtokens':\n\t          list = axe.utils.tokenList(value);\n\t          return list.reduce(function(result, token) {\n\t            return result && attrInfo.values.indexOf(token) !== -1;\n\t          }, list.length !== 0);\n\t\n\t         case 'idref':\n\t          return !!(value && doc.getElementById(value));\n\t\n\t         case 'idrefs':\n\t          list = axe.utils.tokenList(value);\n\t          return list.reduce(function(result, token) {\n\t            return !!(result && doc.getElementById(token));\n\t          }, list.length !== 0);\n\t\n\t         case 'string':\n\t          return true;\n\t\n\t         case 'decimal':\n\t          matches = value.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/);\n\t          return !!(matches && (matches[1] || matches[2]));\n\t\n\t         case 'int':\n\t          return /^[-+]?[0-9]+$/.test(value);\n\t        }\n\t      };\n\t      aria.labelVirtual = function(_ref8) {\n\t        var actualNode = _ref8.actualNode;\n\t        var ref = void 0, candidate = void 0;\n\t        if (actualNode.getAttribute('aria-labelledby')) {\n\t          ref = dom.idrefs(actualNode, 'aria-labelledby');\n\t          candidate = ref.map(function(thing) {\n\t            var vNode = axe.utils.getNodeFromTree(axe._tree[0], thing);\n\t            return vNode ? text.visibleVirtual(vNode, true) : '';\n\t          }).join(' ').trim();\n\t          if (candidate) {\n\t            return candidate;\n\t          }\n\t        }\n\t        candidate = actualNode.getAttribute('aria-label');\n\t        if (candidate) {\n\t          candidate = text.sanitize(candidate).trim();\n\t          if (candidate) {\n\t            return candidate;\n\t          }\n\t        }\n\t        return null;\n\t      };\n\t      aria.label = function(node) {\n\t        node = axe.utils.getNodeFromTree(axe._tree[0], node);\n\t        return aria.labelVirtual(node);\n\t      };\n\t      aria.isValidRole = function(role) {\n\t        'use strict';\n\t        if (aria.lookupTable.role[role]) {\n\t          return true;\n\t        }\n\t        return false;\n\t      };\n\t      aria.getRolesWithNameFromContents = function() {\n\t        return Object.keys(aria.lookupTable.role).filter(function(r) {\n\t          return aria.lookupTable.role[r].nameFrom && aria.lookupTable.role[r].nameFrom.indexOf('contents') !== -1;\n\t        });\n\t      };\n\t      aria.getRolesByType = function(roleType) {\n\t        return Object.keys(aria.lookupTable.role).filter(function(r) {\n\t          return aria.lookupTable.role[r].type === roleType;\n\t        });\n\t      };\n\t      aria.getRoleType = function(role) {\n\t        var r = aria.lookupTable.role[role];\n\t        return r && r.type || null;\n\t      };\n\t      aria.requiredOwned = function(role) {\n\t        'use strict';\n\t        var owned = null, roles = aria.lookupTable.role[role];\n\t        if (roles) {\n\t          owned = axe.utils.clone(roles.owned);\n\t        }\n\t        return owned;\n\t      };\n\t      aria.requiredContext = function(role) {\n\t        'use strict';\n\t        var context = null, roles = aria.lookupTable.role[role];\n\t        if (roles) {\n\t          context = axe.utils.clone(roles.context);\n\t        }\n\t        return context;\n\t      };\n\t      aria.implicitNodes = function(role) {\n\t        'use strict';\n\t        var implicit = null, roles = aria.lookupTable.role[role];\n\t        if (roles && roles.implicit) {\n\t          implicit = axe.utils.clone(roles.implicit);\n\t        }\n\t        return implicit;\n\t      };\n\t      aria.implicitRole = function(node) {\n\t        'use strict';\n\t        var isValidImplicitRole = function isValidImplicitRole(set, role) {\n\t          var validForNodeType = function validForNodeType(implicitNodeTypeSelector) {\n\t            return axe.utils.matchesSelector(node, implicitNodeTypeSelector);\n\t          };\n\t          if (role.implicit && role.implicit.some(validForNodeType)) {\n\t            set.push(role.name);\n\t          }\n\t          return set;\n\t        };\n\t        var sortRolesByOptimalAriaContext = function sortRolesByOptimalAriaContext(roles, ariaAttributes) {\n\t          var getScore = function getScore(role) {\n\t            var allowedAriaAttributes = aria.allowedAttr(role);\n\t            return allowedAriaAttributes.reduce(function(score, attribute) {\n\t              return score + (ariaAttributes.indexOf(attribute) > -1 ? 1 : 0);\n\t            }, 0);\n\t          };\n\t          var scored = roles.map(function(role) {\n\t            return {\n\t              score: getScore(role),\n\t              name: role\n\t            };\n\t          });\n\t          var sorted = scored.sort(function(scoredRoleA, scoredRoleB) {\n\t            return scoredRoleB.score - scoredRoleA.score;\n\t          });\n\t          return sorted.map(function(sortedRole) {\n\t            return sortedRole.name;\n\t          });\n\t        };\n\t        var roles = Object.keys(aria.lookupTable.role).map(function(role) {\n\t          var lookup = aria.lookupTable.role[role];\n\t          return {\n\t            name: role,\n\t            implicit: lookup && lookup.implicit\n\t          };\n\t        });\n\t        var availableImplicitRoles = roles.reduce(isValidImplicitRole, []);\n\t        if (!availableImplicitRoles.length) {\n\t          return null;\n\t        }\n\t        var nodeAttributes = node.attributes;\n\t        var ariaAttributes = [];\n\t        for (var i = 0, j = nodeAttributes.length; i < j; i++) {\n\t          var attr = nodeAttributes[i];\n\t          if (attr.name.match(/^aria-/)) {\n\t            ariaAttributes.push(attr.name);\n\t          }\n\t        }\n\t        return sortRolesByOptimalAriaContext(availableImplicitRoles, ariaAttributes).shift();\n\t      };\n\t      color.Color = function(red, green, blue, alpha) {\n\t        this.red = red;\n\t        this.green = green;\n\t        this.blue = blue;\n\t        this.alpha = alpha;\n\t        this.toHexString = function() {\n\t          var redString = Math.round(this.red).toString(16);\n\t          var greenString = Math.round(this.green).toString(16);\n\t          var blueString = Math.round(this.blue).toString(16);\n\t          return '#' + (this.red > 15.5 ? redString : '0' + redString) + (this.green > 15.5 ? greenString : '0' + greenString) + (this.blue > 15.5 ? blueString : '0' + blueString);\n\t        };\n\t        var rgbRegex = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/;\n\t        var rgbaRegex = /^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;\n\t        this.parseRgbString = function(colorString) {\n\t          if (colorString === 'transparent') {\n\t            this.red = 0;\n\t            this.green = 0;\n\t            this.blue = 0;\n\t            this.alpha = 0;\n\t            return;\n\t          }\n\t          var match = colorString.match(rgbRegex);\n\t          if (match) {\n\t            this.red = parseInt(match[1], 10);\n\t            this.green = parseInt(match[2], 10);\n\t            this.blue = parseInt(match[3], 10);\n\t            this.alpha = 1;\n\t            return;\n\t          }\n\t          match = colorString.match(rgbaRegex);\n\t          if (match) {\n\t            this.red = parseInt(match[1], 10);\n\t            this.green = parseInt(match[2], 10);\n\t            this.blue = parseInt(match[3], 10);\n\t            this.alpha = parseFloat(match[4]);\n\t            return;\n\t          }\n\t        };\n\t        this.getRelativeLuminance = function() {\n\t          var rSRGB = this.red / 255;\n\t          var gSRGB = this.green / 255;\n\t          var bSRGB = this.blue / 255;\n\t          var r = rSRGB <= .03928 ? rSRGB / 12.92 : Math.pow((rSRGB + .055) / 1.055, 2.4);\n\t          var g = gSRGB <= .03928 ? gSRGB / 12.92 : Math.pow((gSRGB + .055) / 1.055, 2.4);\n\t          var b = bSRGB <= .03928 ? bSRGB / 12.92 : Math.pow((bSRGB + .055) / 1.055, 2.4);\n\t          return .2126 * r + .7152 * g + .0722 * b;\n\t        };\n\t      };\n\t      color.flattenColors = function(fgColor, bgColor) {\n\t        var alpha = fgColor.alpha;\n\t        var r = (1 - alpha) * bgColor.red + alpha * fgColor.red;\n\t        var g = (1 - alpha) * bgColor.green + alpha * fgColor.green;\n\t        var b = (1 - alpha) * bgColor.blue + alpha * fgColor.blue;\n\t        var a = fgColor.alpha + bgColor.alpha * (1 - fgColor.alpha);\n\t        return new color.Color(r, g, b, a);\n\t      };\n\t      color.getContrast = function(bgColor, fgColor) {\n\t        if (!fgColor || !bgColor) {\n\t          return null;\n\t        }\n\t        if (fgColor.alpha < 1) {\n\t          fgColor = color.flattenColors(fgColor, bgColor);\n\t        }\n\t        var bL = bgColor.getRelativeLuminance();\n\t        var fL = fgColor.getRelativeLuminance();\n\t        return (Math.max(fL, bL) + .05) / (Math.min(fL, bL) + .05);\n\t      };\n\t      color.hasValidContrastRatio = function(bg, fg, fontSize, isBold) {\n\t        var contrast = color.getContrast(bg, fg);\n\t        var isSmallFont = isBold && Math.ceil(fontSize * 72) / 96 < 14 || !isBold && Math.ceil(fontSize * 72) / 96 < 18;\n\t        var expectedContrastRatio = isSmallFont ? 4.5 : 3;\n\t        return {\n\t          isValid: contrast > expectedContrastRatio,\n\t          contrastRatio: contrast,\n\t          expectedContrastRatio: expectedContrastRatio\n\t        };\n\t      };\n\t      function _getFonts(style) {\n\t        return style.getPropertyValue('font-family').split(/[,;]/g).map(function(font) {\n\t          return font.trim().toLowerCase();\n\t        });\n\t      }\n\t      function elementIsDistinct(node, ancestorNode) {\n\t        var nodeStyle = window.getComputedStyle(node);\n\t        if (nodeStyle.getPropertyValue('background-image') !== 'none') {\n\t          return true;\n\t        }\n\t        var hasBorder = [ 'border-bottom', 'border-top', 'outline' ].reduce(function(result, edge) {\n\t          var borderClr = new color.Color();\n\t          borderClr.parseRgbString(nodeStyle.getPropertyValue(edge + '-color'));\n\t          return result || nodeStyle.getPropertyValue(edge + '-style') !== 'none' && parseFloat(nodeStyle.getPropertyValue(edge + '-width')) > 0 && borderClr.alpha !== 0;\n\t        }, false);\n\t        if (hasBorder) {\n\t          return true;\n\t        }\n\t        var parentStyle = window.getComputedStyle(ancestorNode);\n\t        if (_getFonts(nodeStyle)[0] !== _getFonts(parentStyle)[0]) {\n\t          return true;\n\t        }\n\t        var hasStyle = [ 'text-decoration-line', 'text-decoration-style', 'font-weight', 'font-style', 'font-size' ].reduce(function(result, cssProp) {\n\t          return result || nodeStyle.getPropertyValue(cssProp) !== parentStyle.getPropertyValue(cssProp);\n\t        }, false);\n\t        var tDec = nodeStyle.getPropertyValue('text-decoration');\n\t        if (tDec.split(' ').length < 3) {\n\t          hasStyle = hasStyle || tDec !== parentStyle.getPropertyValue('text-decoration');\n\t        }\n\t        return hasStyle;\n\t      }\n\t      color.elementIsDistinct = elementIsDistinct;\n\t      var graphicNodes = [ 'IMG', 'CANVAS', 'OBJECT', 'IFRAME', 'VIDEO', 'SVG' ];\n\t      function elmHasImage(elm, style) {\n\t        var nodeName = elm.nodeName.toUpperCase();\n\t        if (graphicNodes.includes(nodeName)) {\n\t          axe.commons.color.incompleteData.set('bgColor', 'imgNode');\n\t          return true;\n\t        }\n\t        style = style || window.getComputedStyle(elm);\n\t        var bgImageStyle = style.getPropertyValue('background-image');\n\t        var hasBgImage = bgImageStyle !== 'none';\n\t        if (hasBgImage) {\n\t          var hasGradient = /gradient/.test(bgImageStyle);\n\t          axe.commons.color.incompleteData.set('bgColor', hasGradient ? 'bgGradient' : 'bgImage');\n\t        }\n\t        return hasBgImage;\n\t      }\n\t      function getBgColor(elm, elmStyle) {\n\t        elmStyle = elmStyle || window.getComputedStyle(elm);\n\t        var bgColor = new color.Color();\n\t        bgColor.parseRgbString(elmStyle.getPropertyValue('background-color'));\n\t        if (bgColor.alpha !== 0) {\n\t          var opacity = elmStyle.getPropertyValue('opacity');\n\t          bgColor.alpha = bgColor.alpha * opacity;\n\t        }\n\t        return bgColor;\n\t      }\n\t      function contentOverlapping(targetElement, bgNode) {\n\t        var targetRect = targetElement.getClientRects()[0];\n\t        var obscuringElements = dom.shadowElementsFromPoint(targetRect.left, targetRect.top);\n\t        if (obscuringElements) {\n\t          for (var i = 0; i < obscuringElements.length; i++) {\n\t            if (obscuringElements[i] !== targetElement && obscuringElements[i] === bgNode) {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        return false;\n\t      }\n\t      function calculateObscuringAlpha(elmIndex, elmStack, originalElm) {\n\t        var totalAlpha = 0;\n\t        if (elmIndex > 0) {\n\t          for (var i = elmIndex - 1; i >= 0; i--) {\n\t            var bgElm = elmStack[i];\n\t            var bgElmStyle = window.getComputedStyle(bgElm);\n\t            var bgColor = getBgColor(bgElm, bgElmStyle);\n\t            if (bgColor.alpha && contentOverlapping(originalElm, bgElm)) {\n\t              totalAlpha += bgColor.alpha;\n\t            } else {\n\t              elmStack.splice(i, 1);\n\t            }\n\t          }\n\t        }\n\t        return totalAlpha;\n\t      }\n\t      function elmPartiallyObscured(elm, bgElm, bgColor) {\n\t        var obscured = elm !== bgElm && !dom.visuallyContains(elm, bgElm) && bgColor.alpha !== 0;\n\t        if (obscured) {\n\t          axe.commons.color.incompleteData.set('bgColor', 'elmPartiallyObscured');\n\t        }\n\t        return obscured;\n\t      }\n\t      function includeMissingElements(elmStack, elm) {\n\t        var elementMap = {\n\t          TD: [ 'TR', 'TBODY' ],\n\t          TH: [ 'TR', 'THEAD' ],\n\t          INPUT: [ 'LABEL' ]\n\t        };\n\t        var tagArray = elmStack.map(function(elm) {\n\t          return elm.tagName;\n\t        });\n\t        var bgNodes = elmStack;\n\t        for (var candidate in elementMap) {\n\t          if (tagArray.includes(candidate)) {\n\t            for (var candidateIndex in elementMap[candidate]) {\n\t              if (candidate.hasOwnProperty(candidateIndex)) {\n\t                var ancestorMatch = axe.commons.dom.findUp(elm, elementMap[candidate][candidateIndex]);\n\t                if (ancestorMatch && elmStack.indexOf(ancestorMatch) === -1) {\n\t                  var overlaps = axe.commons.dom.visuallyOverlaps(elm.getBoundingClientRect(), ancestorMatch);\n\t                  if (overlaps) {\n\t                    bgNodes.splice(tagArray.indexOf(candidate) + 1, 0, ancestorMatch);\n\t                  }\n\t                }\n\t                if (elm.tagName === elementMap[candidate][candidateIndex] && tagArray.indexOf(elm.tagName) === -1) {\n\t                  bgNodes.splice(tagArray.indexOf(candidate) + 1, 0, elm);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return bgNodes;\n\t      }\n\t      function sortPageBackground(elmStack) {\n\t        var bodyIndex = elmStack.indexOf(document.body);\n\t        var bgNodes = elmStack;\n\t        if (bodyIndex > 1 && !elmHasImage(document.documentElement) && getBgColor(document.documentElement).alpha === 0) {\n\t          bgNodes.splice(bodyIndex, 1);\n\t          bgNodes.splice(elmStack.indexOf(document.documentElement), 1);\n\t          bgNodes.push(document.body);\n\t        }\n\t        return bgNodes;\n\t      }\n\t      color.getCoords = function(rect) {\n\t        var x = void 0, y = void 0;\n\t        if (rect.left > window.innerWidth) {\n\t          return;\n\t        }\n\t        if (rect.top > window.innerHeight) {\n\t          return;\n\t        }\n\t        x = Math.min(Math.ceil(rect.left + rect.width / 2), window.innerWidth - 1);\n\t        y = Math.min(Math.ceil(rect.top + rect.height / 2), window.innerHeight - 1);\n\t        return {\n\t          x: x,\n\t          y: y\n\t        };\n\t      };\n\t      color.getRectStack = function(elm) {\n\t        var boundingCoords = color.getCoords(elm.getBoundingClientRect());\n\t        if (boundingCoords) {\n\t          var boundingStack = dom.shadowElementsFromPoint(boundingCoords.x, boundingCoords.y);\n\t          var rects = Array.from(elm.getClientRects());\n\t          if (rects && rects.length > 1) {\n\t            var filteredArr = rects.filter(function(rect) {\n\t              return rect.width && rect.width > 0;\n\t            }).map(function(rect) {\n\t              var coords = color.getCoords(rect);\n\t              if (coords) {\n\t                return dom.shadowElementsFromPoint(coords.x, coords.y);\n\t              }\n\t            });\n\t            filteredArr.splice(0, 0, boundingStack);\n\t            return filteredArr;\n\t          } else {\n\t            return [ boundingStack ];\n\t          }\n\t        }\n\t        return null;\n\t      };\n\t      color.filteredRectStack = function(elm) {\n\t        var rectStack = color.getRectStack(elm);\n\t        if (rectStack && rectStack.length === 1) {\n\t          return rectStack[0];\n\t        } else if (rectStack && rectStack.length > 1) {\n\t          var boundingStack = rectStack.shift();\n\t          var isSame = void 0;\n\t          rectStack.forEach(function(rectList, index) {\n\t            if (index === 0) {\n\t              return;\n\t            }\n\t            var rectA = rectStack[index - 1], rectB = rectStack[index];\n\t            isSame = rectA.every(function(element, elementIndex) {\n\t              return element === rectB[elementIndex];\n\t            }) || boundingStack.includes(elm);\n\t          });\n\t          if (!isSame) {\n\t            axe.commons.color.incompleteData.set('bgColor', 'elmPartiallyObscuring');\n\t            return null;\n\t          }\n\t          return rectStack[0];\n\t        } else {\n\t          axe.commons.color.incompleteData.set('bgColor', 'outsideViewport');\n\t          return null;\n\t        }\n\t      };\n\t      color.getBackgroundStack = function(elm) {\n\t        var elmStack = color.filteredRectStack(elm);\n\t        if (elmStack === null) {\n\t          return null;\n\t        }\n\t        elmStack = includeMissingElements(elmStack, elm);\n\t        elmStack = dom.reduceToElementsBelowFloating(elmStack, elm);\n\t        elmStack = sortPageBackground(elmStack);\n\t        var elmIndex = elmStack.indexOf(elm);\n\t        if (calculateObscuringAlpha(elmIndex, elmStack, elm) >= .99) {\n\t          axe.commons.color.incompleteData.set('bgColor', 'bgOverlap');\n\t          return null;\n\t        }\n\t        return elmIndex !== -1 ? elmStack : null;\n\t      };\n\t      color.getBackgroundColor = function(elm) {\n\t        var bgElms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t        var noScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t        if (noScroll !== true) {\n\t          var alignToTop = elm.clientHeight - 2 >= window.innerHeight * 2;\n\t          elm.scrollIntoView(alignToTop);\n\t        }\n\t        var bgColors = [];\n\t        var elmStack = color.getBackgroundStack(elm);\n\t        (elmStack || []).some(function(bgElm) {\n\t          var bgElmStyle = window.getComputedStyle(bgElm);\n\t          var bgColor = getBgColor(bgElm, bgElmStyle);\n\t          if (elmPartiallyObscured(elm, bgElm, bgColor) || elmHasImage(bgElm, bgElmStyle)) {\n\t            bgColors = null;\n\t            bgElms.push(bgElm);\n\t            return true;\n\t          }\n\t          if (bgColor.alpha !== 0) {\n\t            bgElms.push(bgElm);\n\t            bgColors.push(bgColor);\n\t            return bgColor.alpha === 1;\n\t          } else {\n\t            return false;\n\t          }\n\t        });\n\t        if (bgColors !== null && elmStack !== null) {\n\t          bgColors.push(new color.Color(255, 255, 255, 1));\n\t          var colors = bgColors.reduce(color.flattenColors);\n\t          return colors;\n\t        }\n\t        return null;\n\t      };\n\t      dom.isOpaque = function(node) {\n\t        var style = window.getComputedStyle(node);\n\t        return elmHasImage(node, style) || getBgColor(node, style).alpha === 1;\n\t      };\n\t      color.getForegroundColor = function(node, noScroll) {\n\t        var nodeStyle = window.getComputedStyle(node);\n\t        var fgColor = new color.Color();\n\t        fgColor.parseRgbString(nodeStyle.getPropertyValue('color'));\n\t        var opacity = nodeStyle.getPropertyValue('opacity');\n\t        fgColor.alpha = fgColor.alpha * opacity;\n\t        if (fgColor.alpha === 1) {\n\t          return fgColor;\n\t        }\n\t        var bgColor = color.getBackgroundColor(node, [], noScroll);\n\t        if (bgColor === null) {\n\t          var reason = axe.commons.color.incompleteData.get('bgColor');\n\t          axe.commons.color.incompleteData.set('fgColor', reason);\n\t          return null;\n\t        }\n\t        return color.flattenColors(fgColor, bgColor);\n\t      };\n\t      color.incompleteData = function() {\n\t        var data = {};\n\t        return {\n\t          set: function set(key, reason) {\n\t            if (typeof key !== 'string') {\n\t              throw new Error('Incomplete data: key must be a string');\n\t            }\n\t            if (reason) {\n\t              data[key] = reason;\n\t            }\n\t            return data[key];\n\t          },\n\t          get: function get(key) {\n\t            return data[key];\n\t          },\n\t          clear: function clear() {\n\t            data = {};\n\t          }\n\t        };\n\t      }();\n\t      dom.reduceToElementsBelowFloating = function(elements, targetNode) {\n\t        var floatingPositions = [ 'fixed', 'sticky' ], finalElements = [], targetFound = false, index, currentNode, style;\n\t        for (index = 0; index < elements.length; ++index) {\n\t          currentNode = elements[index];\n\t          if (currentNode === targetNode) {\n\t            targetFound = true;\n\t          }\n\t          style = window.getComputedStyle(currentNode);\n\t          if (!targetFound && floatingPositions.indexOf(style.position) !== -1) {\n\t            finalElements = [];\n\t            continue;\n\t          }\n\t          finalElements.push(currentNode);\n\t        }\n\t        return finalElements;\n\t      };\n\t      dom.findElmsInContext = function(_ref9) {\n\t        var context = _ref9.context, value = _ref9.value, attr = _ref9.attr, _ref9$elm = _ref9.elm, elm = _ref9$elm === undefined ? '' : _ref9$elm;\n\t        var root = void 0;\n\t        var escapedValue = axe.utils.escapeSelector(value);\n\t        if (context.nodeType === 9 || context.nodeType === 11) {\n\t          root = context;\n\t        } else {\n\t          root = dom.getRootNode(context);\n\t        }\n\t        return Array.from(root.querySelectorAll(elm + '[' + attr + '=' + escapedValue + ']'));\n\t      };\n\t      dom.findUp = function(element, target) {\n\t        return dom.findUpVirtual(axe.utils.getNodeFromTree(axe._tree[0], element), target);\n\t      };\n\t      dom.findUpVirtual = function(element, target) {\n\t        var parent = void 0;\n\t        parent = element.actualNode;\n\t        if (!element.shadowId && typeof element.actualNode.closest === 'function') {\n\t          var match = element.actualNode.closest(target);\n\t          if (match) {\n\t            return match;\n\t          }\n\t          return null;\n\t        }\n\t        do {\n\t          parent = parent.assignedSlot ? parent.assignedSlot : parent.parentNode;\n\t          if (parent && parent.nodeType === 11) {\n\t            parent = parent.host;\n\t          }\n\t        } while (parent && !axe.utils.matchesSelector(parent, target) && parent !== document.documentElement);\n\t        if (!axe.utils.matchesSelector(parent, target)) {\n\t          return null;\n\t        }\n\t        return parent;\n\t      };\n\t      dom.getComposedParent = function getComposedParent(element) {\n\t        if (element.assignedSlot) {\n\t          return getComposedParent(element.assignedSlot);\n\t        } else if (element.parentNode) {\n\t          var parentNode = element.parentNode;\n\t          if (parentNode.nodeType === 1) {\n\t            return parentNode;\n\t          } else if (parentNode.host) {\n\t            return parentNode.host;\n\t          }\n\t        }\n\t        return null;\n\t      };\n\t      dom.getElementByReference = function(node, attr) {\n\t        var fragment = node.getAttribute(attr);\n\t        if (fragment && fragment.charAt(0) === '#') {\n\t          fragment = decodeURIComponent(fragment.substring(1));\n\t          var candidate = document.getElementById(fragment);\n\t          if (candidate) {\n\t            return candidate;\n\t          }\n\t          candidate = document.getElementsByName(fragment);\n\t          if (candidate.length) {\n\t            return candidate[0];\n\t          }\n\t        }\n\t        return null;\n\t      };\n\t      dom.getElementCoordinates = function(element) {\n\t        'use strict';\n\t        var scrollOffset = dom.getScrollOffset(document), xOffset = scrollOffset.left, yOffset = scrollOffset.top, coords = element.getBoundingClientRect();\n\t        return {\n\t          top: coords.top + yOffset,\n\t          right: coords.right + xOffset,\n\t          bottom: coords.bottom + yOffset,\n\t          left: coords.left + xOffset,\n\t          width: coords.right - coords.left,\n\t          height: coords.bottom - coords.top\n\t        };\n\t      };\n\t      dom.getRootNode = function(node) {\n\t        var doc = node.getRootNode && node.getRootNode() || document;\n\t        if (doc === node) {\n\t          doc = document;\n\t        }\n\t        return doc;\n\t      };\n\t      dom.getScrollOffset = function(element) {\n\t        'use strict';\n\t        if (!element.nodeType && element.document) {\n\t          element = element.document;\n\t        }\n\t        if (element.nodeType === 9) {\n\t          var docElement = element.documentElement, body = element.body;\n\t          return {\n\t            left: docElement && docElement.scrollLeft || body && body.scrollLeft || 0,\n\t            top: docElement && docElement.scrollTop || body && body.scrollTop || 0\n\t          };\n\t        }\n\t        return {\n\t          left: element.scrollLeft,\n\t          top: element.scrollTop\n\t        };\n\t      };\n\t      dom.getViewportSize = function(win) {\n\t        'use strict';\n\t        var body, doc = win.document, docElement = doc.documentElement;\n\t        if (win.innerWidth) {\n\t          return {\n\t            width: win.innerWidth,\n\t            height: win.innerHeight\n\t          };\n\t        }\n\t        if (docElement) {\n\t          return {\n\t            width: docElement.clientWidth,\n\t            height: docElement.clientHeight\n\t          };\n\t        }\n\t        body = doc.body;\n\t        return {\n\t          width: body.clientWidth,\n\t          height: body.clientHeight\n\t        };\n\t      };\n\t      var hiddenTextElms = [ 'HEAD', 'TITLE', 'TEMPLATE', 'SCRIPT', 'STYLE', 'IFRAME', 'OBJECT', 'VIDEO', 'AUDIO', 'NOSCRIPT' ];\n\t      function hasChildTextNodes(elm) {\n\t        if (!hiddenTextElms.includes(elm.actualNode.nodeName.toUpperCase())) {\n\t          return elm.children.some(function(_ref10) {\n\t            var actualNode = _ref10.actualNode;\n\t            return actualNode.nodeType === 3 && actualNode.nodeValue.trim();\n\t          });\n\t        }\n\t      }\n\t      dom.hasContentVirtual = function(elm, noRecursion) {\n\t        return hasChildTextNodes(elm) || dom.isVisualContent(elm.actualNode) || !!aria.labelVirtual(elm) || !noRecursion && elm.children.some(function(child) {\n\t          return child.actualNode.nodeType === 1 && dom.hasContentVirtual(child);\n\t        });\n\t      };\n\t      dom.hasContent = function hasContent(elm, noRecursion) {\n\t        elm = axe.utils.getNodeFromTree(axe._tree[0], elm);\n\t        return dom.hasContentVirtual(elm, noRecursion);\n\t      };\n\t      dom.idrefs = function(node, attr) {\n\t        'use strict';\n\t        var index, length, doc = dom.getRootNode(node), result = [], idrefs = node.getAttribute(attr);\n\t        if (idrefs) {\n\t          idrefs = axe.utils.tokenList(idrefs);\n\t          for (index = 0, length = idrefs.length; index < length; index++) {\n\t            result.push(doc.getElementById(idrefs[index]));\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t      function focusDisabled(el) {\n\t        return el.disabled || !dom.isVisible(el, true) && el.nodeName.toUpperCase() !== 'AREA';\n\t      }\n\t      dom.isFocusable = function(el) {\n\t        'use strict';\n\t        if (focusDisabled(el)) {\n\t          return false;\n\t        } else if (dom.isNativelyFocusable(el)) {\n\t          return true;\n\t        }\n\t        var tabindex = el.getAttribute('tabindex');\n\t        if (tabindex && !isNaN(parseInt(tabindex, 10))) {\n\t          return true;\n\t        }\n\t        return false;\n\t      };\n\t      dom.isNativelyFocusable = function(el) {\n\t        'use strict';\n\t        if (!el || focusDisabled(el)) {\n\t          return false;\n\t        }\n\t        switch (el.nodeName.toUpperCase()) {\n\t         case 'A':\n\t         case 'AREA':\n\t          if (el.href) {\n\t            return true;\n\t          }\n\t          break;\n\t\n\t         case 'INPUT':\n\t          return el.type !== 'hidden';\n\t\n\t         case 'TEXTAREA':\n\t         case 'SELECT':\n\t         case 'DETAILS':\n\t         case 'BUTTON':\n\t          return true;\n\t        }\n\t        return false;\n\t      };\n\t      dom.insertedIntoFocusOrder = function(el) {\n\t        return el.tabIndex > -1 && dom.isFocusable(el) && !dom.isNativelyFocusable(el);\n\t      };\n\t      dom.isHTML5 = function(doc) {\n\t        var node = doc.doctype;\n\t        if (node === null) {\n\t          return false;\n\t        }\n\t        return node.name === 'html' && !node.publicId && !node.systemId;\n\t      };\n\t      function walkDomNode(node, functor) {\n\t        if (functor(node.actualNode) !== false) {\n\t          node.children.forEach(function(child) {\n\t            return walkDomNode(child, functor);\n\t          });\n\t        }\n\t      }\n\t      var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n\t      function isBlock(elm) {\n\t        var display = window.getComputedStyle(elm).getPropertyValue('display');\n\t        return blockLike.includes(display) || display.substr(0, 6) === 'table-';\n\t      }\n\t      function getBlockParent(node) {\n\t        var parentBlock = dom.getComposedParent(node);\n\t        while (parentBlock && !isBlock(parentBlock)) {\n\t          parentBlock = dom.getComposedParent(parentBlock);\n\t        }\n\t        return axe.utils.getNodeFromTree(axe._tree[0], parentBlock);\n\t      }\n\t      dom.isInTextBlock = function isInTextBlock(node) {\n\t        if (isBlock(node)) {\n\t          return false;\n\t        }\n\t        var virtualParent = getBlockParent(node);\n\t        var parentText = '';\n\t        var linkText = '';\n\t        var inBrBlock = 0;\n\t        walkDomNode(virtualParent, function(currNode) {\n\t          if (inBrBlock === 2) {\n\t            return false;\n\t          }\n\t          if (currNode.nodeType === 3) {\n\t            parentText += currNode.nodeValue;\n\t          }\n\t          if (currNode.nodeType !== 1) {\n\t            return;\n\t          }\n\t          var nodeName = (currNode.nodeName || '').toUpperCase();\n\t          if ([ 'BR', 'HR' ].includes(nodeName)) {\n\t            if (inBrBlock === 0) {\n\t              parentText = '';\n\t              linkText = '';\n\t            } else {\n\t              inBrBlock = 2;\n\t            }\n\t          } else if (currNode.style.display === 'none' || currNode.style.overflow === 'hidden' || ![ '', null, 'none' ].includes(currNode.style.float) || ![ '', null, 'relative' ].includes(currNode.style.position)) {\n\t            return false;\n\t          } else if (nodeName === 'A' && currNode.href || (currNode.getAttribute('role') || '').toLowerCase() === 'link') {\n\t            if (currNode === node) {\n\t              inBrBlock = 1;\n\t            }\n\t            linkText += currNode.textContent;\n\t            return false;\n\t          }\n\t        });\n\t        parentText = axe.commons.text.sanitize(parentText);\n\t        linkText = axe.commons.text.sanitize(linkText);\n\t        return parentText.length > linkText.length;\n\t      };\n\t      dom.isNode = function(element) {\n\t        'use strict';\n\t        return element instanceof Node;\n\t      };\n\t      function noParentScrolled(element, offset) {\n\t        element = dom.getComposedParent(element);\n\t        while (element && element.nodeName.toLowerCase() !== 'html') {\n\t          if (element.scrollTop) {\n\t            offset += element.scrollTop;\n\t            if (offset >= 0) {\n\t              return false;\n\t            }\n\t          }\n\t          element = dom.getComposedParent(element);\n\t        }\n\t        return true;\n\t      }\n\t      dom.isOffscreen = function(element) {\n\t        var leftBoundary = void 0;\n\t        var docElement = document.documentElement;\n\t        var styl = window.getComputedStyle(element);\n\t        var dir = window.getComputedStyle(document.body || docElement).getPropertyValue('direction');\n\t        var coords = dom.getElementCoordinates(element);\n\t        if (coords.bottom < 0 && (noParentScrolled(element, coords.bottom) || styl.position === 'absolute')) {\n\t          return true;\n\t        }\n\t        if (coords.left === 0 && coords.right === 0) {\n\t          return false;\n\t        }\n\t        if (dir === 'ltr') {\n\t          if (coords.right <= 0) {\n\t            return true;\n\t          }\n\t        } else {\n\t          leftBoundary = Math.max(docElement.scrollWidth, dom.getViewportSize(window).width);\n\t          if (coords.left >= leftBoundary) {\n\t            return true;\n\t          }\n\t        }\n\t        return false;\n\t      };\n\t      function isClipped(clip) {\n\t        'use strict';\n\t        var matches = clip.match(/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/);\n\t        if (matches && matches.length === 5) {\n\t          return matches[3] - matches[1] <= 0 && matches[2] - matches[4] <= 0;\n\t        }\n\t        return false;\n\t      }\n\t      dom.isVisible = function(el, screenReader, recursed) {\n\t        'use strict';\n\t        var style, nodeName, parent;\n\t        if (el.nodeType === 9) {\n\t          return true;\n\t        }\n\t        if (el.nodeType === 11) {\n\t          el = el.host;\n\t        }\n\t        style = window.getComputedStyle(el, null);\n\t        if (style === null) {\n\t          return false;\n\t        }\n\t        nodeName = el.nodeName.toUpperCase();\n\t        if (style.getPropertyValue('display') === 'none' || nodeName.toUpperCase() === 'STYLE' || nodeName.toUpperCase() === 'SCRIPT' || !screenReader && isClipped(style.getPropertyValue('clip')) || !recursed && (style.getPropertyValue('visibility') === 'hidden' || !screenReader && dom.isOffscreen(el)) || screenReader && el.getAttribute('aria-hidden') === 'true') {\n\t          return false;\n\t        }\n\t        parent = el.assignedSlot ? el.assignedSlot : el.parentNode;\n\t        if (parent) {\n\t          return dom.isVisible(parent, screenReader, true);\n\t        }\n\t        return false;\n\t      };\n\t      var visualRoles = [ 'checkbox', 'img', 'radio', 'range', 'slider', 'spinbutton', 'textbox' ];\n\t      dom.isVisualContent = function(element) {\n\t        var role = element.getAttribute('role');\n\t        if (role) {\n\t          return visualRoles.indexOf(role) !== -1;\n\t        }\n\t        switch (element.tagName.toUpperCase()) {\n\t         case 'IMG':\n\t         case 'IFRAME':\n\t         case 'OBJECT':\n\t         case 'VIDEO':\n\t         case 'AUDIO':\n\t         case 'CANVAS':\n\t         case 'SVG':\n\t         case 'MATH':\n\t         case 'BUTTON':\n\t         case 'SELECT':\n\t         case 'TEXTAREA':\n\t         case 'KEYGEN':\n\t         case 'PROGRESS':\n\t         case 'METER':\n\t          return true;\n\t\n\t         case 'INPUT':\n\t          return element.type !== 'hidden';\n\t\n\t         default:\n\t          return false;\n\t        }\n\t      };\n\t      dom.shadowElementsFromPoint = function(nodeX, nodeY) {\n\t        var root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\t        return root.elementsFromPoint(nodeX, nodeY).reduce(function(stack, elm) {\n\t          if (axe.utils.isShadowRoot(elm)) {\n\t            var shadowStack = dom.shadowElementsFromPoint(nodeX, nodeY, elm.shadowRoot);\n\t            stack = stack.concat(shadowStack);\n\t            if (stack.length && axe.commons.dom.visuallyContains(stack[0], elm)) {\n\t              stack.push(elm);\n\t            }\n\t          } else {\n\t            stack.push(elm);\n\t          }\n\t          return stack;\n\t        }, []);\n\t      };\n\t      dom.visuallyContains = function(node, parent) {\n\t        var rectBound = node.getBoundingClientRect();\n\t        var margin = .01;\n\t        var rect = {\n\t          top: rectBound.top + margin,\n\t          bottom: rectBound.bottom - margin,\n\t          left: rectBound.left + margin,\n\t          right: rectBound.right - margin\n\t        };\n\t        var parentRect = parent.getBoundingClientRect();\n\t        var parentTop = parentRect.top;\n\t        var parentLeft = parentRect.left;\n\t        var parentScrollArea = {\n\t          top: parentTop - parent.scrollTop,\n\t          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n\t          left: parentLeft - parent.scrollLeft,\n\t          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n\t        };\n\t        var style = window.getComputedStyle(parent);\n\t        if (style.getPropertyValue('display') === 'inline') {\n\t          return true;\n\t        }\n\t        if (rect.left < parentScrollArea.left && rect.left < parentRect.left || rect.top < parentScrollArea.top && rect.top < parentRect.top || rect.right > parentScrollArea.right && rect.right > parentRect.right || rect.bottom > parentScrollArea.bottom && rect.bottom > parentRect.bottom) {\n\t          return false;\n\t        }\n\t        if (rect.right > parentRect.right || rect.bottom > parentRect.bottom) {\n\t          return style.overflow === 'scroll' || style.overflow === 'auto' || style.overflow === 'hidden' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n\t        }\n\t        return true;\n\t      };\n\t      dom.visuallyOverlaps = function(rect, parent) {\n\t        var parentRect = parent.getBoundingClientRect();\n\t        var parentTop = parentRect.top;\n\t        var parentLeft = parentRect.left;\n\t        var parentScrollArea = {\n\t          top: parentTop - parent.scrollTop,\n\t          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n\t          left: parentLeft - parent.scrollLeft,\n\t          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n\t        };\n\t        if (rect.left > parentScrollArea.right && rect.left > parentRect.right || rect.top > parentScrollArea.bottom && rect.top > parentRect.bottom || rect.right < parentScrollArea.left && rect.right < parentRect.left || rect.bottom < parentScrollArea.top && rect.bottom < parentRect.top) {\n\t          return false;\n\t        }\n\t        var style = window.getComputedStyle(parent);\n\t        if (rect.left > parentRect.right || rect.top > parentRect.bottom) {\n\t          return style.overflow === 'scroll' || style.overflow === 'auto' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n\t        }\n\t        return true;\n\t      };\n\t      table.getAllCells = function(tableElm) {\n\t        var rowIndex, cellIndex, rowLength, cellLength;\n\t        var cells = [];\n\t        for (rowIndex = 0, rowLength = tableElm.rows.length; rowIndex < rowLength; rowIndex++) {\n\t          for (cellIndex = 0, cellLength = tableElm.rows[rowIndex].cells.length; cellIndex < cellLength; cellIndex++) {\n\t            cells.push(tableElm.rows[rowIndex].cells[cellIndex]);\n\t          }\n\t        }\n\t        return cells;\n\t      };\n\t      table.getCellPosition = function(cell, tableGrid) {\n\t        var rowIndex, index;\n\t        if (!tableGrid) {\n\t          tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n\t        }\n\t        for (rowIndex = 0; rowIndex < tableGrid.length; rowIndex++) {\n\t          if (tableGrid[rowIndex]) {\n\t            index = tableGrid[rowIndex].indexOf(cell);\n\t            if (index !== -1) {\n\t              return {\n\t                x: index,\n\t                y: rowIndex\n\t              };\n\t            }\n\t          }\n\t        }\n\t      };\n\t      table.getHeaders = function(cell) {\n\t        if (cell.hasAttribute('headers')) {\n\t          return commons.dom.idrefs(cell, 'headers');\n\t        }\n\t        var tableGrid = commons.table.toGrid(commons.dom.findUp(cell, 'table'));\n\t        var position = commons.table.getCellPosition(cell, tableGrid);\n\t        var rowHeaders = table.traverse('left', position, tableGrid).filter(function(cell) {\n\t          return table.isRowHeader(cell);\n\t        });\n\t        var colHeaders = table.traverse('up', position, tableGrid).filter(function(cell) {\n\t          return table.isColumnHeader(cell);\n\t        });\n\t        return [].concat(rowHeaders, colHeaders).reverse();\n\t      };\n\t      table.getScope = function(cell) {\n\t        var scope = cell.getAttribute('scope');\n\t        var role = cell.getAttribute('role');\n\t        if (cell instanceof Element === false || [ 'TD', 'TH' ].indexOf(cell.nodeName.toUpperCase()) === -1) {\n\t          throw new TypeError('Expected TD or TH element');\n\t        }\n\t        if (role === 'columnheader') {\n\t          return 'col';\n\t        } else if (role === 'rowheader') {\n\t          return 'row';\n\t        } else if (scope === 'col' || scope === 'row') {\n\t          return scope;\n\t        } else if (cell.nodeName.toUpperCase() !== 'TH') {\n\t          return false;\n\t        }\n\t        var tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n\t        var pos = table.getCellPosition(cell);\n\t        var headerRow = tableGrid[pos.y].reduce(function(headerRow, cell) {\n\t          return headerRow && cell.nodeName.toUpperCase() === 'TH';\n\t        }, true);\n\t        if (headerRow) {\n\t          return 'col';\n\t        }\n\t        var headerCol = tableGrid.map(function(col) {\n\t          return col[pos.x];\n\t        }).reduce(function(headerCol, cell) {\n\t          return headerCol && cell.nodeName.toUpperCase() === 'TH';\n\t        }, true);\n\t        if (headerCol) {\n\t          return 'row';\n\t        }\n\t        return 'auto';\n\t      };\n\t      table.isColumnHeader = function(element) {\n\t        return [ 'col', 'auto' ].indexOf(table.getScope(element)) !== -1;\n\t      };\n\t      table.isDataCell = function(cell) {\n\t        if (!cell.children.length && !cell.textContent.trim()) {\n\t          return false;\n\t        }\n\t        return cell.nodeName.toUpperCase() === 'TD';\n\t      };\n\t      table.isDataTable = function(node) {\n\t        var role = (node.getAttribute('role') || '').toLowerCase();\n\t        if ((role === 'presentation' || role === 'none') && !dom.isFocusable(node)) {\n\t          return false;\n\t        }\n\t        if (node.getAttribute('contenteditable') === 'true' || dom.findUp(node, '[contenteditable=\"true\"]')) {\n\t          return true;\n\t        }\n\t        if (role === 'grid' || role === 'treegrid' || role === 'table') {\n\t          return true;\n\t        }\n\t        if (commons.aria.getRoleType(role) === 'landmark') {\n\t          return true;\n\t        }\n\t        if (node.getAttribute('datatable') === '0') {\n\t          return false;\n\t        }\n\t        if (node.getAttribute('summary')) {\n\t          return true;\n\t        }\n\t        if (node.tHead || node.tFoot || node.caption) {\n\t          return true;\n\t        }\n\t        for (var childIndex = 0, childLength = node.children.length; childIndex < childLength; childIndex++) {\n\t          if (node.children[childIndex].nodeName.toUpperCase() === 'COLGROUP') {\n\t            return true;\n\t          }\n\t        }\n\t        var cells = 0;\n\t        var rowLength = node.rows.length;\n\t        var row, cell;\n\t        var hasBorder = false;\n\t        for (var rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n\t          row = node.rows[rowIndex];\n\t          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t            cell = row.cells[cellIndex];\n\t            if (cell.nodeName.toUpperCase() === 'TH') {\n\t              return true;\n\t            }\n\t            if (!hasBorder && (cell.offsetWidth !== cell.clientWidth || cell.offsetHeight !== cell.clientHeight)) {\n\t              hasBorder = true;\n\t            }\n\t            if (cell.getAttribute('scope') || cell.getAttribute('headers') || cell.getAttribute('abbr')) {\n\t              return true;\n\t            }\n\t            if ([ 'columnheader', 'rowheader' ].includes((cell.getAttribute('role') || '').toLowerCase())) {\n\t              return true;\n\t            }\n\t            if (cell.children.length === 1 && cell.children[0].nodeName.toUpperCase() === 'ABBR') {\n\t              return true;\n\t            }\n\t            cells++;\n\t          }\n\t        }\n\t        if (node.getElementsByTagName('table').length) {\n\t          return false;\n\t        }\n\t        if (rowLength < 2) {\n\t          return false;\n\t        }\n\t        var sampleRow = node.rows[Math.ceil(rowLength / 2)];\n\t        if (sampleRow.cells.length === 1 && sampleRow.cells[0].colSpan === 1) {\n\t          return false;\n\t        }\n\t        if (sampleRow.cells.length >= 5) {\n\t          return true;\n\t        }\n\t        if (hasBorder) {\n\t          return true;\n\t        }\n\t        var bgColor, bgImage;\n\t        for (rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n\t          row = node.rows[rowIndex];\n\t          if (bgColor && bgColor !== window.getComputedStyle(row).getPropertyValue('background-color')) {\n\t            return true;\n\t          } else {\n\t            bgColor = window.getComputedStyle(row).getPropertyValue('background-color');\n\t          }\n\t          if (bgImage && bgImage !== window.getComputedStyle(row).getPropertyValue('background-image')) {\n\t            return true;\n\t          } else {\n\t            bgImage = window.getComputedStyle(row).getPropertyValue('background-image');\n\t          }\n\t        }\n\t        if (rowLength >= 20) {\n\t          return true;\n\t        }\n\t        if (dom.getElementCoordinates(node).width > dom.getViewportSize(window).width * .95) {\n\t          return false;\n\t        }\n\t        if (cells < 10) {\n\t          return false;\n\t        }\n\t        if (node.querySelector('object, embed, iframe, applet')) {\n\t          return false;\n\t        }\n\t        return true;\n\t      };\n\t      table.isHeader = function(cell) {\n\t        if (table.isColumnHeader(cell) || table.isRowHeader(cell)) {\n\t          return true;\n\t        }\n\t        if (cell.getAttribute('id')) {\n\t          var id = axe.utils.escapeSelector(cell.getAttribute('id'));\n\t          return !!document.querySelector('[headers~=\"' + id + '\"]');\n\t        }\n\t        return false;\n\t      };\n\t      table.isRowHeader = function(cell) {\n\t        return [ 'row', 'auto' ].includes(table.getScope(cell));\n\t      };\n\t      table.toGrid = function(node) {\n\t        var table = [];\n\t        var rows = node.rows;\n\t        for (var i = 0, rowLength = rows.length; i < rowLength; i++) {\n\t          var cells = rows[i].cells;\n\t          table[i] = table[i] || [];\n\t          var columnIndex = 0;\n\t          for (var j = 0, cellLength = cells.length; j < cellLength; j++) {\n\t            for (var colSpan = 0; colSpan < cells[j].colSpan; colSpan++) {\n\t              for (var rowSpan = 0; rowSpan < cells[j].rowSpan; rowSpan++) {\n\t                table[i + rowSpan] = table[i + rowSpan] || [];\n\t                while (table[i + rowSpan][columnIndex]) {\n\t                  columnIndex++;\n\t                }\n\t                table[i + rowSpan][columnIndex] = cells[j];\n\t              }\n\t              columnIndex++;\n\t            }\n\t          }\n\t        }\n\t        return table;\n\t      };\n\t      table.toArray = table.toGrid;\n\t      (function(table) {\n\t        var traverseTable = function traverseTable(dir, position, tableGrid, callback) {\n\t          var result;\n\t          var cell = tableGrid[position.y] ? tableGrid[position.y][position.x] : undefined;\n\t          if (!cell) {\n\t            return [];\n\t          }\n\t          if (typeof callback === 'function') {\n\t            result = callback(cell, position, tableGrid);\n\t            if (result === true) {\n\t              return [ cell ];\n\t            }\n\t          }\n\t          result = traverseTable(dir, {\n\t            x: position.x + dir.x,\n\t            y: position.y + dir.y\n\t          }, tableGrid, callback);\n\t          result.unshift(cell);\n\t          return result;\n\t        };\n\t        table.traverse = function(dir, startPos, tableGrid, callback) {\n\t          if (Array.isArray(startPos)) {\n\t            callback = tableGrid;\n\t            tableGrid = startPos;\n\t            startPos = {\n\t              x: 0,\n\t              y: 0\n\t            };\n\t          }\n\t          if (typeof dir === 'string') {\n\t            switch (dir) {\n\t             case 'left':\n\t              dir = {\n\t                x: -1,\n\t                y: 0\n\t              };\n\t              break;\n\t\n\t             case 'up':\n\t              dir = {\n\t                x: 0,\n\t                y: -1\n\t              };\n\t              break;\n\t\n\t             case 'right':\n\t              dir = {\n\t                x: 1,\n\t                y: 0\n\t              };\n\t              break;\n\t\n\t             case 'down':\n\t              dir = {\n\t                x: 0,\n\t                y: 1\n\t              };\n\t              break;\n\t            }\n\t          }\n\t          return traverseTable(dir, {\n\t            x: startPos.x + dir.x,\n\t            y: startPos.y + dir.y\n\t          }, tableGrid, callback);\n\t        };\n\t      })(table);\n\t      var defaultButtonValues = {\n\t        submit: 'Submit',\n\t        reset: 'Reset'\n\t      };\n\t      var inputTypes = [ 'text', 'search', 'tel', 'url', 'email', 'date', 'time', 'number', 'range', 'color' ];\n\t      var phrasingElements = [ 'A', 'EM', 'STRONG', 'SMALL', 'MARK', 'ABBR', 'DFN', 'I', 'B', 'S', 'U', 'CODE', 'VAR', 'SAMP', 'KBD', 'SUP', 'SUB', 'Q', 'CITE', 'SPAN', 'BDO', 'BDI', 'BR', 'WBR', 'INS', 'DEL', 'IMG', 'EMBED', 'OBJECT', 'IFRAME', 'MAP', 'AREA', 'SCRIPT', 'NOSCRIPT', 'RUBY', 'VIDEO', 'AUDIO', 'INPUT', 'TEXTAREA', 'SELECT', 'BUTTON', 'LABEL', 'OUTPUT', 'DATALIST', 'KEYGEN', 'PROGRESS', 'COMMAND', 'CANVAS', 'TIME', 'METER' ];\n\t      function findLabel(virtualNode) {\n\t        var label = void 0;\n\t        if (virtualNode.actualNode.id) {\n\t          label = dom.findElmsInContext({\n\t            elm: 'label',\n\t            attr: 'for',\n\t            value: virtualNode.actualNode.id,\n\t            context: virtualNode.actualNode\n\t          })[0];\n\t        } else {\n\t          label = dom.findUpVirtual(virtualNode, 'label');\n\t        }\n\t        return axe.utils.getNodeFromTree(axe._tree[0], label);\n\t      }\n\t      function isButton(_ref11) {\n\t        var actualNode = _ref11.actualNode;\n\t        return [ 'button', 'reset', 'submit' ].includes(actualNode.type.toLowerCase());\n\t      }\n\t      function isInput(_ref12) {\n\t        var actualNode = _ref12.actualNode;\n\t        var nodeName = actualNode.nodeName.toUpperCase();\n\t        return nodeName === 'TEXTAREA' || nodeName === 'SELECT' || nodeName === 'INPUT' && actualNode.type.toLowerCase() !== 'hidden';\n\t      }\n\t      function shouldCheckSubtree(_ref13) {\n\t        var actualNode = _ref13.actualNode;\n\t        return [ 'BUTTON', 'SUMMARY', 'A' ].includes(actualNode.nodeName.toUpperCase());\n\t      }\n\t      function shouldNeverCheckSubtree(_ref14) {\n\t        var actualNode = _ref14.actualNode;\n\t        return [ 'TABLE', 'FIGURE' ].includes(actualNode.nodeName.toUpperCase());\n\t      }\n\t      function formValueText(_ref15) {\n\t        var actualNode = _ref15.actualNode;\n\t        var nodeName = actualNode.nodeName.toUpperCase();\n\t        if (nodeName === 'INPUT') {\n\t          if (!actualNode.hasAttribute('type') || inputTypes.includes(actualNode.type.toLowerCase())) {\n\t            return actualNode.value;\n\t          }\n\t          return '';\n\t        }\n\t        if (nodeName === 'SELECT') {\n\t          var opts = actualNode.options;\n\t          if (opts && opts.length) {\n\t            var returnText = '';\n\t            for (var i = 0; i < opts.length; i++) {\n\t              if (opts[i].selected) {\n\t                returnText += ' ' + opts[i].text;\n\t              }\n\t            }\n\t            return text.sanitize(returnText);\n\t          }\n\t          return '';\n\t        }\n\t        if (nodeName === 'TEXTAREA' && actualNode.value) {\n\t          return actualNode.value;\n\t        }\n\t        return '';\n\t      }\n\t      function checkDescendant(_ref16, nodeName) {\n\t        var actualNode = _ref16.actualNode;\n\t        var candidate = actualNode.querySelector(nodeName.toLowerCase());\n\t        if (candidate) {\n\t          return text.accessibleText(candidate);\n\t        }\n\t        return '';\n\t      }\n\t      function isEmbeddedControl(elm) {\n\t        if (!elm) {\n\t          return false;\n\t        }\n\t        var actualNode = elm.actualNode;\n\t        switch (actualNode.nodeName.toUpperCase()) {\n\t         case 'SELECT':\n\t         case 'TEXTAREA':\n\t          return true;\n\t\n\t         case 'INPUT':\n\t          return !actualNode.hasAttribute('type') || inputTypes.includes(actualNode.getAttribute('type').toLowerCase());\n\t\n\t         default:\n\t          return false;\n\t        }\n\t      }\n\t      function shouldCheckAlt(_ref17) {\n\t        var actualNode = _ref17.actualNode;\n\t        var nodeName = actualNode.nodeName.toUpperCase();\n\t        return [ 'IMG', 'APPLET', 'AREA' ].includes(nodeName) || nodeName === 'INPUT' && actualNode.type.toLowerCase() === 'image';\n\t      }\n\t      function nonEmptyText(t) {\n\t        return !!text.sanitize(t);\n\t      }\n\t      text.accessibleText = function accessibleText(element, inLabelledByContext) {\n\t        var virtualNode = axe.utils.getNodeFromTree(axe._tree[0], element);\n\t        return axe.commons.text.accessibleTextVirtual(virtualNode, inLabelledByContext);\n\t      };\n\t      text.accessibleTextVirtual = function accessibleTextVirtual(element, inLabelledByContext) {\n\t        var accessibleNameComputation = void 0;\n\t        var encounteredNodes = [];\n\t        if (element instanceof Node) {\n\t          element = axe.utils.getNodeFromTree(axe._tree[0], element);\n\t        }\n\t        function getInnerText(element, inLabelledByContext, inControlContext) {\n\t          return element.children.reduce(function(returnText, child) {\n\t            var actualNode = child.actualNode;\n\t            if (actualNode.nodeType === 3) {\n\t              returnText += actualNode.nodeValue;\n\t            } else if (actualNode.nodeType === 1) {\n\t              if (!phrasingElements.includes(actualNode.nodeName.toUpperCase())) {\n\t                returnText += ' ';\n\t              }\n\t              returnText += accessibleNameComputation(child, inLabelledByContext, inControlContext);\n\t            }\n\t            return returnText;\n\t          }, '');\n\t        }\n\t        function getLayoutTableText(element) {\n\t          if (!axe.commons.table.isDataTable(element.actualNode) && axe.commons.table.getAllCells(element.actualNode).length === 1) {\n\t            return getInnerText(element, false, false).trim();\n\t          }\n\t          return '';\n\t        }\n\t        function checkNative(element, inLabelledByContext, inControlContext) {\n\t          var returnText = '';\n\t          var actualNode = element.actualNode;\n\t          var nodeName = actualNode.nodeName.toUpperCase();\n\t          if (shouldCheckSubtree(element)) {\n\t            returnText = getInnerText(element, false, false) || '';\n\t            if (nonEmptyText(returnText)) {\n\t              return returnText;\n\t            }\n\t          }\n\t          if (nodeName === 'FIGURE') {\n\t            returnText = checkDescendant(element, 'figcaption');\n\t            if (nonEmptyText(returnText)) {\n\t              return returnText;\n\t            }\n\t          }\n\t          if (nodeName === 'TABLE') {\n\t            returnText = checkDescendant(element, 'caption');\n\t            if (nonEmptyText(returnText)) {\n\t              return returnText;\n\t            }\n\t            returnText = actualNode.getAttribute('title') || actualNode.getAttribute('summary') || getLayoutTableText(element) || '';\n\t            if (nonEmptyText(returnText)) {\n\t              return returnText;\n\t            }\n\t          }\n\t          if (shouldCheckAlt(element)) {\n\t            return actualNode.getAttribute('alt') || '';\n\t          }\n\t          if (isInput(element) && !inControlContext) {\n\t            if (isButton(element)) {\n\t              return actualNode.value || actualNode.title || defaultButtonValues[actualNode.type] || '';\n\t            }\n\t            var labelElement = findLabel(element);\n\t            if (labelElement) {\n\t              return accessibleNameComputation(labelElement, inLabelledByContext, true);\n\t            }\n\t          }\n\t          return '';\n\t        }\n\t        function checkARIA(element, inLabelledByContext, inControlContext) {\n\t          var returnText = '';\n\t          var actualNode = element.actualNode;\n\t          if (!inLabelledByContext && actualNode.hasAttribute('aria-labelledby')) {\n\t            returnText = text.sanitize(dom.idrefs(actualNode, 'aria-labelledby').map(function(label) {\n\t              if (label !== null) {\n\t                if (actualNode === label) {\n\t                  encounteredNodes.pop();\n\t                }\n\t                var vLabel = axe.utils.getNodeFromTree(axe._tree[0], label);\n\t                return accessibleNameComputation(vLabel, true, actualNode !== label);\n\t              } else {\n\t                return '';\n\t              }\n\t            }).join(' '));\n\t          }\n\t          if (!returnText && !(inControlContext && isEmbeddedControl(element)) && actualNode.hasAttribute('aria-label')) {\n\t            return text.sanitize(actualNode.getAttribute('aria-label'));\n\t          }\n\t          return returnText;\n\t        }\n\t        accessibleNameComputation = function accessibleNameComputation(element, inLabelledByContext, inControlContext) {\n\t          var returnText = void 0;\n\t          if (!element || encounteredNodes.includes(element)) {\n\t            return '';\n\t          } else if (element !== null && element.actualNode instanceof Node !== true) {\n\t            throw new Error('Invalid argument. Virtual Node must be provided');\n\t          } else if (!inLabelledByContext && !dom.isVisible(element.actualNode, true)) {\n\t            return '';\n\t          }\n\t          encounteredNodes.push(element);\n\t          var role = element.actualNode.getAttribute('role');\n\t          returnText = checkARIA(element, inLabelledByContext, inControlContext);\n\t          if (nonEmptyText(returnText)) {\n\t            return returnText;\n\t          }\n\t          returnText = checkNative(element, inLabelledByContext, inControlContext);\n\t          if (nonEmptyText(returnText)) {\n\t            return returnText;\n\t          }\n\t          if (inControlContext) {\n\t            returnText = formValueText(element);\n\t            if (nonEmptyText(returnText)) {\n\t              return returnText;\n\t            }\n\t          }\n\t          if (!shouldNeverCheckSubtree(element) && (!role || aria.getRolesWithNameFromContents().indexOf(role) !== -1)) {\n\t            returnText = getInnerText(element, inLabelledByContext, inControlContext);\n\t            if (nonEmptyText(returnText)) {\n\t              return returnText;\n\t            }\n\t          }\n\t          if (element.actualNode.hasAttribute('title')) {\n\t            return element.actualNode.getAttribute('title');\n\t          }\n\t          return '';\n\t        };\n\t        return text.sanitize(accessibleNameComputation(element, inLabelledByContext));\n\t      };\n\t      text.labelVirtual = function(node) {\n\t        var ref, candidate, doc;\n\t        candidate = aria.labelVirtual(node);\n\t        if (candidate) {\n\t          return candidate;\n\t        }\n\t        if (node.actualNode.id) {\n\t          var id = axe.commons.utils.escapeSelector(node.actualNode.getAttribute('id'));\n\t          doc = axe.commons.dom.getRootNode(node.actualNode);\n\t          ref = doc.querySelector('label[for=\"' + id + '\"]');\n\t          candidate = ref && text.visible(ref, true);\n\t          if (candidate) {\n\t            return candidate;\n\t          }\n\t        }\n\t        ref = dom.findUpVirtual(node, 'label');\n\t        candidate = ref && text.visible(ref, true);\n\t        if (candidate) {\n\t          return candidate;\n\t        }\n\t        return null;\n\t      };\n\t      text.label = function(node) {\n\t        node = axe.utils.getNodeFromTree(axe._tree[0], node);\n\t        return text.labelVirtual(node);\n\t      };\n\t      text.sanitize = function(str) {\n\t        'use strict';\n\t        return str.replace(/\\r\\n/g, '\\n').replace(/\\u00A0/g, ' ').replace(/[\\s]{2,}/g, ' ').trim();\n\t      };\n\t      text.visibleVirtual = function(element, screenReader, noRecursing) {\n\t        var result = element.children.map(function(child) {\n\t          if (child.actualNode.nodeType === 3) {\n\t            var nodeValue = child.actualNode.nodeValue;\n\t            if (nodeValue && dom.isVisible(element.actualNode, screenReader)) {\n\t              return nodeValue;\n\t            }\n\t          } else if (!noRecursing) {\n\t            return text.visibleVirtual(child, screenReader);\n\t          }\n\t        }).join('');\n\t        return text.sanitize(result);\n\t      };\n\t      text.visible = function(element, screenReader, noRecursing) {\n\t        element = axe.utils.getNodeFromTree(axe._tree[0], element);\n\t        return text.visibleVirtual(element, screenReader, noRecursing);\n\t      };\n\t      axe.utils.tokenList = function(str) {\n\t        'use strict';\n\t        return str.trim().replace(/\\s{2,}/g, ' ').split(' ');\n\t      };\n\t      var langs = [ 'aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'in', 'io', 'is', 'it', 'iu', 'iw', 'ja', 'ji', 'jv', 'jw', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mo', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu', 'aaa', 'aab', 'aac', 'aad', 'aae', 'aaf', 'aag', 'aah', 'aai', 'aak', 'aal', 'aam', 'aan', 'aao', 'aap', 'aaq', 'aas', 'aat', 'aau', 'aav', 'aaw', 'aax', 'aaz', 'aba', 'abb', 'abc', 'abd', 'abe', 'abf', 'abg', 'abh', 'abi', 'abj', 'abl', 'abm', 'abn', 'abo', 'abp', 'abq', 'abr', 'abs', 'abt', 'abu', 'abv', 'abw', 'abx', 'aby', 'abz', 'aca', 'acb', 'acd', 'ace', 'acf', 'ach', 'aci', 'ack', 'acl', 'acm', 'acn', 'acp', 'acq', 'acr', 'acs', 'act', 'acu', 'acv', 'acw', 'acx', 'acy', 'acz', 'ada', 'adb', 'add', 'ade', 'adf', 'adg', 'adh', 'adi', 'adj', 'adl', 'adn', 'ado', 'adp', 'adq', 'adr', 'ads', 'adt', 'adu', 'adw', 'adx', 'ady', 'adz', 'aea', 'aeb', 'aec', 'aed', 'aee', 'aek', 'ael', 'aem', 'aen', 'aeq', 'aer', 'aes', 'aeu', 'aew', 'aey', 'aez', 'afa', 'afb', 'afd', 'afe', 'afg', 'afh', 'afi', 'afk', 'afn', 'afo', 'afp', 'afs', 'aft', 'afu', 'afz', 'aga', 'agb', 'agc', 'agd', 'age', 'agf', 'agg', 'agh', 'agi', 'agj', 'agk', 'agl', 'agm', 'agn', 'ago', 'agp', 'agq', 'agr', 'ags', 'agt', 'agu', 'agv', 'agw', 'agx', 'agy', 'agz', 'aha', 'ahb', 'ahg', 'ahh', 'ahi', 'ahk', 'ahl', 'ahm', 'ahn', 'aho', 'ahp', 'ahr', 'ahs', 'aht', 'aia', 'aib', 'aic', 'aid', 'aie', 'aif', 'aig', 'aih', 'aii', 'aij', 'aik', 'ail', 'aim', 'ain', 'aio', 'aip', 'aiq', 'air', 'ais', 'ait', 'aiw', 'aix', 'aiy', 'aja', 'ajg', 'aji', 'ajn', 'ajp', 'ajt', 'aju', 'ajw', 'ajz', 'akb', 'akc', 'akd', 'ake', 'akf', 'akg', 'akh', 'aki', 'akj', 'akk', 'akl', 'akm', 'ako', 'akp', 'akq', 'akr', 'aks', 'akt', 'aku', 'akv', 'akw', 'akx', 'aky', 'akz', 'ala', 'alc', 'ald', 'ale', 'alf', 'alg', 'alh', 'ali', 'alj', 'alk', 'all', 'alm', 'aln', 'alo', 'alp', 'alq', 'alr', 'als', 'alt', 'alu', 'alv', 'alw', 'alx', 'aly', 'alz', 'ama', 'amb', 'amc', 'ame', 'amf', 'amg', 'ami', 'amj', 'amk', 'aml', 'amm', 'amn', 'amo', 'amp', 'amq', 'amr', 'ams', 'amt', 'amu', 'amv', 'amw', 'amx', 'amy', 'amz', 'ana', 'anb', 'anc', 'and', 'ane', 'anf', 'ang', 'anh', 'ani', 'anj', 'ank', 'anl', 'anm', 'ann', 'ano', 'anp', 'anq', 'anr', 'ans', 'ant', 'anu', 'anv', 'anw', 'anx', 'any', 'anz', 'aoa', 'aob', 'aoc', 'aod', 'aoe', 'aof', 'aog', 'aoh', 'aoi', 'aoj', 'aok', 'aol', 'aom', 'aon', 'aor', 'aos', 'aot', 'aou', 'aox', 'aoz', 'apa', 'apb', 'apc', 'apd', 'ape', 'apf', 'apg', 'aph', 'api', 'apj', 'apk', 'apl', 'apm', 'apn', 'apo', 'app', 'apq', 'apr', 'aps', 'apt', 'apu', 'apv', 'apw', 'apx', 'apy', 'apz', 'aqa', 'aqc', 'aqd', 'aqg', 'aql', 'aqm', 'aqn', 'aqp', 'aqr', 'aqt', 'aqz', 'arb', 'arc', 'ard', 'are', 'arh', 'ari', 'arj', 'ark', 'arl', 'arn', 'aro', 'arp', 'arq', 'arr', 'ars', 'art', 'aru', 'arv', 'arw', 'arx', 'ary', 'arz', 'asa', 'asb', 'asc', 'asd', 'ase', 'asf', 'asg', 'ash', 'asi', 'asj', 'ask', 'asl', 'asn', 'aso', 'asp', 'asq', 'asr', 'ass', 'ast', 'asu', 'asv', 'asw', 'asx', 'asy', 'asz', 'ata', 'atb', 'atc', 'atd', 'ate', 'atg', 'ath', 'ati', 'atj', 'atk', 'atl', 'atm', 'atn', 'ato', 'atp', 'atq', 'atr', 'ats', 'att', 'atu', 'atv', 'atw', 'atx', 'aty', 'atz', 'aua', 'aub', 'auc', 'aud', 'aue', 'auf', 'aug', 'auh', 'aui', 'auj', 'auk', 'aul', 'aum', 'aun', 'auo', 'aup', 'auq', 'aur', 'aus', 'aut', 'auu', 'auw', 'aux', 'auy', 'auz', 'avb', 'avd', 'avi', 'avk', 'avl', 'avm', 'avn', 'avo', 'avs', 'avt', 'avu', 'avv', 'awa', 'awb', 'awc', 'awd', 'awe', 'awg', 'awh', 'awi', 'awk', 'awm', 'awn', 'awo', 'awr', 'aws', 'awt', 'awu', 'awv', 'aww', 'awx', 'awy', 'axb', 'axe', 'axg', 'axk', 'axl', 'axm', 'axx', 'aya', 'ayb', 'ayc', 'ayd', 'aye', 'ayg', 'ayh', 'ayi', 'ayk', 'ayl', 'ayn', 'ayo', 'ayp', 'ayq', 'ayr', 'ays', 'ayt', 'ayu', 'ayx', 'ayy', 'ayz', 'aza', 'azb', 'azc', 'azd', 'azg', 'azj', 'azm', 'azn', 'azo', 'azt', 'azz', 'baa', 'bab', 'bac', 'bad', 'bae', 'baf', 'bag', 'bah', 'bai', 'baj', 'bal', 'ban', 'bao', 'bap', 'bar', 'bas', 'bat', 'bau', 'bav', 'baw', 'bax', 'bay', 'baz', 'bba', 'bbb', 'bbc', 'bbd', 'bbe', 'bbf', 'bbg', 'bbh', 'bbi', 'bbj', 'bbk', 'bbl', 'bbm', 'bbn', 'bbo', 'bbp', 'bbq', 'bbr', 'bbs', 'bbt', 'bbu', 'bbv', 'bbw', 'bbx', 'bby', 'bbz', 'bca', 'bcb', 'bcc', 'bcd', 'bce', 'bcf', 'bcg', 'bch', 'bci', 'bcj', 'bck', 'bcl', 'bcm', 'bcn', 'bco', 'bcp', 'bcq', 'bcr', 'bcs', 'bct', 'bcu', 'bcv', 'bcw', 'bcy', 'bcz', 'bda', 'bdb', 'bdc', 'bdd', 'bde', 'bdf', 'bdg', 'bdh', 'bdi', 'bdj', 'bdk', 'bdl', 'bdm', 'bdn', 'bdo', 'bdp', 'bdq', 'bdr', 'bds', 'bdt', 'bdu', 'bdv', 'bdw', 'bdx', 'bdy', 'bdz', 'bea', 'beb', 'bec', 'bed', 'bee', 'bef', 'beg', 'beh', 'bei', 'bej', 'bek', 'bem', 'beo', 'bep', 'beq', 'ber', 'bes', 'bet', 'beu', 'bev', 'bew', 'bex', 'bey', 'bez', 'bfa', 'bfb', 'bfc', 'bfd', 'bfe', 'bff', 'bfg', 'bfh', 'bfi', 'bfj', 'bfk', 'bfl', 'bfm', 'bfn', 'bfo', 'bfp', 'bfq', 'bfr', 'bfs', 'bft', 'bfu', 'bfw', 'bfx', 'bfy', 'bfz', 'bga', 'bgb', 'bgc', 'bgd', 'bge', 'bgf', 'bgg', 'bgi', 'bgj', 'bgk', 'bgl', 'bgm', 'bgn', 'bgo', 'bgp', 'bgq', 'bgr', 'bgs', 'bgt', 'bgu', 'bgv', 'bgw', 'bgx', 'bgy', 'bgz', 'bha', 'bhb', 'bhc', 'bhd', 'bhe', 'bhf', 'bhg', 'bhh', 'bhi', 'bhj', 'bhk', 'bhl', 'bhm', 'bhn', 'bho', 'bhp', 'bhq', 'bhr', 'bhs', 'bht', 'bhu', 'bhv', 'bhw', 'bhx', 'bhy', 'bhz', 'bia', 'bib', 'bic', 'bid', 'bie', 'bif', 'big', 'bij', 'bik', 'bil', 'bim', 'bin', 'bio', 'bip', 'biq', 'bir', 'bit', 'biu', 'biv', 'biw', 'bix', 'biy', 'biz', 'bja', 'bjb', 'bjc', 'bjd', 'bje', 'bjf', 'bjg', 'bjh', 'bji', 'bjj', 'bjk', 'bjl', 'bjm', 'bjn', 'bjo', 'bjp', 'bjq', 'bjr', 'bjs', 'bjt', 'bju', 'bjv', 'bjw', 'bjx', 'bjy', 'bjz', 'bka', 'bkb', 'bkc', 'bkd', 'bkf', 'bkg', 'bkh', 'bki', 'bkj', 'bkk', 'bkl', 'bkm', 'bkn', 'bko', 'bkp', 'bkq', 'bkr', 'bks', 'bkt', 'bku', 'bkv', 'bkw', 'bkx', 'bky', 'bkz', 'bla', 'blb', 'blc', 'bld', 'ble', 'blf', 'blg', 'blh', 'bli', 'blj', 'blk', 'bll', 'blm', 'bln', 'blo', 'blp', 'blq', 'blr', 'bls', 'blt', 'blv', 'blw', 'blx', 'bly', 'blz', 'bma', 'bmb', 'bmc', 'bmd', 'bme', 'bmf', 'bmg', 'bmh', 'bmi', 'bmj', 'bmk', 'bml', 'bmm', 'bmn', 'bmo', 'bmp', 'bmq', 'bmr', 'bms', 'bmt', 'bmu', 'bmv', 'bmw', 'bmx', 'bmy', 'bmz', 'bna', 'bnb', 'bnc', 'bnd', 'bne', 'bnf', 'bng', 'bni', 'bnj', 'bnk', 'bnl', 'bnm', 'bnn', 'bno', 'bnp', 'bnq', 'bnr', 'bns', 'bnt', 'bnu', 'bnv', 'bnw', 'bnx', 'bny', 'bnz', 'boa', 'bob', 'boe', 'bof', 'bog', 'boh', 'boi', 'boj', 'bok', 'bol', 'bom', 'bon', 'boo', 'bop', 'boq', 'bor', 'bot', 'bou', 'bov', 'bow', 'box', 'boy', 'boz', 'bpa', 'bpb', 'bpd', 'bpg', 'bph', 'bpi', 'bpj', 'bpk', 'bpl', 'bpm', 'bpn', 'bpo', 'bpp', 'bpq', 'bpr', 'bps', 'bpt', 'bpu', 'bpv', 'bpw', 'bpx', 'bpy', 'bpz', 'bqa', 'bqb', 'bqc', 'bqd', 'bqf', 'bqg', 'bqh', 'bqi', 'bqj', 'bqk', 'bql', 'bqm', 'bqn', 'bqo', 'bqp', 'bqq', 'bqr', 'bqs', 'bqt', 'bqu', 'bqv', 'bqw', 'bqx', 'bqy', 'bqz', 'bra', 'brb', 'brc', 'brd', 'brf', 'brg', 'brh', 'bri', 'brj', 'brk', 'brl', 'brm', 'brn', 'bro', 'brp', 'brq', 'brr', 'brs', 'brt', 'bru', 'brv', 'brw', 'brx', 'bry', 'brz', 'bsa', 'bsb', 'bsc', 'bse', 'bsf', 'bsg', 'bsh', 'bsi', 'bsj', 'bsk', 'bsl', 'bsm', 'bsn', 'bso', 'bsp', 'bsq', 'bsr', 'bss', 'bst', 'bsu', 'bsv', 'bsw', 'bsx', 'bsy', 'bta', 'btb', 'btc', 'btd', 'bte', 'btf', 'btg', 'bth', 'bti', 'btj', 'btk', 'btl', 'btm', 'btn', 'bto', 'btp', 'btq', 'btr', 'bts', 'btt', 'btu', 'btv', 'btw', 'btx', 'bty', 'btz', 'bua', 'bub', 'buc', 'bud', 'bue', 'buf', 'bug', 'buh', 'bui', 'buj', 'buk', 'bum', 'bun', 'buo', 'bup', 'buq', 'bus', 'but', 'buu', 'buv', 'buw', 'bux', 'buy', 'buz', 'bva', 'bvb', 'bvc', 'bvd', 'bve', 'bvf', 'bvg', 'bvh', 'bvi', 'bvj', 'bvk', 'bvl', 'bvm', 'bvn', 'bvo', 'bvp', 'bvq', 'bvr', 'bvt', 'bvu', 'bvv', 'bvw', 'bvx', 'bvy', 'bvz', 'bwa', 'bwb', 'bwc', 'bwd', 'bwe', 'bwf', 'bwg', 'bwh', 'bwi', 'bwj', 'bwk', 'bwl', 'bwm', 'bwn', 'bwo', 'bwp', 'bwq', 'bwr', 'bws', 'bwt', 'bwu', 'bww', 'bwx', 'bwy', 'bwz', 'bxa', 'bxb', 'bxc', 'bxd', 'bxe', 'bxf', 'bxg', 'bxh', 'bxi', 'bxj', 'bxk', 'bxl', 'bxm', 'bxn', 'bxo', 'bxp', 'bxq', 'bxr', 'bxs', 'bxu', 'bxv', 'bxw', 'bxx', 'bxz', 'bya', 'byb', 'byc', 'byd', 'bye', 'byf', 'byg', 'byh', 'byi', 'byj', 'byk', 'byl', 'bym', 'byn', 'byo', 'byp', 'byq', 'byr', 'bys', 'byt', 'byv', 'byw', 'byx', 'byy', 'byz', 'bza', 'bzb', 'bzc', 'bzd', 'bze', 'bzf', 'bzg', 'bzh', 'bzi', 'bzj', 'bzk', 'bzl', 'bzm', 'bzn', 'bzo', 'bzp', 'bzq', 'bzr', 'bzs', 'bzt', 'bzu', 'bzv', 'bzw', 'bzx', 'bzy', 'bzz', 'caa', 'cab', 'cac', 'cad', 'cae', 'caf', 'cag', 'cah', 'cai', 'caj', 'cak', 'cal', 'cam', 'can', 'cao', 'cap', 'caq', 'car', 'cas', 'cau', 'cav', 'caw', 'cax', 'cay', 'caz', 'cba', 'cbb', 'cbc', 'cbd', 'cbe', 'cbg', 'cbh', 'cbi', 'cbj', 'cbk', 'cbl', 'cbn', 'cbo', 'cbq', 'cbr', 'cbs', 'cbt', 'cbu', 'cbv', 'cbw', 'cby', 'cca', 'ccc', 'ccd', 'cce', 'ccg', 'cch', 'ccj', 'ccl', 'ccm', 'ccn', 'cco', 'ccp', 'ccq', 'ccr', 'ccs', 'cda', 'cdc', 'cdd', 'cde', 'cdf', 'cdg', 'cdh', 'cdi', 'cdj', 'cdm', 'cdn', 'cdo', 'cdr', 'cds', 'cdy', 'cdz', 'cea', 'ceb', 'ceg', 'cek', 'cel', 'cen', 'cet', 'cfa', 'cfd', 'cfg', 'cfm', 'cga', 'cgc', 'cgg', 'cgk', 'chb', 'chc', 'chd', 'chf', 'chg', 'chh', 'chj', 'chk', 'chl', 'chm', 'chn', 'cho', 'chp', 'chq', 'chr', 'cht', 'chw', 'chx', 'chy', 'chz', 'cia', 'cib', 'cic', 'cid', 'cie', 'cih', 'cik', 'cim', 'cin', 'cip', 'cir', 'ciw', 'ciy', 'cja', 'cje', 'cjh', 'cji', 'cjk', 'cjm', 'cjn', 'cjo', 'cjp', 'cjr', 'cjs', 'cjv', 'cjy', 'cka', 'ckb', 'ckh', 'ckl', 'ckn', 'cko', 'ckq', 'ckr', 'cks', 'ckt', 'cku', 'ckv', 'ckx', 'cky', 'ckz', 'cla', 'clc', 'cld', 'cle', 'clh', 'cli', 'clj', 'clk', 'cll', 'clm', 'clo', 'clt', 'clu', 'clw', 'cly', 'cma', 'cmc', 'cme', 'cmg', 'cmi', 'cmk', 'cml', 'cmm', 'cmn', 'cmo', 'cmr', 'cms', 'cmt', 'cna', 'cnb', 'cnc', 'cng', 'cnh', 'cni', 'cnk', 'cnl', 'cno', 'cns', 'cnt', 'cnu', 'cnw', 'cnx', 'coa', 'cob', 'coc', 'cod', 'coe', 'cof', 'cog', 'coh', 'coj', 'cok', 'col', 'com', 'con', 'coo', 'cop', 'coq', 'cot', 'cou', 'cov', 'cow', 'cox', 'coy', 'coz', 'cpa', 'cpb', 'cpc', 'cpe', 'cpf', 'cpg', 'cpi', 'cpn', 'cpo', 'cpp', 'cps', 'cpu', 'cpx', 'cpy', 'cqd', 'cqu', 'cra', 'crb', 'crc', 'crd', 'crf', 'crg', 'crh', 'cri', 'crj', 'crk', 'crl', 'crm', 'crn', 'cro', 'crp', 'crq', 'crr', 'crs', 'crt', 'crv', 'crw', 'crx', 'cry', 'crz', 'csa', 'csb', 'csc', 'csd', 'cse', 'csf', 'csg', 'csh', 'csi', 'csj', 'csk', 'csl', 'csm', 'csn', 'cso', 'csq', 'csr', 'css', 'cst', 'csu', 'csv', 'csw', 'csy', 'csz', 'cta', 'ctc', 'ctd', 'cte', 'ctg', 'cth', 'ctl', 'ctm', 'ctn', 'cto', 'ctp', 'cts', 'ctt', 'ctu', 'ctz', 'cua', 'cub', 'cuc', 'cug', 'cuh', 'cui', 'cuj', 'cuk', 'cul', 'cum', 'cuo', 'cup', 'cuq', 'cur', 'cus', 'cut', 'cuu', 'cuv', 'cuw', 'cux', 'cvg', 'cvn', 'cwa', 'cwb', 'cwd', 'cwe', 'cwg', 'cwt', 'cya', 'cyb', 'cyo', 'czh', 'czk', 'czn', 'czo', 'czt', 'daa', 'dac', 'dad', 'dae', 'daf', 'dag', 'dah', 'dai', 'daj', 'dak', 'dal', 'dam', 'dao', 'dap', 'daq', 'dar', 'das', 'dau', 'dav', 'daw', 'dax', 'day', 'daz', 'dba', 'dbb', 'dbd', 'dbe', 'dbf', 'dbg', 'dbi', 'dbj', 'dbl', 'dbm', 'dbn', 'dbo', 'dbp', 'dbq', 'dbr', 'dbt', 'dbu', 'dbv', 'dbw', 'dby', 'dcc', 'dcr', 'dda', 'ddd', 'dde', 'ddg', 'ddi', 'ddj', 'ddn', 'ddo', 'ddr', 'dds', 'ddw', 'dec', 'ded', 'dee', 'def', 'deg', 'deh', 'dei', 'dek', 'del', 'dem', 'den', 'dep', 'deq', 'der', 'des', 'dev', 'dez', 'dga', 'dgb', 'dgc', 'dgd', 'dge', 'dgg', 'dgh', 'dgi', 'dgk', 'dgl', 'dgn', 'dgo', 'dgr', 'dgs', 'dgt', 'dgu', 'dgw', 'dgx', 'dgz', 'dha', 'dhd', 'dhg', 'dhi', 'dhl', 'dhm', 'dhn', 'dho', 'dhr', 'dhs', 'dhu', 'dhv', 'dhw', 'dhx', 'dia', 'dib', 'dic', 'did', 'dif', 'dig', 'dih', 'dii', 'dij', 'dik', 'dil', 'dim', 'din', 'dio', 'dip', 'diq', 'dir', 'dis', 'dit', 'diu', 'diw', 'dix', 'diy', 'diz', 'dja', 'djb', 'djc', 'djd', 'dje', 'djf', 'dji', 'djj', 'djk', 'djl', 'djm', 'djn', 'djo', 'djr', 'dju', 'djw', 'dka', 'dkk', 'dkl', 'dkr', 'dks', 'dkx', 'dlg', 'dlk', 'dlm', 'dln', 'dma', 'dmb', 'dmc', 'dmd', 'dme', 'dmg', 'dmk', 'dml', 'dmm', 'dmn', 'dmo', 'dmr', 'dms', 'dmu', 'dmv', 'dmw', 'dmx', 'dmy', 'dna', 'dnd', 'dne', 'dng', 'dni', 'dnj', 'dnk', 'dnn', 'dnr', 'dnt', 'dnu', 'dnv', 'dnw', 'dny', 'doa', 'dob', 'doc', 'doe', 'dof', 'doh', 'doi', 'dok', 'dol', 'don', 'doo', 'dop', 'doq', 'dor', 'dos', 'dot', 'dov', 'dow', 'dox', 'doy', 'doz', 'dpp', 'dra', 'drb', 'drc', 'drd', 'dre', 'drg', 'drh', 'dri', 'drl', 'drn', 'dro', 'drq', 'drr', 'drs', 'drt', 'dru', 'drw', 'dry', 'dsb', 'dse', 'dsh', 'dsi', 'dsl', 'dsn', 'dso', 'dsq', 'dta', 'dtb', 'dtd', 'dth', 'dti', 'dtk', 'dtm', 'dtn', 'dto', 'dtp', 'dtr', 'dts', 'dtt', 'dtu', 'dty', 'dua', 'dub', 'duc', 'dud', 'due', 'duf', 'dug', 'duh', 'dui', 'duj', 'duk', 'dul', 'dum', 'dun', 'duo', 'dup', 'duq', 'dur', 'dus', 'duu', 'duv', 'duw', 'dux', 'duy', 'duz', 'dva', 'dwa', 'dwl', 'dwr', 'dws', 'dwu', 'dww', 'dwy', 'dya', 'dyb', 'dyd', 'dyg', 'dyi', 'dym', 'dyn', 'dyo', 'dyu', 'dyy', 'dza', 'dzd', 'dze', 'dzg', 'dzl', 'dzn', 'eaa', 'ebg', 'ebk', 'ebo', 'ebr', 'ebu', 'ecr', 'ecs', 'ecy', 'eee', 'efa', 'efe', 'efi', 'ega', 'egl', 'ego', 'egx', 'egy', 'ehu', 'eip', 'eit', 'eiv', 'eja', 'eka', 'ekc', 'eke', 'ekg', 'eki', 'ekk', 'ekl', 'ekm', 'eko', 'ekp', 'ekr', 'eky', 'ele', 'elh', 'eli', 'elk', 'elm', 'elo', 'elp', 'elu', 'elx', 'ema', 'emb', 'eme', 'emg', 'emi', 'emk', 'emm', 'emn', 'emo', 'emp', 'ems', 'emu', 'emw', 'emx', 'emy', 'ena', 'enb', 'enc', 'end', 'enf', 'enh', 'enl', 'enm', 'enn', 'eno', 'enq', 'enr', 'enu', 'env', 'enw', 'enx', 'eot', 'epi', 'era', 'erg', 'erh', 'eri', 'erk', 'ero', 'err', 'ers', 'ert', 'erw', 'ese', 'esg', 'esh', 'esi', 'esk', 'esl', 'esm', 'esn', 'eso', 'esq', 'ess', 'esu', 'esx', 'esy', 'etb', 'etc', 'eth', 'etn', 'eto', 'etr', 'ets', 'ett', 'etu', 'etx', 'etz', 'euq', 'eve', 'evh', 'evn', 'ewo', 'ext', 'eya', 'eyo', 'eza', 'eze', 'faa', 'fab', 'fad', 'faf', 'fag', 'fah', 'fai', 'faj', 'fak', 'fal', 'fam', 'fan', 'fap', 'far', 'fat', 'fau', 'fax', 'fay', 'faz', 'fbl', 'fcs', 'fer', 'ffi', 'ffm', 'fgr', 'fia', 'fie', 'fil', 'fip', 'fir', 'fit', 'fiu', 'fiw', 'fkk', 'fkv', 'fla', 'flh', 'fli', 'fll', 'fln', 'flr', 'fly', 'fmp', 'fmu', 'fnb', 'fng', 'fni', 'fod', 'foi', 'fom', 'fon', 'for', 'fos', 'fox', 'fpe', 'fqs', 'frc', 'frd', 'frk', 'frm', 'fro', 'frp', 'frq', 'frr', 'frs', 'frt', 'fse', 'fsl', 'fss', 'fub', 'fuc', 'fud', 'fue', 'fuf', 'fuh', 'fui', 'fuj', 'fum', 'fun', 'fuq', 'fur', 'fut', 'fuu', 'fuv', 'fuy', 'fvr', 'fwa', 'fwe', 'gaa', 'gab', 'gac', 'gad', 'gae', 'gaf', 'gag', 'gah', 'gai', 'gaj', 'gak', 'gal', 'gam', 'gan', 'gao', 'gap', 'gaq', 'gar', 'gas', 'gat', 'gau', 'gav', 'gaw', 'gax', 'gay', 'gaz', 'gba', 'gbb', 'gbc', 'gbd', 'gbe', 'gbf', 'gbg', 'gbh', 'gbi', 'gbj', 'gbk', 'gbl', 'gbm', 'gbn', 'gbo', 'gbp', 'gbq', 'gbr', 'gbs', 'gbu', 'gbv', 'gbw', 'gbx', 'gby', 'gbz', 'gcc', 'gcd', 'gce', 'gcf', 'gcl', 'gcn', 'gcr', 'gct', 'gda', 'gdb', 'gdc', 'gdd', 'gde', 'gdf', 'gdg', 'gdh', 'gdi', 'gdj', 'gdk', 'gdl', 'gdm', 'gdn', 'gdo', 'gdq', 'gdr', 'gds', 'gdt', 'gdu', 'gdx', 'gea', 'geb', 'gec', 'ged', 'geg', 'geh', 'gei', 'gej', 'gek', 'gel', 'gem', 'geq', 'ges', 'gev', 'gew', 'gex', 'gey', 'gez', 'gfk', 'gft', 'gfx', 'gga', 'ggb', 'ggd', 'gge', 'ggg', 'ggk', 'ggl', 'ggn', 'ggo', 'ggr', 'ggt', 'ggu', 'ggw', 'gha', 'ghc', 'ghe', 'ghh', 'ghk', 'ghl', 'ghn', 'gho', 'ghr', 'ghs', 'ght', 'gia', 'gib', 'gic', 'gid', 'gie', 'gig', 'gih', 'gil', 'gim', 'gin', 'gio', 'gip', 'giq', 'gir', 'gis', 'git', 'giu', 'giw', 'gix', 'giy', 'giz', 'gji', 'gjk', 'gjm', 'gjn', 'gjr', 'gju', 'gka', 'gke', 'gkn', 'gko', 'gkp', 'gku', 'glc', 'gld', 'glh', 'gli', 'glj', 'glk', 'gll', 'glo', 'glr', 'glu', 'glw', 'gly', 'gma', 'gmb', 'gmd', 'gme', 'gmg', 'gmh', 'gml', 'gmm', 'gmn', 'gmq', 'gmu', 'gmv', 'gmw', 'gmx', 'gmy', 'gmz', 'gna', 'gnb', 'gnc', 'gnd', 'gne', 'gng', 'gnh', 'gni', 'gnk', 'gnl', 'gnm', 'gnn', 'gno', 'gnq', 'gnr', 'gnt', 'gnu', 'gnw', 'gnz', 'goa', 'gob', 'goc', 'god', 'goe', 'gof', 'gog', 'goh', 'goi', 'goj', 'gok', 'gol', 'gom', 'gon', 'goo', 'gop', 'goq', 'gor', 'gos', 'got', 'gou', 'gow', 'gox', 'goy', 'goz', 'gpa', 'gpe', 'gpn', 'gqa', 'gqi', 'gqn', 'gqr', 'gqu', 'gra', 'grb', 'grc', 'grd', 'grg', 'grh', 'gri', 'grj', 'grk', 'grm', 'gro', 'grq', 'grr', 'grs', 'grt', 'gru', 'grv', 'grw', 'grx', 'gry', 'grz', 'gse', 'gsg', 'gsl', 'gsm', 'gsn', 'gso', 'gsp', 'gss', 'gsw', 'gta', 'gti', 'gtu', 'gua', 'gub', 'guc', 'gud', 'gue', 'guf', 'gug', 'guh', 'gui', 'guk', 'gul', 'gum', 'gun', 'guo', 'gup', 'guq', 'gur', 'gus', 'gut', 'guu', 'guv', 'guw', 'gux', 'guz', 'gva', 'gvc', 'gve', 'gvf', 'gvj', 'gvl', 'gvm', 'gvn', 'gvo', 'gvp', 'gvr', 'gvs', 'gvy', 'gwa', 'gwb', 'gwc', 'gwd', 'gwe', 'gwf', 'gwg', 'gwi', 'gwj', 'gwm', 'gwn', 'gwr', 'gwt', 'gwu', 'gww', 'gwx', 'gxx', 'gya', 'gyb', 'gyd', 'gye', 'gyf', 'gyg', 'gyi', 'gyl', 'gym', 'gyn', 'gyr', 'gyy', 'gza', 'gzi', 'gzn', 'haa', 'hab', 'hac', 'had', 'hae', 'haf', 'hag', 'hah', 'hai', 'haj', 'hak', 'hal', 'ham', 'han', 'hao', 'hap', 'haq', 'har', 'has', 'hav', 'haw', 'hax', 'hay', 'haz', 'hba', 'hbb', 'hbn', 'hbo', 'hbu', 'hca', 'hch', 'hdn', 'hds', 'hdy', 'hea', 'hed', 'heg', 'heh', 'hei', 'hem', 'hgm', 'hgw', 'hhi', 'hhr', 'hhy', 'hia', 'hib', 'hid', 'hif', 'hig', 'hih', 'hii', 'hij', 'hik', 'hil', 'him', 'hio', 'hir', 'hit', 'hiw', 'hix', 'hji', 'hka', 'hke', 'hkk', 'hks', 'hla', 'hlb', 'hld', 'hle', 'hlt', 'hlu', 'hma', 'hmb', 'hmc', 'hmd', 'hme', 'hmf', 'hmg', 'hmh', 'hmi', 'hmj', 'hmk', 'hml', 'hmm', 'hmn', 'hmp', 'hmq', 'hmr', 'hms', 'hmt', 'hmu', 'hmv', 'hmw', 'hmx', 'hmy', 'hmz', 'hna', 'hnd', 'hne', 'hnh', 'hni', 'hnj', 'hnn', 'hno', 'hns', 'hnu', 'hoa', 'hob', 'hoc', 'hod', 'hoe', 'hoh', 'hoi', 'hoj', 'hok', 'hol', 'hom', 'hoo', 'hop', 'hor', 'hos', 'hot', 'hov', 'how', 'hoy', 'hoz', 'hpo', 'hps', 'hra', 'hrc', 'hre', 'hrk', 'hrm', 'hro', 'hrp', 'hrr', 'hrt', 'hru', 'hrw', 'hrx', 'hrz', 'hsb', 'hsh', 'hsl', 'hsn', 'hss', 'hti', 'hto', 'hts', 'htu', 'htx', 'hub', 'huc', 'hud', 'hue', 'huf', 'hug', 'huh', 'hui', 'huj', 'huk', 'hul', 'hum', 'huo', 'hup', 'huq', 'hur', 'hus', 'hut', 'huu', 'huv', 'huw', 'hux', 'huy', 'huz', 'hvc', 'hve', 'hvk', 'hvn', 'hvv', 'hwa', 'hwc', 'hwo', 'hya', 'hyx', 'iai', 'ian', 'iap', 'iar', 'iba', 'ibb', 'ibd', 'ibe', 'ibg', 'ibh', 'ibi', 'ibl', 'ibm', 'ibn', 'ibr', 'ibu', 'iby', 'ica', 'ich', 'icl', 'icr', 'ida', 'idb', 'idc', 'idd', 'ide', 'idi', 'idr', 'ids', 'idt', 'idu', 'ifa', 'ifb', 'ife', 'iff', 'ifk', 'ifm', 'ifu', 'ify', 'igb', 'ige', 'igg', 'igl', 'igm', 'ign', 'igo', 'igs', 'igw', 'ihb', 'ihi', 'ihp', 'ihw', 'iin', 'iir', 'ijc', 'ije', 'ijj', 'ijn', 'ijo', 'ijs', 'ike', 'iki', 'ikk', 'ikl', 'iko', 'ikp', 'ikr', 'iks', 'ikt', 'ikv', 'ikw', 'ikx', 'ikz', 'ila', 'ilb', 'ilg', 'ili', 'ilk', 'ill', 'ilm', 'ilo', 'ilp', 'ils', 'ilu', 'ilv', 'ilw', 'ima', 'ime', 'imi', 'iml', 'imn', 'imo', 'imr', 'ims', 'imy', 'inb', 'inc', 'ine', 'ing', 'inh', 'inj', 'inl', 'inm', 'inn', 'ino', 'inp', 'ins', 'int', 'inz', 'ior', 'iou', 'iow', 'ipi', 'ipo', 'iqu', 'iqw', 'ira', 'ire', 'irh', 'iri', 'irk', 'irn', 'iro', 'irr', 'iru', 'irx', 'iry', 'isa', 'isc', 'isd', 'ise', 'isg', 'ish', 'isi', 'isk', 'ism', 'isn', 'iso', 'isr', 'ist', 'isu', 'itb', 'itc', 'itd', 'ite', 'iti', 'itk', 'itl', 'itm', 'ito', 'itr', 'its', 'itt', 'itv', 'itw', 'itx', 'ity', 'itz', 'ium', 'ivb', 'ivv', 'iwk', 'iwm', 'iwo', 'iws', 'ixc', 'ixl', 'iya', 'iyo', 'iyx', 'izh', 'izi', 'izr', 'izz', 'jaa', 'jab', 'jac', 'jad', 'jae', 'jaf', 'jah', 'jaj', 'jak', 'jal', 'jam', 'jan', 'jao', 'jaq', 'jar', 'jas', 'jat', 'jau', 'jax', 'jay', 'jaz', 'jbe', 'jbi', 'jbj', 'jbk', 'jbn', 'jbo', 'jbr', 'jbt', 'jbu', 'jbw', 'jcs', 'jct', 'jda', 'jdg', 'jdt', 'jeb', 'jee', 'jeg', 'jeh', 'jei', 'jek', 'jel', 'jen', 'jer', 'jet', 'jeu', 'jgb', 'jge', 'jgk', 'jgo', 'jhi', 'jhs', 'jia', 'jib', 'jic', 'jid', 'jie', 'jig', 'jih', 'jii', 'jil', 'jim', 'jio', 'jiq', 'jit', 'jiu', 'jiv', 'jiy', 'jje', 'jjr', 'jka', 'jkm', 'jko', 'jkp', 'jkr', 'jku', 'jle', 'jls', 'jma', 'jmb', 'jmc', 'jmd', 'jmi', 'jml', 'jmn', 'jmr', 'jms', 'jmw', 'jmx', 'jna', 'jnd', 'jng', 'jni', 'jnj', 'jnl', 'jns', 'job', 'jod', 'jog', 'jor', 'jos', 'jow', 'jpa', 'jpr', 'jpx', 'jqr', 'jra', 'jrb', 'jrr', 'jrt', 'jru', 'jsl', 'jua', 'jub', 'juc', 'jud', 'juh', 'jui', 'juk', 'jul', 'jum', 'jun', 'juo', 'jup', 'jur', 'jus', 'jut', 'juu', 'juw', 'juy', 'jvd', 'jvn', 'jwi', 'jya', 'jye', 'jyy', 'kaa', 'kab', 'kac', 'kad', 'kae', 'kaf', 'kag', 'kah', 'kai', 'kaj', 'kak', 'kam', 'kao', 'kap', 'kaq', 'kar', 'kav', 'kaw', 'kax', 'kay', 'kba', 'kbb', 'kbc', 'kbd', 'kbe', 'kbf', 'kbg', 'kbh', 'kbi', 'kbj', 'kbk', 'kbl', 'kbm', 'kbn', 'kbo', 'kbp', 'kbq', 'kbr', 'kbs', 'kbt', 'kbu', 'kbv', 'kbw', 'kbx', 'kby', 'kbz', 'kca', 'kcb', 'kcc', 'kcd', 'kce', 'kcf', 'kcg', 'kch', 'kci', 'kcj', 'kck', 'kcl', 'kcm', 'kcn', 'kco', 'kcp', 'kcq', 'kcr', 'kcs', 'kct', 'kcu', 'kcv', 'kcw', 'kcx', 'kcy', 'kcz', 'kda', 'kdc', 'kdd', 'kde', 'kdf', 'kdg', 'kdh', 'kdi', 'kdj', 'kdk', 'kdl', 'kdm', 'kdn', 'kdo', 'kdp', 'kdq', 'kdr', 'kdt', 'kdu', 'kdv', 'kdw', 'kdx', 'kdy', 'kdz', 'kea', 'keb', 'kec', 'ked', 'kee', 'kef', 'keg', 'keh', 'kei', 'kej', 'kek', 'kel', 'kem', 'ken', 'keo', 'kep', 'keq', 'ker', 'kes', 'ket', 'keu', 'kev', 'kew', 'kex', 'key', 'kez', 'kfa', 'kfb', 'kfc', 'kfd', 'kfe', 'kff', 'kfg', 'kfh', 'kfi', 'kfj', 'kfk', 'kfl', 'kfm', 'kfn', 'kfo', 'kfp', 'kfq', 'kfr', 'kfs', 'kft', 'kfu', 'kfv', 'kfw', 'kfx', 'kfy', 'kfz', 'kga', 'kgb', 'kgc', 'kgd', 'kge', 'kgf', 'kgg', 'kgh', 'kgi', 'kgj', 'kgk', 'kgl', 'kgm', 'kgn', 'kgo', 'kgp', 'kgq', 'kgr', 'kgs', 'kgt', 'kgu', 'kgv', 'kgw', 'kgx', 'kgy', 'kha', 'khb', 'khc', 'khd', 'khe', 'khf', 'khg', 'khh', 'khi', 'khj', 'khk', 'khl', 'khn', 'kho', 'khp', 'khq', 'khr', 'khs', 'kht', 'khu', 'khv', 'khw', 'khx', 'khy', 'khz', 'kia', 'kib', 'kic', 'kid', 'kie', 'kif', 'kig', 'kih', 'kii', 'kij', 'kil', 'kim', 'kio', 'kip', 'kiq', 'kis', 'kit', 'kiu', 'kiv', 'kiw', 'kix', 'kiy', 'kiz', 'kja', 'kjb', 'kjc', 'kjd', 'kje', 'kjf', 'kjg', 'kjh', 'kji', 'kjj', 'kjk', 'kjl', 'kjm', 'kjn', 'kjo', 'kjp', 'kjq', 'kjr', 'kjs', 'kjt', 'kju', 'kjv', 'kjx', 'kjy', 'kjz', 'kka', 'kkb', 'kkc', 'kkd', 'kke', 'kkf', 'kkg', 'kkh', 'kki', 'kkj', 'kkk', 'kkl', 'kkm', 'kkn', 'kko', 'kkp', 'kkq', 'kkr', 'kks', 'kkt', 'kku', 'kkv', 'kkw', 'kkx', 'kky', 'kkz', 'kla', 'klb', 'klc', 'kld', 'kle', 'klf', 'klg', 'klh', 'kli', 'klj', 'klk', 'kll', 'klm', 'kln', 'klo', 'klp', 'klq', 'klr', 'kls', 'klt', 'klu', 'klv', 'klw', 'klx', 'kly', 'klz', 'kma', 'kmb', 'kmc', 'kmd', 'kme', 'kmf', 'kmg', 'kmh', 'kmi', 'kmj', 'kmk', 'kml', 'kmm', 'kmn', 'kmo', 'kmp', 'kmq', 'kmr', 'kms', 'kmt', 'kmu', 'kmv', 'kmw', 'kmx', 'kmy', 'kmz', 'kna', 'knb', 'knc', 'knd', 'kne', 'knf', 'kng', 'kni', 'knj', 'knk', 'knl', 'knm', 'knn', 'kno', 'knp', 'knq', 'knr', 'kns', 'knt', 'knu', 'knv', 'knw', 'knx', 'kny', 'knz', 'koa', 'koc', 'kod', 'koe', 'kof', 'kog', 'koh', 'koi', 'koj', 'kok', 'kol', 'koo', 'kop', 'koq', 'kos', 'kot', 'kou', 'kov', 'kow', 'kox', 'koy', 'koz', 'kpa', 'kpb', 'kpc', 'kpd', 'kpe', 'kpf', 'kpg', 'kph', 'kpi', 'kpj', 'kpk', 'kpl', 'kpm', 'kpn', 'kpo', 'kpp', 'kpq', 'kpr', 'kps', 'kpt', 'kpu', 'kpv', 'kpw', 'kpx', 'kpy', 'kpz', 'kqa', 'kqb', 'kqc', 'kqd', 'kqe', 'kqf', 'kqg', 'kqh', 'kqi', 'kqj', 'kqk', 'kql', 'kqm', 'kqn', 'kqo', 'kqp', 'kqq', 'kqr', 'kqs', 'kqt', 'kqu', 'kqv', 'kqw', 'kqx', 'kqy', 'kqz', 'kra', 'krb', 'krc', 'krd', 'kre', 'krf', 'krh', 'kri', 'krj', 'krk', 'krl', 'krm', 'krn', 'kro', 'krp', 'krr', 'krs', 'krt', 'kru', 'krv', 'krw', 'krx', 'kry', 'krz', 'ksa', 'ksb', 'ksc', 'ksd', 'kse', 'ksf', 'ksg', 'ksh', 'ksi', 'ksj', 'ksk', 'ksl', 'ksm', 'ksn', 'kso', 'ksp', 'ksq', 'ksr', 'kss', 'kst', 'ksu', 'ksv', 'ksw', 'ksx', 'ksy', 'ksz', 'kta', 'ktb', 'ktc', 'ktd', 'kte', 'ktf', 'ktg', 'kth', 'kti', 'ktj', 'ktk', 'ktl', 'ktm', 'ktn', 'kto', 'ktp', 'ktq', 'ktr', 'kts', 'ktt', 'ktu', 'ktv', 'ktw', 'ktx', 'kty', 'ktz', 'kub', 'kuc', 'kud', 'kue', 'kuf', 'kug', 'kuh', 'kui', 'kuj', 'kuk', 'kul', 'kum', 'kun', 'kuo', 'kup', 'kuq', 'kus', 'kut', 'kuu', 'kuv', 'kuw', 'kux', 'kuy', 'kuz', 'kva', 'kvb', 'kvc', 'kvd', 'kve', 'kvf', 'kvg', 'kvh', 'kvi', 'kvj', 'kvk', 'kvl', 'kvm', 'kvn', 'kvo', 'kvp', 'kvq', 'kvr', 'kvs', 'kvt', 'kvu', 'kvv', 'kvw', 'kvx', 'kvy', 'kvz', 'kwa', 'kwb', 'kwc', 'kwd', 'kwe', 'kwf', 'kwg', 'kwh', 'kwi', 'kwj', 'kwk', 'kwl', 'kwm', 'kwn', 'kwo', 'kwp', 'kwq', 'kwr', 'kws', 'kwt', 'kwu', 'kwv', 'kww', 'kwx', 'kwy', 'kwz', 'kxa', 'kxb', 'kxc', 'kxd', 'kxe', 'kxf', 'kxh', 'kxi', 'kxj', 'kxk', 'kxl', 'kxm', 'kxn', 'kxo', 'kxp', 'kxq', 'kxr', 'kxs', 'kxt', 'kxu', 'kxv', 'kxw', 'kxx', 'kxy', 'kxz', 'kya', 'kyb', 'kyc', 'kyd', 'kye', 'kyf', 'kyg', 'kyh', 'kyi', 'kyj', 'kyk', 'kyl', 'kym', 'kyn', 'kyo', 'kyp', 'kyq', 'kyr', 'kys', 'kyt', 'kyu', 'kyv', 'kyw', 'kyx', 'kyy', 'kyz', 'kza', 'kzb', 'kzc', 'kzd', 'kze', 'kzf', 'kzg', 'kzh', 'kzi', 'kzj', 'kzk', 'kzl', 'kzm', 'kzn', 'kzo', 'kzp', 'kzq', 'kzr', 'kzs', 'kzt', 'kzu', 'kzv', 'kzw', 'kzx', 'kzy', 'kzz', 'laa', 'lab', 'lac', 'lad', 'lae', 'laf', 'lag', 'lah', 'lai', 'laj', 'lak', 'lal', 'lam', 'lan', 'lap', 'laq', 'lar', 'las', 'lau', 'law', 'lax', 'lay', 'laz', 'lba', 'lbb', 'lbc', 'lbe', 'lbf', 'lbg', 'lbi', 'lbj', 'lbk', 'lbl', 'lbm', 'lbn', 'lbo', 'lbq', 'lbr', 'lbs', 'lbt', 'lbu', 'lbv', 'lbw', 'lbx', 'lby', 'lbz', 'lcc', 'lcd', 'lce', 'lcf', 'lch', 'lcl', 'lcm', 'lcp', 'lcq', 'lcs', 'lda', 'ldb', 'ldd', 'ldg', 'ldh', 'ldi', 'ldj', 'ldk', 'ldl', 'ldm', 'ldn', 'ldo', 'ldp', 'ldq', 'lea', 'leb', 'lec', 'led', 'lee', 'lef', 'leg', 'leh', 'lei', 'lej', 'lek', 'lel', 'lem', 'len', 'leo', 'lep', 'leq', 'ler', 'les', 'let', 'leu', 'lev', 'lew', 'lex', 'ley', 'lez', 'lfa', 'lfn', 'lga', 'lgb', 'lgg', 'lgh', 'lgi', 'lgk', 'lgl', 'lgm', 'lgn', 'lgq', 'lgr', 'lgt', 'lgu', 'lgz', 'lha', 'lhh', 'lhi', 'lhl', 'lhm', 'lhn', 'lhp', 'lhs', 'lht', 'lhu', 'lia', 'lib', 'lic', 'lid', 'lie', 'lif', 'lig', 'lih', 'lii', 'lij', 'lik', 'lil', 'lio', 'lip', 'liq', 'lir', 'lis', 'liu', 'liv', 'liw', 'lix', 'liy', 'liz', 'lja', 'lje', 'lji', 'ljl', 'ljp', 'ljw', 'ljx', 'lka', 'lkb', 'lkc', 'lkd', 'lke', 'lkh', 'lki', 'lkj', 'lkl', 'lkm', 'lkn', 'lko', 'lkr', 'lks', 'lkt', 'lku', 'lky', 'lla', 'llb', 'llc', 'lld', 'lle', 'llf', 'llg', 'llh', 'lli', 'llj', 'llk', 'lll', 'llm', 'lln', 'llo', 'llp', 'llq', 'lls', 'llu', 'llx', 'lma', 'lmb', 'lmc', 'lmd', 'lme', 'lmf', 'lmg', 'lmh', 'lmi', 'lmj', 'lmk', 'lml', 'lmm', 'lmn', 'lmo', 'lmp', 'lmq', 'lmr', 'lmu', 'lmv', 'lmw', 'lmx', 'lmy', 'lmz', 'lna', 'lnb', 'lnd', 'lng', 'lnh', 'lni', 'lnj', 'lnl', 'lnm', 'lnn', 'lno', 'lns', 'lnu', 'lnw', 'lnz', 'loa', 'lob', 'loc', 'loe', 'lof', 'log', 'loh', 'loi', 'loj', 'lok', 'lol', 'lom', 'lon', 'loo', 'lop', 'loq', 'lor', 'los', 'lot', 'lou', 'lov', 'low', 'lox', 'loy', 'loz', 'lpa', 'lpe', 'lpn', 'lpo', 'lpx', 'lra', 'lrc', 'lre', 'lrg', 'lri', 'lrk', 'lrl', 'lrm', 'lrn', 'lro', 'lrr', 'lrt', 'lrv', 'lrz', 'lsa', 'lsd', 'lse', 'lsg', 'lsh', 'lsi', 'lsl', 'lsm', 'lso', 'lsp', 'lsr', 'lss', 'lst', 'lsy', 'ltc', 'ltg', 'lth', 'lti', 'ltn', 'lto', 'lts', 'ltu', 'lua', 'luc', 'lud', 'lue', 'luf', 'lui', 'luj', 'luk', 'lul', 'lum', 'lun', 'luo', 'lup', 'luq', 'lur', 'lus', 'lut', 'luu', 'luv', 'luw', 'luy', 'luz', 'lva', 'lvk', 'lvs', 'lvu', 'lwa', 'lwe', 'lwg', 'lwh', 'lwl', 'lwm', 'lwo', 'lwt', 'lwu', 'lww', 'lya', 'lyg', 'lyn', 'lzh', 'lzl', 'lzn', 'lzz', 'maa', 'mab', 'mad', 'mae', 'maf', 'mag', 'mai', 'maj', 'mak', 'mam', 'man', 'map', 'maq', 'mas', 'mat', 'mau', 'mav', 'maw', 'max', 'maz', 'mba', 'mbb', 'mbc', 'mbd', 'mbe', 'mbf', 'mbh', 'mbi', 'mbj', 'mbk', 'mbl', 'mbm', 'mbn', 'mbo', 'mbp', 'mbq', 'mbr', 'mbs', 'mbt', 'mbu', 'mbv', 'mbw', 'mbx', 'mby', 'mbz', 'mca', 'mcb', 'mcc', 'mcd', 'mce', 'mcf', 'mcg', 'mch', 'mci', 'mcj', 'mck', 'mcl', 'mcm', 'mcn', 'mco', 'mcp', 'mcq', 'mcr', 'mcs', 'mct', 'mcu', 'mcv', 'mcw', 'mcx', 'mcy', 'mcz', 'mda', 'mdb', 'mdc', 'mdd', 'mde', 'mdf', 'mdg', 'mdh', 'mdi', 'mdj', 'mdk', 'mdl', 'mdm', 'mdn', 'mdp', 'mdq', 'mdr', 'mds', 'mdt', 'mdu', 'mdv', 'mdw', 'mdx', 'mdy', 'mdz', 'mea', 'meb', 'mec', 'med', 'mee', 'mef', 'meg', 'meh', 'mei', 'mej', 'mek', 'mel', 'mem', 'men', 'meo', 'mep', 'meq', 'mer', 'mes', 'met', 'meu', 'mev', 'mew', 'mey', 'mez', 'mfa', 'mfb', 'mfc', 'mfd', 'mfe', 'mff', 'mfg', 'mfh', 'mfi', 'mfj', 'mfk', 'mfl', 'mfm', 'mfn', 'mfo', 'mfp', 'mfq', 'mfr', 'mfs', 'mft', 'mfu', 'mfv', 'mfw', 'mfx', 'mfy', 'mfz', 'mga', 'mgb', 'mgc', 'mgd', 'mge', 'mgf', 'mgg', 'mgh', 'mgi', 'mgj', 'mgk', 'mgl', 'mgm', 'mgn', 'mgo', 'mgp', 'mgq', 'mgr', 'mgs', 'mgt', 'mgu', 'mgv', 'mgw', 'mgx', 'mgy', 'mgz', 'mha', 'mhb', 'mhc', 'mhd', 'mhe', 'mhf', 'mhg', 'mhh', 'mhi', 'mhj', 'mhk', 'mhl', 'mhm', 'mhn', 'mho', 'mhp', 'mhq', 'mhr', 'mhs', 'mht', 'mhu', 'mhw', 'mhx', 'mhy', 'mhz', 'mia', 'mib', 'mic', 'mid', 'mie', 'mif', 'mig', 'mih', 'mii', 'mij', 'mik', 'mil', 'mim', 'min', 'mio', 'mip', 'miq', 'mir', 'mis', 'mit', 'miu', 'miw', 'mix', 'miy', 'miz', 'mja', 'mjb', 'mjc', 'mjd', 'mje', 'mjg', 'mjh', 'mji', 'mjj', 'mjk', 'mjl', 'mjm', 'mjn', 'mjo', 'mjp', 'mjq', 'mjr', 'mjs', 'mjt', 'mju', 'mjv', 'mjw', 'mjx', 'mjy', 'mjz', 'mka', 'mkb', 'mkc', 'mke', 'mkf', 'mkg', 'mkh', 'mki', 'mkj', 'mkk', 'mkl', 'mkm', 'mkn', 'mko', 'mkp', 'mkq', 'mkr', 'mks', 'mkt', 'mku', 'mkv', 'mkw', 'mkx', 'mky', 'mkz', 'mla', 'mlb', 'mlc', 'mld', 'mle', 'mlf', 'mlh', 'mli', 'mlj', 'mlk', 'mll', 'mlm', 'mln', 'mlo', 'mlp', 'mlq', 'mlr', 'mls', 'mlu', 'mlv', 'mlw', 'mlx', 'mlz', 'mma', 'mmb', 'mmc', 'mmd', 'mme', 'mmf', 'mmg', 'mmh', 'mmi', 'mmj', 'mmk', 'mml', 'mmm', 'mmn', 'mmo', 'mmp', 'mmq', 'mmr', 'mmt', 'mmu', 'mmv', 'mmw', 'mmx', 'mmy', 'mmz', 'mna', 'mnb', 'mnc', 'mnd', 'mne', 'mnf', 'mng', 'mnh', 'mni', 'mnj', 'mnk', 'mnl', 'mnm', 'mnn', 'mno', 'mnp', 'mnq', 'mnr', 'mns', 'mnt', 'mnu', 'mnv', 'mnw', 'mnx', 'mny', 'mnz', 'moa', 'moc', 'mod', 'moe', 'mof', 'mog', 'moh', 'moi', 'moj', 'mok', 'mom', 'moo', 'mop', 'moq', 'mor', 'mos', 'mot', 'mou', 'mov', 'mow', 'mox', 'moy', 'moz', 'mpa', 'mpb', 'mpc', 'mpd', 'mpe', 'mpg', 'mph', 'mpi', 'mpj', 'mpk', 'mpl', 'mpm', 'mpn', 'mpo', 'mpp', 'mpq', 'mpr', 'mps', 'mpt', 'mpu', 'mpv', 'mpw', 'mpx', 'mpy', 'mpz', 'mqa', 'mqb', 'mqc', 'mqe', 'mqf', 'mqg', 'mqh', 'mqi', 'mqj', 'mqk', 'mql', 'mqm', 'mqn', 'mqo', 'mqp', 'mqq', 'mqr', 'mqs', 'mqt', 'mqu', 'mqv', 'mqw', 'mqx', 'mqy', 'mqz', 'mra', 'mrb', 'mrc', 'mrd', 'mre', 'mrf', 'mrg', 'mrh', 'mrj', 'mrk', 'mrl', 'mrm', 'mrn', 'mro', 'mrp', 'mrq', 'mrr', 'mrs', 'mrt', 'mru', 'mrv', 'mrw', 'mrx', 'mry', 'mrz', 'msb', 'msc', 'msd', 'mse', 'msf', 'msg', 'msh', 'msi', 'msj', 'msk', 'msl', 'msm', 'msn', 'mso', 'msp', 'msq', 'msr', 'mss', 'mst', 'msu', 'msv', 'msw', 'msx', 'msy', 'msz', 'mta', 'mtb', 'mtc', 'mtd', 'mte', 'mtf', 'mtg', 'mth', 'mti', 'mtj', 'mtk', 'mtl', 'mtm', 'mtn', 'mto', 'mtp', 'mtq', 'mtr', 'mts', 'mtt', 'mtu', 'mtv', 'mtw', 'mtx', 'mty', 'mua', 'mub', 'muc', 'mud', 'mue', 'mug', 'muh', 'mui', 'muj', 'muk', 'mul', 'mum', 'mun', 'muo', 'mup', 'muq', 'mur', 'mus', 'mut', 'muu', 'muv', 'mux', 'muy', 'muz', 'mva', 'mvb', 'mvd', 'mve', 'mvf', 'mvg', 'mvh', 'mvi', 'mvk', 'mvl', 'mvm', 'mvn', 'mvo', 'mvp', 'mvq', 'mvr', 'mvs', 'mvt', 'mvu', 'mvv', 'mvw', 'mvx', 'mvy', 'mvz', 'mwa', 'mwb', 'mwc', 'mwd', 'mwe', 'mwf', 'mwg', 'mwh', 'mwi', 'mwj', 'mwk', 'mwl', 'mwm', 'mwn', 'mwo', 'mwp', 'mwq', 'mwr', 'mws', 'mwt', 'mwu', 'mwv', 'mww', 'mwx', 'mwy', 'mwz', 'mxa', 'mxb', 'mxc', 'mxd', 'mxe', 'mxf', 'mxg', 'mxh', 'mxi', 'mxj', 'mxk', 'mxl', 'mxm', 'mxn', 'mxo', 'mxp', 'mxq', 'mxr', 'mxs', 'mxt', 'mxu', 'mxv', 'mxw', 'mxx', 'mxy', 'mxz', 'myb', 'myc', 'myd', 'mye', 'myf', 'myg', 'myh', 'myi', 'myj', 'myk', 'myl', 'mym', 'myn', 'myo', 'myp', 'myq', 'myr', 'mys', 'myt', 'myu', 'myv', 'myw', 'myx', 'myy', 'myz', 'mza', 'mzb', 'mzc', 'mzd', 'mze', 'mzg', 'mzh', 'mzi', 'mzj', 'mzk', 'mzl', 'mzm', 'mzn', 'mzo', 'mzp', 'mzq', 'mzr', 'mzs', 'mzt', 'mzu', 'mzv', 'mzw', 'mzx', 'mzy', 'mzz', 'naa', 'nab', 'nac', 'nad', 'nae', 'naf', 'nag', 'nah', 'nai', 'naj', 'nak', 'nal', 'nam', 'nan', 'nao', 'nap', 'naq', 'nar', 'nas', 'nat', 'naw', 'nax', 'nay', 'naz', 'nba', 'nbb', 'nbc', 'nbd', 'nbe', 'nbf', 'nbg', 'nbh', 'nbi', 'nbj', 'nbk', 'nbm', 'nbn', 'nbo', 'nbp', 'nbq', 'nbr', 'nbs', 'nbt', 'nbu', 'nbv', 'nbw', 'nbx', 'nby', 'nca', 'ncb', 'ncc', 'ncd', 'nce', 'ncf', 'ncg', 'nch', 'nci', 'ncj', 'nck', 'ncl', 'ncm', 'ncn', 'nco', 'ncp', 'ncq', 'ncr', 'ncs', 'nct', 'ncu', 'ncx', 'ncz', 'nda', 'ndb', 'ndc', 'ndd', 'ndf', 'ndg', 'ndh', 'ndi', 'ndj', 'ndk', 'ndl', 'ndm', 'ndn', 'ndp', 'ndq', 'ndr', 'nds', 'ndt', 'ndu', 'ndv', 'ndw', 'ndx', 'ndy', 'ndz', 'nea', 'neb', 'nec', 'ned', 'nee', 'nef', 'neg', 'neh', 'nei', 'nej', 'nek', 'nem', 'nen', 'neo', 'neq', 'ner', 'nes', 'net', 'neu', 'nev', 'new', 'nex', 'ney', 'nez', 'nfa', 'nfd', 'nfl', 'nfr', 'nfu', 'nga', 'ngb', 'ngc', 'ngd', 'nge', 'ngf', 'ngg', 'ngh', 'ngi', 'ngj', 'ngk', 'ngl', 'ngm', 'ngn', 'ngo', 'ngp', 'ngq', 'ngr', 'ngs', 'ngt', 'ngu', 'ngv', 'ngw', 'ngx', 'ngy', 'ngz', 'nha', 'nhb', 'nhc', 'nhd', 'nhe', 'nhf', 'nhg', 'nhh', 'nhi', 'nhk', 'nhm', 'nhn', 'nho', 'nhp', 'nhq', 'nhr', 'nht', 'nhu', 'nhv', 'nhw', 'nhx', 'nhy', 'nhz', 'nia', 'nib', 'nic', 'nid', 'nie', 'nif', 'nig', 'nih', 'nii', 'nij', 'nik', 'nil', 'nim', 'nin', 'nio', 'niq', 'nir', 'nis', 'nit', 'niu', 'niv', 'niw', 'nix', 'niy', 'niz', 'nja', 'njb', 'njd', 'njh', 'nji', 'njj', 'njl', 'njm', 'njn', 'njo', 'njr', 'njs', 'njt', 'nju', 'njx', 'njy', 'njz', 'nka', 'nkb', 'nkc', 'nkd', 'nke', 'nkf', 'nkg', 'nkh', 'nki', 'nkj', 'nkk', 'nkm', 'nkn', 'nko', 'nkp', 'nkq', 'nkr', 'nks', 'nkt', 'nku', 'nkv', 'nkw', 'nkx', 'nkz', 'nla', 'nlc', 'nle', 'nlg', 'nli', 'nlj', 'nlk', 'nll', 'nln', 'nlo', 'nlq', 'nlr', 'nlu', 'nlv', 'nlw', 'nlx', 'nly', 'nlz', 'nma', 'nmb', 'nmc', 'nmd', 'nme', 'nmf', 'nmg', 'nmh', 'nmi', 'nmj', 'nmk', 'nml', 'nmm', 'nmn', 'nmo', 'nmp', 'nmq', 'nmr', 'nms', 'nmt', 'nmu', 'nmv', 'nmw', 'nmx', 'nmy', 'nmz', 'nna', 'nnb', 'nnc', 'nnd', 'nne', 'nnf', 'nng', 'nnh', 'nni', 'nnj', 'nnk', 'nnl', 'nnm', 'nnn', 'nnp', 'nnq', 'nnr', 'nns', 'nnt', 'nnu', 'nnv', 'nnw', 'nnx', 'nny', 'nnz', 'noa', 'noc', 'nod', 'noe', 'nof', 'nog', 'noh', 'noi', 'noj', 'nok', 'nol', 'nom', 'non', 'noo', 'nop', 'noq', 'nos', 'not', 'nou', 'nov', 'now', 'noy', 'noz', 'npa', 'npb', 'npg', 'nph', 'npi', 'npl', 'npn', 'npo', 'nps', 'npu', 'npx', 'npy', 'nqg', 'nqk', 'nql', 'nqm', 'nqn', 'nqo', 'nqq', 'nqy', 'nra', 'nrb', 'nrc', 'nre', 'nrf', 'nrg', 'nri', 'nrk', 'nrl', 'nrm', 'nrn', 'nrp', 'nrr', 'nrt', 'nru', 'nrx', 'nrz', 'nsa', 'nsc', 'nsd', 'nse', 'nsf', 'nsg', 'nsh', 'nsi', 'nsk', 'nsl', 'nsm', 'nsn', 'nso', 'nsp', 'nsq', 'nsr', 'nss', 'nst', 'nsu', 'nsv', 'nsw', 'nsx', 'nsy', 'nsz', 'ntd', 'nte', 'ntg', 'nti', 'ntj', 'ntk', 'ntm', 'nto', 'ntp', 'ntr', 'nts', 'ntu', 'ntw', 'ntx', 'nty', 'ntz', 'nua', 'nub', 'nuc', 'nud', 'nue', 'nuf', 'nug', 'nuh', 'nui', 'nuj', 'nuk', 'nul', 'num', 'nun', 'nuo', 'nup', 'nuq', 'nur', 'nus', 'nut', 'nuu', 'nuv', 'nuw', 'nux', 'nuy', 'nuz', 'nvh', 'nvm', 'nvo', 'nwa', 'nwb', 'nwc', 'nwe', 'nwg', 'nwi', 'nwm', 'nwo', 'nwr', 'nwx', 'nwy', 'nxa', 'nxd', 'nxe', 'nxg', 'nxi', 'nxk', 'nxl', 'nxm', 'nxn', 'nxo', 'nxq', 'nxr', 'nxu', 'nxx', 'nyb', 'nyc', 'nyd', 'nye', 'nyf', 'nyg', 'nyh', 'nyi', 'nyj', 'nyk', 'nyl', 'nym', 'nyn', 'nyo', 'nyp', 'nyq', 'nyr', 'nys', 'nyt', 'nyu', 'nyv', 'nyw', 'nyx', 'nyy', 'nza', 'nzb', 'nzi', 'nzk', 'nzm', 'nzs', 'nzu', 'nzy', 'nzz', 'oaa', 'oac', 'oar', 'oav', 'obi', 'obk', 'obl', 'obm', 'obo', 'obr', 'obt', 'obu', 'oca', 'och', 'oco', 'ocu', 'oda', 'odk', 'odt', 'odu', 'ofo', 'ofs', 'ofu', 'ogb', 'ogc', 'oge', 'ogg', 'ogo', 'ogu', 'oht', 'ohu', 'oia', 'oin', 'ojb', 'ojc', 'ojg', 'ojp', 'ojs', 'ojv', 'ojw', 'oka', 'okb', 'okd', 'oke', 'okg', 'okh', 'oki', 'okj', 'okk', 'okl', 'okm', 'okn', 'oko', 'okr', 'oks', 'oku', 'okv', 'okx', 'ola', 'old', 'ole', 'olk', 'olm', 'olo', 'olr', 'olt', 'olu', 'oma', 'omb', 'omc', 'ome', 'omg', 'omi', 'omk', 'oml', 'omn', 'omo', 'omp', 'omq', 'omr', 'omt', 'omu', 'omv', 'omw', 'omx', 'ona', 'onb', 'one', 'ong', 'oni', 'onj', 'onk', 'onn', 'ono', 'onp', 'onr', 'ons', 'ont', 'onu', 'onw', 'onx', 'ood', 'oog', 'oon', 'oor', 'oos', 'opa', 'opk', 'opm', 'opo', 'opt', 'opy', 'ora', 'orc', 'ore', 'org', 'orh', 'orn', 'oro', 'orr', 'ors', 'ort', 'oru', 'orv', 'orw', 'orx', 'ory', 'orz', 'osa', 'osc', 'osi', 'oso', 'osp', 'ost', 'osu', 'osx', 'ota', 'otb', 'otd', 'ote', 'oti', 'otk', 'otl', 'otm', 'otn', 'oto', 'otq', 'otr', 'ots', 'ott', 'otu', 'otw', 'otx', 'oty', 'otz', 'oua', 'oub', 'oue', 'oui', 'oum', 'oun', 'ovd', 'owi', 'owl', 'oyb', 'oyd', 'oym', 'oyy', 'ozm', 'paa', 'pab', 'pac', 'pad', 'pae', 'paf', 'pag', 'pah', 'pai', 'pak', 'pal', 'pam', 'pao', 'pap', 'paq', 'par', 'pas', 'pat', 'pau', 'pav', 'paw', 'pax', 'pay', 'paz', 'pbb', 'pbc', 'pbe', 'pbf', 'pbg', 'pbh', 'pbi', 'pbl', 'pbn', 'pbo', 'pbp', 'pbr', 'pbs', 'pbt', 'pbu', 'pbv', 'pby', 'pbz', 'pca', 'pcb', 'pcc', 'pcd', 'pce', 'pcf', 'pcg', 'pch', 'pci', 'pcj', 'pck', 'pcl', 'pcm', 'pcn', 'pcp', 'pcr', 'pcw', 'pda', 'pdc', 'pdi', 'pdn', 'pdo', 'pdt', 'pdu', 'pea', 'peb', 'ped', 'pee', 'pef', 'peg', 'peh', 'pei', 'pej', 'pek', 'pel', 'pem', 'peo', 'pep', 'peq', 'pes', 'pev', 'pex', 'pey', 'pez', 'pfa', 'pfe', 'pfl', 'pga', 'pgd', 'pgg', 'pgi', 'pgk', 'pgl', 'pgn', 'pgs', 'pgu', 'pgy', 'pgz', 'pha', 'phd', 'phg', 'phh', 'phi', 'phk', 'phl', 'phm', 'phn', 'pho', 'phq', 'phr', 'pht', 'phu', 'phv', 'phw', 'pia', 'pib', 'pic', 'pid', 'pie', 'pif', 'pig', 'pih', 'pii', 'pij', 'pil', 'pim', 'pin', 'pio', 'pip', 'pir', 'pis', 'pit', 'piu', 'piv', 'piw', 'pix', 'piy', 'piz', 'pjt', 'pka', 'pkb', 'pkc', 'pkg', 'pkh', 'pkn', 'pko', 'pkp', 'pkr', 'pks', 'pkt', 'pku', 'pla', 'plb', 'plc', 'pld', 'ple', 'plf', 'plg', 'plh', 'plj', 'plk', 'pll', 'pln', 'plo', 'plp', 'plq', 'plr', 'pls', 'plt', 'plu', 'plv', 'plw', 'ply', 'plz', 'pma', 'pmb', 'pmc', 'pmd', 'pme', 'pmf', 'pmh', 'pmi', 'pmj', 'pmk', 'pml', 'pmm', 'pmn', 'pmo', 'pmq', 'pmr', 'pms', 'pmt', 'pmu', 'pmw', 'pmx', 'pmy', 'pmz', 'pna', 'pnb', 'pnc', 'pne', 'png', 'pnh', 'pni', 'pnj', 'pnk', 'pnl', 'pnm', 'pnn', 'pno', 'pnp', 'pnq', 'pnr', 'pns', 'pnt', 'pnu', 'pnv', 'pnw', 'pnx', 'pny', 'pnz', 'poc', 'pod', 'poe', 'pof', 'pog', 'poh', 'poi', 'pok', 'pom', 'pon', 'poo', 'pop', 'poq', 'pos', 'pot', 'pov', 'pow', 'pox', 'poy', 'poz', 'ppa', 'ppe', 'ppi', 'ppk', 'ppl', 'ppm', 'ppn', 'ppo', 'ppp', 'ppq', 'ppr', 'pps', 'ppt', 'ppu', 'pqa', 'pqe', 'pqm', 'pqw', 'pra', 'prb', 'prc', 'prd', 'pre', 'prf', 'prg', 'prh', 'pri', 'prk', 'prl', 'prm', 'prn', 'pro', 'prp', 'prq', 'prr', 'prs', 'prt', 'pru', 'prw', 'prx', 'pry', 'prz', 'psa', 'psc', 'psd', 'pse', 'psg', 'psh', 'psi', 'psl', 'psm', 'psn', 'pso', 'psp', 'psq', 'psr', 'pss', 'pst', 'psu', 'psw', 'psy', 'pta', 'pth', 'pti', 'ptn', 'pto', 'ptp', 'ptq', 'ptr', 'ptt', 'ptu', 'ptv', 'ptw', 'pty', 'pua', 'pub', 'puc', 'pud', 'pue', 'puf', 'pug', 'pui', 'puj', 'puk', 'pum', 'puo', 'pup', 'puq', 'pur', 'put', 'puu', 'puw', 'pux', 'puy', 'puz', 'pwa', 'pwb', 'pwg', 'pwi', 'pwm', 'pwn', 'pwo', 'pwr', 'pww', 'pxm', 'pye', 'pym', 'pyn', 'pys', 'pyu', 'pyx', 'pyy', 'pzn', 'qaa..qtz', 'qua', 'qub', 'quc', 'qud', 'quf', 'qug', 'quh', 'qui', 'quk', 'qul', 'qum', 'qun', 'qup', 'quq', 'qur', 'qus', 'quv', 'quw', 'qux', 'quy', 'quz', 'qva', 'qvc', 'qve', 'qvh', 'qvi', 'qvj', 'qvl', 'qvm', 'qvn', 'qvo', 'qvp', 'qvs', 'qvw', 'qvy', 'qvz', 'qwa', 'qwc', 'qwe', 'qwh', 'qwm', 'qws', 'qwt', 'qxa', 'qxc', 'qxh', 'qxl', 'qxn', 'qxo', 'qxp', 'qxq', 'qxr', 'qxs', 'qxt', 'qxu', 'qxw', 'qya', 'qyp', 'raa', 'rab', 'rac', 'rad', 'raf', 'rag', 'rah', 'rai', 'raj', 'rak', 'ral', 'ram', 'ran', 'rao', 'rap', 'raq', 'rar', 'ras', 'rat', 'rau', 'rav', 'raw', 'rax', 'ray', 'raz', 'rbb', 'rbk', 'rbl', 'rbp', 'rcf', 'rdb', 'rea', 'reb', 'ree', 'reg', 'rei', 'rej', 'rel', 'rem', 'ren', 'rer', 'res', 'ret', 'rey', 'rga', 'rge', 'rgk', 'rgn', 'rgr', 'rgs', 'rgu', 'rhg', 'rhp', 'ria', 'rie', 'rif', 'ril', 'rim', 'rin', 'rir', 'rit', 'riu', 'rjg', 'rji', 'rjs', 'rka', 'rkb', 'rkh', 'rki', 'rkm', 'rkt', 'rkw', 'rma', 'rmb', 'rmc', 'rmd', 'rme', 'rmf', 'rmg', 'rmh', 'rmi', 'rmk', 'rml', 'rmm', 'rmn', 'rmo', 'rmp', 'rmq', 'rmr', 'rms', 'rmt', 'rmu', 'rmv', 'rmw', 'rmx', 'rmy', 'rmz', 'rna', 'rnd', 'rng', 'rnl', 'rnn', 'rnp', 'rnr', 'rnw', 'roa', 'rob', 'roc', 'rod', 'roe', 'rof', 'rog', 'rol', 'rom', 'roo', 'rop', 'ror', 'rou', 'row', 'rpn', 'rpt', 'rri', 'rro', 'rrt', 'rsb', 'rsi', 'rsl', 'rsm', 'rtc', 'rth', 'rtm', 'rts', 'rtw', 'rub', 'ruc', 'rue', 'ruf', 'rug', 'ruh', 'rui', 'ruk', 'ruo', 'rup', 'ruq', 'rut', 'ruu', 'ruy', 'ruz', 'rwa', 'rwk', 'rwm', 'rwo', 'rwr', 'rxd', 'rxw', 'ryn', 'rys', 'ryu', 'rzh', 'saa', 'sab', 'sac', 'sad', 'sae', 'saf', 'sah', 'sai', 'saj', 'sak', 'sal', 'sam', 'sao', 'sap', 'saq', 'sar', 'sas', 'sat', 'sau', 'sav', 'saw', 'sax', 'say', 'saz', 'sba', 'sbb', 'sbc', 'sbd', 'sbe', 'sbf', 'sbg', 'sbh', 'sbi', 'sbj', 'sbk', 'sbl', 'sbm', 'sbn', 'sbo', 'sbp', 'sbq', 'sbr', 'sbs', 'sbt', 'sbu', 'sbv', 'sbw', 'sbx', 'sby', 'sbz', 'sca', 'scb', 'sce', 'scf', 'scg', 'sch', 'sci', 'sck', 'scl', 'scn', 'sco', 'scp', 'scq', 'scs', 'sct', 'scu', 'scv', 'scw', 'scx', 'sda', 'sdb', 'sdc', 'sde', 'sdf', 'sdg', 'sdh', 'sdj', 'sdk', 'sdl', 'sdm', 'sdn', 'sdo', 'sdp', 'sdr', 'sds', 'sdt', 'sdu', 'sdv', 'sdx', 'sdz', 'sea', 'seb', 'sec', 'sed', 'see', 'sef', 'seg', 'seh', 'sei', 'sej', 'sek', 'sel', 'sem', 'sen', 'seo', 'sep', 'seq', 'ser', 'ses', 'set', 'seu', 'sev', 'sew', 'sey', 'sez', 'sfb', 'sfe', 'sfm', 'sfs', 'sfw', 'sga', 'sgb', 'sgc', 'sgd', 'sge', 'sgg', 'sgh', 'sgi', 'sgj', 'sgk', 'sgl', 'sgm', 'sgn', 'sgo', 'sgp', 'sgr', 'sgs', 'sgt', 'sgu', 'sgw', 'sgx', 'sgy', 'sgz', 'sha', 'shb', 'shc', 'shd', 'she', 'shg', 'shh', 'shi', 'shj', 'shk', 'shl', 'shm', 'shn', 'sho', 'shp', 'shq', 'shr', 'shs', 'sht', 'shu', 'shv', 'shw', 'shx', 'shy', 'shz', 'sia', 'sib', 'sid', 'sie', 'sif', 'sig', 'sih', 'sii', 'sij', 'sik', 'sil', 'sim', 'sio', 'sip', 'siq', 'sir', 'sis', 'sit', 'siu', 'siv', 'siw', 'six', 'siy', 'siz', 'sja', 'sjb', 'sjd', 'sje', 'sjg', 'sjk', 'sjl', 'sjm', 'sjn', 'sjo', 'sjp', 'sjr', 'sjs', 'sjt', 'sju', 'sjw', 'ska', 'skb', 'skc', 'skd', 'ske', 'skf', 'skg', 'skh', 'ski', 'skj', 'skk', 'skm', 'skn', 'sko', 'skp', 'skq', 'skr', 'sks', 'skt', 'sku', 'skv', 'skw', 'skx', 'sky', 'skz', 'sla', 'slc', 'sld', 'sle', 'slf', 'slg', 'slh', 'sli', 'slj', 'sll', 'slm', 'sln', 'slp', 'slq', 'slr', 'sls', 'slt', 'slu', 'slw', 'slx', 'sly', 'slz', 'sma', 'smb', 'smc', 'smd', 'smf', 'smg', 'smh', 'smi', 'smj', 'smk', 'sml', 'smm', 'smn', 'smp', 'smq', 'smr', 'sms', 'smt', 'smu', 'smv', 'smw', 'smx', 'smy', 'smz', 'snb', 'snc', 'sne', 'snf', 'sng', 'snh', 'sni', 'snj', 'snk', 'snl', 'snm', 'snn', 'sno', 'snp', 'snq', 'snr', 'sns', 'snu', 'snv', 'snw', 'snx', 'sny', 'snz', 'soa', 'sob', 'soc', 'sod', 'soe', 'sog', 'soh', 'soi', 'soj', 'sok', 'sol', 'son', 'soo', 'sop', 'soq', 'sor', 'sos', 'sou', 'sov', 'sow', 'sox', 'soy', 'soz', 'spb', 'spc', 'spd', 'spe', 'spg', 'spi', 'spk', 'spl', 'spm', 'spn', 'spo', 'spp', 'spq', 'spr', 'sps', 'spt', 'spu', 'spv', 'spx', 'spy', 'sqa', 'sqh', 'sqj', 'sqk', 'sqm', 'sqn', 'sqo', 'sqq', 'sqr', 'sqs', 'sqt', 'squ', 'sra', 'srb', 'src', 'sre', 'srf', 'srg', 'srh', 'sri', 'srk', 'srl', 'srm', 'srn', 'sro', 'srq', 'srr', 'srs', 'srt', 'sru', 'srv', 'srw', 'srx', 'sry', 'srz', 'ssa', 'ssb', 'ssc', 'ssd', 'sse', 'ssf', 'ssg', 'ssh', 'ssi', 'ssj', 'ssk', 'ssl', 'ssm', 'ssn', 'sso', 'ssp', 'ssq', 'ssr', 'sss', 'sst', 'ssu', 'ssv', 'ssx', 'ssy', 'ssz', 'sta', 'stb', 'std', 'ste', 'stf', 'stg', 'sth', 'sti', 'stj', 'stk', 'stl', 'stm', 'stn', 'sto', 'stp', 'stq', 'str', 'sts', 'stt', 'stu', 'stv', 'stw', 'sty', 'sua', 'sub', 'suc', 'sue', 'sug', 'sui', 'suj', 'suk', 'sul', 'sum', 'suq', 'sur', 'sus', 'sut', 'suv', 'suw', 'sux', 'suy', 'suz', 'sva', 'svb', 'svc', 'sve', 'svk', 'svm', 'svr', 'svs', 'svx', 'swb', 'swc', 'swf', 'swg', 'swh', 'swi', 'swj', 'swk', 'swl', 'swm', 'swn', 'swo', 'swp', 'swq', 'swr', 'sws', 'swt', 'swu', 'swv', 'sww', 'swx', 'swy', 'sxb', 'sxc', 'sxe', 'sxg', 'sxk', 'sxl', 'sxm', 'sxn', 'sxo', 'sxr', 'sxs', 'sxu', 'sxw', 'sya', 'syb', 'syc', 'syd', 'syi', 'syk', 'syl', 'sym', 'syn', 'syo', 'syr', 'sys', 'syw', 'syx', 'syy', 'sza', 'szb', 'szc', 'szd', 'sze', 'szg', 'szl', 'szn', 'szp', 'szs', 'szv', 'szw', 'taa', 'tab', 'tac', 'tad', 'tae', 'taf', 'tag', 'tai', 'taj', 'tak', 'tal', 'tan', 'tao', 'tap', 'taq', 'tar', 'tas', 'tau', 'tav', 'taw', 'tax', 'tay', 'taz', 'tba', 'tbb', 'tbc', 'tbd', 'tbe', 'tbf', 'tbg', 'tbh', 'tbi', 'tbj', 'tbk', 'tbl', 'tbm', 'tbn', 'tbo', 'tbp', 'tbq', 'tbr', 'tbs', 'tbt', 'tbu', 'tbv', 'tbw', 'tbx', 'tby', 'tbz', 'tca', 'tcb', 'tcc', 'tcd', 'tce', 'tcf', 'tcg', 'tch', 'tci', 'tck', 'tcl', 'tcm', 'tcn', 'tco', 'tcp', 'tcq', 'tcs', 'tct', 'tcu', 'tcw', 'tcx', 'tcy', 'tcz', 'tda', 'tdb', 'tdc', 'tdd', 'tde', 'tdf', 'tdg', 'tdh', 'tdi', 'tdj', 'tdk', 'tdl', 'tdm', 'tdn', 'tdo', 'tdq', 'tdr', 'tds', 'tdt', 'tdu', 'tdv', 'tdx', 'tdy', 'tea', 'teb', 'tec', 'ted', 'tee', 'tef', 'teg', 'teh', 'tei', 'tek', 'tem', 'ten', 'teo', 'tep', 'teq', 'ter', 'tes', 'tet', 'teu', 'tev', 'tew', 'tex', 'tey', 'tfi', 'tfn', 'tfo', 'tfr', 'tft', 'tga', 'tgb', 'tgc', 'tgd', 'tge', 'tgf', 'tgg', 'tgh', 'tgi', 'tgj', 'tgn', 'tgo', 'tgp', 'tgq', 'tgr', 'tgs', 'tgt', 'tgu', 'tgv', 'tgw', 'tgx', 'tgy', 'tgz', 'thc', 'thd', 'the', 'thf', 'thh', 'thi', 'thk', 'thl', 'thm', 'thn', 'thp', 'thq', 'thr', 'ths', 'tht', 'thu', 'thv', 'thw', 'thx', 'thy', 'thz', 'tia', 'tic', 'tid', 'tie', 'tif', 'tig', 'tih', 'tii', 'tij', 'tik', 'til', 'tim', 'tin', 'tio', 'tip', 'tiq', 'tis', 'tit', 'tiu', 'tiv', 'tiw', 'tix', 'tiy', 'tiz', 'tja', 'tjg', 'tji', 'tjl', 'tjm', 'tjn', 'tjo', 'tjs', 'tju', 'tjw', 'tka', 'tkb', 'tkd', 'tke', 'tkf', 'tkg', 'tkk', 'tkl', 'tkm', 'tkn', 'tkp', 'tkq', 'tkr', 'tks', 'tkt', 'tku', 'tkv', 'tkw', 'tkx', 'tkz', 'tla', 'tlb', 'tlc', 'tld', 'tlf', 'tlg', 'tlh', 'tli', 'tlj', 'tlk', 'tll', 'tlm', 'tln', 'tlo', 'tlp', 'tlq', 'tlr', 'tls', 'tlt', 'tlu', 'tlv', 'tlw', 'tlx', 'tly', 'tma', 'tmb', 'tmc', 'tmd', 'tme', 'tmf', 'tmg', 'tmh', 'tmi', 'tmj', 'tmk', 'tml', 'tmm', 'tmn', 'tmo', 'tmp', 'tmq', 'tmr', 'tms', 'tmt', 'tmu', 'tmv', 'tmw', 'tmy', 'tmz', 'tna', 'tnb', 'tnc', 'tnd', 'tne', 'tnf', 'tng', 'tnh', 'tni', 'tnk', 'tnl', 'tnm', 'tnn', 'tno', 'tnp', 'tnq', 'tnr', 'tns', 'tnt', 'tnu', 'tnv', 'tnw', 'tnx', 'tny', 'tnz', 'tob', 'toc', 'tod', 'toe', 'tof', 'tog', 'toh', 'toi', 'toj', 'tol', 'tom', 'too', 'top', 'toq', 'tor', 'tos', 'tou', 'tov', 'tow', 'tox', 'toy', 'toz', 'tpa', 'tpc', 'tpe', 'tpf', 'tpg', 'tpi', 'tpj', 'tpk', 'tpl', 'tpm', 'tpn', 'tpo', 'tpp', 'tpq', 'tpr', 'tpt', 'tpu', 'tpv', 'tpw', 'tpx', 'tpy', 'tpz', 'tqb', 'tql', 'tqm', 'tqn', 'tqo', 'tqp', 'tqq', 'tqr', 'tqt', 'tqu', 'tqw', 'tra', 'trb', 'trc', 'trd', 'tre', 'trf', 'trg', 'trh', 'tri', 'trj', 'trk', 'trl', 'trm', 'trn', 'tro', 'trp', 'trq', 'trr', 'trs', 'trt', 'tru', 'trv', 'trw', 'trx', 'try', 'trz', 'tsa', 'tsb', 'tsc', 'tsd', 'tse', 'tsf', 'tsg', 'tsh', 'tsi', 'tsj', 'tsk', 'tsl', 'tsm', 'tsp', 'tsq', 'tsr', 'tss', 'tst', 'tsu', 'tsv', 'tsw', 'tsx', 'tsy', 'tsz', 'tta', 'ttb', 'ttc', 'ttd', 'tte', 'ttf', 'ttg', 'tth', 'tti', 'ttj', 'ttk', 'ttl', 'ttm', 'ttn', 'tto', 'ttp', 'ttq', 'ttr', 'tts', 'ttt', 'ttu', 'ttv', 'ttw', 'tty', 'ttz', 'tua', 'tub', 'tuc', 'tud', 'tue', 'tuf', 'tug', 'tuh', 'tui', 'tuj', 'tul', 'tum', 'tun', 'tuo', 'tup', 'tuq', 'tus', 'tut', 'tuu', 'tuv', 'tuw', 'tux', 'tuy', 'tuz', 'tva', 'tvd', 'tve', 'tvk', 'tvl', 'tvm', 'tvn', 'tvo', 'tvs', 'tvt', 'tvu', 'tvw', 'tvy', 'twa', 'twb', 'twc', 'twd', 'twe', 'twf', 'twg', 'twh', 'twl', 'twm', 'twn', 'two', 'twp', 'twq', 'twr', 'twt', 'twu', 'tww', 'twx', 'twy', 'txa', 'txb', 'txc', 'txe', 'txg', 'txh', 'txi', 'txj', 'txm', 'txn', 'txo', 'txq', 'txr', 'txs', 'txt', 'txu', 'txx', 'txy', 'tya', 'tye', 'tyh', 'tyi', 'tyj', 'tyl', 'tyn', 'typ', 'tyr', 'tys', 'tyt', 'tyu', 'tyv', 'tyx', 'tyz', 'tza', 'tzh', 'tzj', 'tzl', 'tzm', 'tzn', 'tzo', 'tzx', 'uam', 'uan', 'uar', 'uba', 'ubi', 'ubl', 'ubr', 'ubu', 'uby', 'uda', 'ude', 'udg', 'udi', 'udj', 'udl', 'udm', 'udu', 'ues', 'ufi', 'uga', 'ugb', 'uge', 'ugn', 'ugo', 'ugy', 'uha', 'uhn', 'uis', 'uiv', 'uji', 'uka', 'ukg', 'ukh', 'ukk', 'ukl', 'ukp', 'ukq', 'uks', 'uku', 'ukw', 'uky', 'ula', 'ulb', 'ulc', 'ule', 'ulf', 'uli', 'ulk', 'ull', 'ulm', 'uln', 'ulu', 'ulw', 'uma', 'umb', 'umc', 'umd', 'umg', 'umi', 'umm', 'umn', 'umo', 'ump', 'umr', 'ums', 'umu', 'una', 'und', 'une', 'ung', 'unk', 'unm', 'unn', 'unp', 'unr', 'unu', 'unx', 'unz', 'uok', 'upi', 'upv', 'ura', 'urb', 'urc', 'ure', 'urf', 'urg', 'urh', 'uri', 'urj', 'urk', 'url', 'urm', 'urn', 'uro', 'urp', 'urr', 'urt', 'uru', 'urv', 'urw', 'urx', 'ury', 'urz', 'usa', 'ush', 'usi', 'usk', 'usp', 'usu', 'uta', 'ute', 'utp', 'utr', 'utu', 'uum', 'uun', 'uur', 'uuu', 'uve', 'uvh', 'uvl', 'uwa', 'uya', 'uzn', 'uzs', 'vaa', 'vae', 'vaf', 'vag', 'vah', 'vai', 'vaj', 'val', 'vam', 'van', 'vao', 'vap', 'var', 'vas', 'vau', 'vav', 'vay', 'vbb', 'vbk', 'vec', 'ved', 'vel', 'vem', 'veo', 'vep', 'ver', 'vgr', 'vgt', 'vic', 'vid', 'vif', 'vig', 'vil', 'vin', 'vis', 'vit', 'viv', 'vka', 'vki', 'vkj', 'vkk', 'vkl', 'vkm', 'vko', 'vkp', 'vkt', 'vku', 'vlp', 'vls', 'vma', 'vmb', 'vmc', 'vmd', 'vme', 'vmf', 'vmg', 'vmh', 'vmi', 'vmj', 'vmk', 'vml', 'vmm', 'vmp', 'vmq', 'vmr', 'vms', 'vmu', 'vmv', 'vmw', 'vmx', 'vmy', 'vmz', 'vnk', 'vnm', 'vnp', 'vor', 'vot', 'vra', 'vro', 'vrs', 'vrt', 'vsi', 'vsl', 'vsv', 'vto', 'vum', 'vun', 'vut', 'vwa', 'waa', 'wab', 'wac', 'wad', 'wae', 'waf', 'wag', 'wah', 'wai', 'waj', 'wak', 'wal', 'wam', 'wan', 'wao', 'wap', 'waq', 'war', 'was', 'wat', 'wau', 'wav', 'waw', 'wax', 'way', 'waz', 'wba', 'wbb', 'wbe', 'wbf', 'wbh', 'wbi', 'wbj', 'wbk', 'wbl', 'wbm', 'wbp', 'wbq', 'wbr', 'wbs', 'wbt', 'wbv', 'wbw', 'wca', 'wci', 'wdd', 'wdg', 'wdj', 'wdk', 'wdu', 'wdy', 'wea', 'wec', 'wed', 'weg', 'weh', 'wei', 'wem', 'wen', 'weo', 'wep', 'wer', 'wes', 'wet', 'weu', 'wew', 'wfg', 'wga', 'wgb', 'wgg', 'wgi', 'wgo', 'wgu', 'wgw', 'wgy', 'wha', 'whg', 'whk', 'whu', 'wib', 'wic', 'wie', 'wif', 'wig', 'wih', 'wii', 'wij', 'wik', 'wil', 'wim', 'win', 'wir', 'wit', 'wiu', 'wiv', 'wiw', 'wiy', 'wja', 'wji', 'wka', 'wkb', 'wkd', 'wkl', 'wku', 'wkw', 'wky', 'wla', 'wlc', 'wle', 'wlg', 'wli', 'wlk', 'wll', 'wlm', 'wlo', 'wlr', 'wls', 'wlu', 'wlv', 'wlw', 'wlx', 'wly', 'wma', 'wmb', 'wmc', 'wmd', 'wme', 'wmh', 'wmi', 'wmm', 'wmn', 'wmo', 'wms', 'wmt', 'wmw', 'wmx', 'wnb', 'wnc', 'wnd', 'wne', 'wng', 'wni', 'wnk', 'wnm', 'wnn', 'wno', 'wnp', 'wnu', 'wnw', 'wny', 'woa', 'wob', 'woc', 'wod', 'woe', 'wof', 'wog', 'woi', 'wok', 'wom', 'won', 'woo', 'wor', 'wos', 'wow', 'woy', 'wpc', 'wra', 'wrb', 'wrd', 'wrg', 'wrh', 'wri', 'wrk', 'wrl', 'wrm', 'wrn', 'wro', 'wrp', 'wrr', 'wrs', 'wru', 'wrv', 'wrw', 'wrx', 'wry', 'wrz', 'wsa', 'wsg', 'wsi', 'wsk', 'wsr', 'wss', 'wsu', 'wsv', 'wtf', 'wth', 'wti', 'wtk', 'wtm', 'wtw', 'wua', 'wub', 'wud', 'wuh', 'wul', 'wum', 'wun', 'wur', 'wut', 'wuu', 'wuv', 'wux', 'wuy', 'wwa', 'wwb', 'wwo', 'wwr', 'www', 'wxa', 'wxw', 'wya', 'wyb', 'wyi', 'wym', 'wyr', 'wyy', 'xaa', 'xab', 'xac', 'xad', 'xae', 'xag', 'xai', 'xaj', 'xak', 'xal', 'xam', 'xan', 'xao', 'xap', 'xaq', 'xar', 'xas', 'xat', 'xau', 'xav', 'xaw', 'xay', 'xba', 'xbb', 'xbc', 'xbd', 'xbe', 'xbg', 'xbi', 'xbj', 'xbm', 'xbn', 'xbo', 'xbp', 'xbr', 'xbw', 'xbx', 'xby', 'xcb', 'xcc', 'xce', 'xcg', 'xch', 'xcl', 'xcm', 'xcn', 'xco', 'xcr', 'xct', 'xcu', 'xcv', 'xcw', 'xcy', 'xda', 'xdc', 'xdk', 'xdm', 'xdo', 'xdy', 'xeb', 'xed', 'xeg', 'xel', 'xem', 'xep', 'xer', 'xes', 'xet', 'xeu', 'xfa', 'xga', 'xgb', 'xgd', 'xgf', 'xgg', 'xgi', 'xgl', 'xgm', 'xgn', 'xgr', 'xgu', 'xgw', 'xha', 'xhc', 'xhd', 'xhe', 'xhr', 'xht', 'xhu', 'xhv', 'xia', 'xib', 'xii', 'xil', 'xin', 'xip', 'xir', 'xis', 'xiv', 'xiy', 'xjb', 'xjt', 'xka', 'xkb', 'xkc', 'xkd', 'xke', 'xkf', 'xkg', 'xkh', 'xki', 'xkj', 'xkk', 'xkl', 'xkn', 'xko', 'xkp', 'xkq', 'xkr', 'xks', 'xkt', 'xku', 'xkv', 'xkw', 'xkx', 'xky', 'xkz', 'xla', 'xlb', 'xlc', 'xld', 'xle', 'xlg', 'xli', 'xln', 'xlo', 'xlp', 'xls', 'xlu', 'xly', 'xma', 'xmb', 'xmc', 'xmd', 'xme', 'xmf', 'xmg', 'xmh', 'xmj', 'xmk', 'xml', 'xmm', 'xmn', 'xmo', 'xmp', 'xmq', 'xmr', 'xms', 'xmt', 'xmu', 'xmv', 'xmw', 'xmx', 'xmy', 'xmz', 'xna', 'xnb', 'xnd', 'xng', 'xnh', 'xni', 'xnk', 'xnn', 'xno', 'xnr', 'xns', 'xnt', 'xnu', 'xny', 'xnz', 'xoc', 'xod', 'xog', 'xoi', 'xok', 'xom', 'xon', 'xoo', 'xop', 'xor', 'xow', 'xpa', 'xpc', 'xpe', 'xpg', 'xpi', 'xpj', 'xpk', 'xpm', 'xpn', 'xpo', 'xpp', 'xpq', 'xpr', 'xps', 'xpt', 'xpu', 'xpy', 'xqa', 'xqt', 'xra', 'xrb', 'xrd', 'xre', 'xrg', 'xri', 'xrm', 'xrn', 'xrq', 'xrr', 'xrt', 'xru', 'xrw', 'xsa', 'xsb', 'xsc', 'xsd', 'xse', 'xsh', 'xsi', 'xsj', 'xsl', 'xsm', 'xsn', 'xso', 'xsp', 'xsq', 'xsr', 'xss', 'xsu', 'xsv', 'xsy', 'xta', 'xtb', 'xtc', 'xtd', 'xte', 'xtg', 'xth', 'xti', 'xtj', 'xtl', 'xtm', 'xtn', 'xto', 'xtp', 'xtq', 'xtr', 'xts', 'xtt', 'xtu', 'xtv', 'xtw', 'xty', 'xtz', 'xua', 'xub', 'xud', 'xug', 'xuj', 'xul', 'xum', 'xun', 'xuo', 'xup', 'xur', 'xut', 'xuu', 'xve', 'xvi', 'xvn', 'xvo', 'xvs', 'xwa', 'xwc', 'xwd', 'xwe', 'xwg', 'xwj', 'xwk', 'xwl', 'xwo', 'xwr', 'xwt', 'xww', 'xxb', 'xxk', 'xxm', 'xxr', 'xxt', 'xya', 'xyb', 'xyj', 'xyk', 'xyl', 'xyt', 'xyy', 'xzh', 'xzm', 'xzp', 'yaa', 'yab', 'yac', 'yad', 'yae', 'yaf', 'yag', 'yah', 'yai', 'yaj', 'yak', 'yal', 'yam', 'yan', 'yao', 'yap', 'yaq', 'yar', 'yas', 'yat', 'yau', 'yav', 'yaw', 'yax', 'yay', 'yaz', 'yba', 'ybb', 'ybd', 'ybe', 'ybh', 'ybi', 'ybj', 'ybk', 'ybl', 'ybm', 'ybn', 'ybo', 'ybx', 'yby', 'ych', 'ycl', 'ycn', 'ycp', 'yda', 'ydd', 'yde', 'ydg', 'ydk', 'yds', 'yea', 'yec', 'yee', 'yei', 'yej', 'yel', 'yen', 'yer', 'yes', 'yet', 'yeu', 'yev', 'yey', 'yga', 'ygi', 'ygl', 'ygm', 'ygp', 'ygr', 'ygs', 'ygu', 'ygw', 'yha', 'yhd', 'yhl', 'yhs', 'yia', 'yif', 'yig', 'yih', 'yii', 'yij', 'yik', 'yil', 'yim', 'yin', 'yip', 'yiq', 'yir', 'yis', 'yit', 'yiu', 'yiv', 'yix', 'yiy', 'yiz', 'yka', 'ykg', 'yki', 'ykk', 'ykl', 'ykm', 'ykn', 'yko', 'ykr', 'ykt', 'yku', 'yky', 'yla', 'ylb', 'yle', 'ylg', 'yli', 'yll', 'ylm', 'yln', 'ylo', 'ylr', 'ylu', 'yly', 'yma', 'ymb', 'ymc', 'ymd', 'yme', 'ymg', 'ymh', 'ymi', 'ymk', 'yml', 'ymm', 'ymn', 'ymo', 'ymp', 'ymq', 'ymr', 'yms', 'ymt', 'ymx', 'ymz', 'yna', 'ynd', 'yne', 'yng', 'ynh', 'ynk', 'ynl', 'ynn', 'yno', 'ynq', 'yns', 'ynu', 'yob', 'yog', 'yoi', 'yok', 'yol', 'yom', 'yon', 'yos', 'yot', 'yox', 'yoy', 'ypa', 'ypb', 'ypg', 'yph', 'ypk', 'ypm', 'ypn', 'ypo', 'ypp', 'ypz', 'yra', 'yrb', 'yre', 'yri', 'yrk', 'yrl', 'yrm', 'yrn', 'yro', 'yrs', 'yrw', 'yry', 'ysc', 'ysd', 'ysg', 'ysl', 'ysn', 'yso', 'ysp', 'ysr', 'yss', 'ysy', 'yta', 'ytl', 'ytp', 'ytw', 'yty', 'yua', 'yub', 'yuc', 'yud', 'yue', 'yuf', 'yug', 'yui', 'yuj', 'yuk', 'yul', 'yum', 'yun', 'yup', 'yuq', 'yur', 'yut', 'yuu', 'yuw', 'yux', 'yuy', 'yuz', 'yva', 'yvt', 'ywa', 'ywg', 'ywl', 'ywn', 'ywq', 'ywr', 'ywt', 'ywu', 'yww', 'yxa', 'yxg', 'yxl', 'yxm', 'yxu', 'yxy', 'yyr', 'yyu', 'yyz', 'yzg', 'yzk', 'zaa', 'zab', 'zac', 'zad', 'zae', 'zaf', 'zag', 'zah', 'zai', 'zaj', 'zak', 'zal', 'zam', 'zao', 'zap', 'zaq', 'zar', 'zas', 'zat', 'zau', 'zav', 'zaw', 'zax', 'zay', 'zaz', 'zbc', 'zbe', 'zbl', 'zbt', 'zbw', 'zca', 'zch', 'zdj', 'zea', 'zeg', 'zeh', 'zen', 'zga', 'zgb', 'zgh', 'zgm', 'zgn', 'zgr', 'zhb', 'zhd', 'zhi', 'zhn', 'zhw', 'zhx', 'zia', 'zib', 'zik', 'zil', 'zim', 'zin', 'zir', 'ziw', 'ziz', 'zka', 'zkb', 'zkd', 'zkg', 'zkh', 'zkk', 'zkn', 'zko', 'zkp', 'zkr', 'zkt', 'zku', 'zkv', 'zkz', 'zle', 'zlj', 'zlm', 'zln', 'zlq', 'zls', 'zlw', 'zma', 'zmb', 'zmc', 'zmd', 'zme', 'zmf', 'zmg', 'zmh', 'zmi', 'zmj', 'zmk', 'zml', 'zmm', 'zmn', 'zmo', 'zmp', 'zmq', 'zmr', 'zms', 'zmt', 'zmu', 'zmv', 'zmw', 'zmx', 'zmy', 'zmz', 'zna', 'znd', 'zne', 'zng', 'znk', 'zns', 'zoc', 'zoh', 'zom', 'zoo', 'zoq', 'zor', 'zos', 'zpa', 'zpb', 'zpc', 'zpd', 'zpe', 'zpf', 'zpg', 'zph', 'zpi', 'zpj', 'zpk', 'zpl', 'zpm', 'zpn', 'zpo', 'zpp', 'zpq', 'zpr', 'zps', 'zpt', 'zpu', 'zpv', 'zpw', 'zpx', 'zpy', 'zpz', 'zqe', 'zra', 'zrg', 'zrn', 'zro', 'zrp', 'zrs', 'zsa', 'zsk', 'zsl', 'zsm', 'zsr', 'zsu', 'zte', 'ztg', 'ztl', 'ztm', 'ztn', 'ztp', 'ztq', 'zts', 'ztt', 'ztu', 'ztx', 'zty', 'zua', 'zuh', 'zum', 'zun', 'zuy', 'zwa', 'zxx', 'zyb', 'zyg', 'zyj', 'zyn', 'zyp', 'zza', 'zzj' ];\n\t      axe.utils.validLangs = function() {\n\t        'use strict';\n\t        return langs;\n\t      };\n\t      return commons;\n\t    }()\n\t  });\n\t})(typeof window === 'object' ? window : this);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(55)(module)))\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n\n/***/ 154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\t__webpack_require__(315);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Browser = function Browser() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { className: 'docs-browser' },\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'docs-browser-body' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'docs-browser-page-header' },\n\t        _react2.default.createElement('div', { className: 'docs-browser-page-logo' })\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'docs-browser-page-body' },\n\t        _react2.default.createElement('div', { className: 'docs-browser-page-column1' }),\n\t        _react2.default.createElement('div', { className: 'docs-browser-page-column2' })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tmodule.exports = Browser;\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 161:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Browser = __webpack_require__(154);\n\t\n\tvar _Browser2 = _interopRequireDefault(_Browser);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar IndexPage = function IndexPage() {\n\t  return _react2.default.createElement(\n\t    'main',\n\t    { className: 'docs-masthead' },\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'container-sm' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'row justify-content-sm-center' },\n\t        _react2.default.createElement(_Browser2.default, null),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'mt-4' },\n\t          _react2.default.createElement(\n\t            'p',\n\t            { className: 'lead text-center' },\n\t            'The Availity UIKit is derived from ',\n\t            _react2.default.createElement(\n\t              'a',\n\t              { href: 'https://getbootstrap.com/' },\n\t              'Bootstrap 4'\n\t            ),\n\t            ' and allows developers to create stunning web applications for the Availity Spaces platform.',\n\t            ' '\n\t          ),\n\t          _react2.default.createElement(\n\t            'p',\n\t            { className: 'lead text-center' },\n\t            'This guide will document any modifications done to the Bootstrap framework. Original Bootstrap conventions were preserved as much as possible.'\n\t          ),\n\t          _react2.default.createElement(\n\t            'p',\n\t            { className: 'lead text-center' },\n\t            'The Availity UIKit is available through ',\n\t            _react2.default.createElement(\n\t              'a',\n\t              { href: 'https://github.com/Availity/availity-uikit' },\n\t              'Github'\n\t            ),\n\t            ',',\n\t            ' ',\n\t            _react2.default.createElement(\n\t              'a',\n\t              { href: 'https://www.npmjs.com/package/availity-uikit' },\n\t              'NPM'\n\t            ),\n\t            '.',\n\t            ' '\n\t          )\n\t        )\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar axe = __webpack_require__(146);\n\t\n\tdescribe('Custom component', function () {\n\t  it('should have no a11y violations', function (done) {\n\t    var options = {};\n\t\n\t    axe.run('.docs-masthead', options, function (error, results) {\n\t      expect(results.violations.length).toBe(0);\n\t      done();\n\t    });\n\t  });\n\t});\n\t\n\texports.default = IndexPage;\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-50eca30ec9330a925a80.js","/*! aXe v3.0.0\n * Copyright (c) 2018 Deque Systems, Inc.\n *\n * Your use of this Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * This entire copyright notice must appear in every copy of this file you\n * distribute or in any file that contains substantial portions of this source\n * code.\n */\n(function axeFunction(window) {\n  var global = window;\n  var document = window.document;\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  var axe = axe || {};\n  axe.version = '3.0.0';\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      'use strict';\n      return axe;\n    });\n  }\n  if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports && typeof axeFunction.toString === 'function') {\n    axe.source = '(' + axeFunction.toString() + ')(typeof window === \"object\" ? window : this);';\n    module.exports = axe;\n  }\n  if (typeof window.getComputedStyle === 'function') {\n    window.axe = axe;\n  }\n  var commons;\n  function SupportError(error) {\n    this.name = 'SupportError';\n    this.cause = error.cause;\n    this.message = '`' + error.cause + '` - feature unsupported in your environment.';\n    if (error.ruleId) {\n      this.ruleId = error.ruleId;\n      this.message += ' Skipping ' + this.ruleId + ' rule.';\n    }\n    this.stack = new Error().stack;\n  }\n  SupportError.prototype = Object.create(Error.prototype);\n  SupportError.prototype.constructor = SupportError;\n  'use strict';\n  var utils = axe.utils = {};\n  'use strict';\n  var helpers = {};\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function getDefaultConfiguration(audit) {\n    'use strict';\n    var config;\n    if (audit) {\n      config = axe.utils.clone(audit);\n      config.commons = audit.commons;\n    } else {\n      config = {};\n    }\n    config.reporter = config.reporter || null;\n    config.rules = config.rules || [];\n    config.checks = config.checks || [];\n    config.data = Object.assign({\n      checks: {},\n      rules: {}\n    }, config.data);\n    return config;\n  }\n  function unpackToObject(collection, audit, method) {\n    'use strict';\n    var i, l;\n    for (i = 0, l = collection.length; i < l; i++) {\n      audit[method](collection[i]);\n    }\n  }\n  function Audit(audit) {\n    this.brand = 'axe';\n    this.application = 'axeAPI';\n    this.tagExclude = [ 'experimental' ];\n    this.defaultConfig = audit;\n    this._init();\n  }\n  Audit.prototype._init = function() {\n    var audit = getDefaultConfiguration(this.defaultConfig);\n    axe.commons = commons = audit.commons;\n    this.reporter = audit.reporter;\n    this.commands = {};\n    this.rules = [];\n    this.checks = {};\n    unpackToObject(audit.rules, this, 'addRule');\n    unpackToObject(audit.checks, this, 'addCheck');\n    this.data = {};\n    this.data.checks = audit.data && audit.data.checks || {};\n    this.data.rules = audit.data && audit.data.rules || {};\n    this.data.failureSummaries = audit.data && audit.data.failureSummaries || {};\n    this.data.incompleteFallbackMessage = audit.data && audit.data.incompleteFallbackMessage || '';\n    this._constructHelpUrls();\n  };\n  Audit.prototype.registerCommand = function(command) {\n    'use strict';\n    this.commands[command.id] = command.callback;\n  };\n  Audit.prototype.addRule = function(spec) {\n    'use strict';\n    if (spec.metadata) {\n      this.data.rules[spec.id] = spec.metadata;\n    }\n    var rule = this.getRule(spec.id);\n    if (rule) {\n      rule.configure(spec);\n    } else {\n      this.rules.push(new Rule(spec, this));\n    }\n  };\n  Audit.prototype.addCheck = function(spec) {\n    'use strict';\n    var metadata = spec.metadata;\n    if ((typeof metadata === 'undefined' ? 'undefined' : _typeof(metadata)) === 'object') {\n      this.data.checks[spec.id] = metadata;\n      if (_typeof(metadata.messages) === 'object') {\n        Object.keys(metadata.messages).filter(function(prop) {\n          return metadata.messages.hasOwnProperty(prop) && typeof metadata.messages[prop] === 'string';\n        }).forEach(function(prop) {\n          if (metadata.messages[prop].indexOf('function') === 0) {\n            metadata.messages[prop] = new Function('return ' + metadata.messages[prop] + ';')();\n          }\n        });\n      }\n    }\n    if (this.checks[spec.id]) {\n      this.checks[spec.id].configure(spec);\n    } else {\n      this.checks[spec.id] = new Check(spec);\n    }\n  };\n  Audit.prototype.run = function(context, options, resolve, reject) {\n    'use strict';\n    this.normalizeOptions(options);\n    axe._selectCache = [];\n    var q = axe.utils.queue();\n    this.rules.forEach(function(rule) {\n      if (axe.utils.ruleShouldRun(rule, context, options)) {\n        if (options.performanceTimer) {\n          var markEnd = 'mark_rule_end_' + rule.id;\n          var markStart = 'mark_rule_start_' + rule.id;\n          axe.utils.performanceTimer.mark(markStart);\n        }\n        q.defer(function(res, rej) {\n          rule.run(context, options, function(out) {\n            if (options.performanceTimer) {\n              axe.utils.performanceTimer.mark(markEnd);\n              axe.utils.performanceTimer.measure('rule_' + rule.id, markStart, markEnd);\n            }\n            res(out);\n          }, function(err) {\n            if (!options.debug) {\n              var errResult = Object.assign(new RuleResult(rule), {\n                result: axe.constants.CANTTELL,\n                description: 'An error occured while running this rule',\n                message: err.message,\n                stack: err.stack,\n                error: err\n              });\n              res(errResult);\n            } else {\n              rej(err);\n            }\n          });\n        });\n      }\n    });\n    q.then(function(results) {\n      axe._selectCache = undefined;\n      resolve(results.filter(function(result) {\n        return !!result;\n      }));\n    }).catch(reject);\n  };\n  Audit.prototype.after = function(results, options) {\n    'use strict';\n    var rules = this.rules;\n    return results.map(function(ruleResult) {\n      var rule = axe.utils.findBy(rules, 'id', ruleResult.id);\n      if (!rule) {\n        throw new Error('Result for unknown rule. You may be running mismatch aXe-core versions');\n      }\n      return rule.after(ruleResult, options);\n    });\n  };\n  Audit.prototype.getRule = function(ruleId) {\n    return this.rules.find(function(rule) {\n      return rule.id === ruleId;\n    });\n  };\n  Audit.prototype.normalizeOptions = function(options) {\n    'use strict';\n    var audit = this;\n    if (_typeof(options.runOnly) === 'object') {\n      if (Array.isArray(options.runOnly)) {\n        options.runOnly = {\n          type: 'tag',\n          values: options.runOnly\n        };\n      }\n      var only = options.runOnly;\n      if (only.value && !only.values) {\n        only.values = only.value;\n        delete only.value;\n      }\n      if (!Array.isArray(only.values) || only.values.length === 0) {\n        throw new Error('runOnly.values must be a non-empty array');\n      }\n      if ([ 'rule', 'rules' ].includes(only.type)) {\n        only.type = 'rule';\n        only.values.forEach(function(ruleId) {\n          if (!audit.getRule(ruleId)) {\n            throw new Error('unknown rule `' + ruleId + '` in options.runOnly');\n          }\n        });\n      } else if ([ 'tag', 'tags', undefined ].includes(only.type)) {\n        only.type = 'tag';\n        var unmatchedTags = audit.rules.reduce(function(unmatchedTags, rule) {\n          return unmatchedTags.length ? unmatchedTags.filter(function(tag) {\n            return !rule.tags.includes(tag);\n          }) : unmatchedTags;\n        }, only.values);\n        if (unmatchedTags.length !== 0) {\n          throw new Error('Could not find tags `' + unmatchedTags.join('`, `') + '`');\n        }\n      } else {\n        throw new Error('Unknown runOnly type \\'' + only.type + '\\'');\n      }\n    }\n    if (_typeof(options.rules) === 'object') {\n      Object.keys(options.rules).forEach(function(ruleId) {\n        if (!audit.getRule(ruleId)) {\n          throw new Error('unknown rule `' + ruleId + '` in options.rules');\n        }\n      });\n    }\n    return options;\n  };\n  Audit.prototype.setBranding = function(branding) {\n    'use strict';\n    var previous = {\n      brand: this.brand,\n      application: this.application\n    };\n    if (branding && branding.hasOwnProperty('brand') && branding.brand && typeof branding.brand === 'string') {\n      this.brand = branding.brand;\n    }\n    if (branding && branding.hasOwnProperty('application') && branding.application && typeof branding.application === 'string') {\n      this.application = branding.application;\n    }\n    this._constructHelpUrls(previous);\n  };\n  function getHelpUrl(_ref, ruleId, version) {\n    var brand = _ref.brand, application = _ref.application;\n    return axe.constants.helpUrlBase + brand + '/' + (version || axe.version.substring(0, axe.version.lastIndexOf('.'))) + '/' + ruleId + '?application=' + application;\n  }\n  Audit.prototype._constructHelpUrls = function() {\n    var _this = this;\n    var previous = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var version = (axe.version.match(/^[1-9][0-9]*\\.[0-9]+/) || [ 'x.y' ])[0];\n    this.rules.forEach(function(rule) {\n      if (!_this.data.rules[rule.id]) {\n        _this.data.rules[rule.id] = {};\n      }\n      var metaData = _this.data.rules[rule.id];\n      if (typeof metaData.helpUrl !== 'string' || previous && metaData.helpUrl === getHelpUrl(previous, rule.id, version)) {\n        metaData.helpUrl = getHelpUrl(_this, rule.id, version);\n      }\n    });\n  };\n  Audit.prototype.resetRulesAndChecks = function() {\n    'use strict';\n    this._init();\n  };\n  'use strict';\n  function CheckResult(check) {\n    'use strict';\n    this.id = check.id;\n    this.data = null;\n    this.relatedNodes = [];\n    this.result = null;\n  }\n  'use strict';\n  function createExecutionContext(spec) {\n    'use strict';\n    if (typeof spec === 'string') {\n      return new Function('return ' + spec + ';')();\n    }\n    return spec;\n  }\n  function Check(spec) {\n    if (spec) {\n      this.id = spec.id;\n      this.configure(spec);\n    }\n  }\n  Check.prototype.enabled = true;\n  Check.prototype.run = function(node, options, resolve, reject) {\n    'use strict';\n    options = options || {};\n    var enabled = options.hasOwnProperty('enabled') ? options.enabled : this.enabled, checkOptions = options.options || this.options;\n    if (enabled) {\n      var checkResult = new CheckResult(this);\n      var checkHelper = axe.utils.checkHelper(checkResult, options, resolve, reject);\n      var result;\n      try {\n        result = this.evaluate.call(checkHelper, node.actualNode, checkOptions, node);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n      if (!checkHelper.isAsync) {\n        checkResult.result = result;\n        setTimeout(function() {\n          resolve(checkResult);\n        }, 0);\n      }\n    } else {\n      resolve(null);\n    }\n  };\n  Check.prototype.configure = function(spec) {\n    var _this = this;\n    [ 'options', 'enabled' ].filter(function(prop) {\n      return spec.hasOwnProperty(prop);\n    }).forEach(function(prop) {\n      return _this[prop] = spec[prop];\n    });\n    [ 'evaluate', 'after' ].filter(function(prop) {\n      return spec.hasOwnProperty(prop);\n    }).forEach(function(prop) {\n      return _this[prop] = createExecutionContext(spec[prop]);\n    });\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function pushUniqueFrame(collection, frame) {\n    'use strict';\n    if (axe.utils.isHidden(frame)) {\n      return;\n    }\n    var fr = axe.utils.findBy(collection, 'node', frame);\n    if (!fr) {\n      collection.push({\n        node: frame,\n        include: [],\n        exclude: []\n      });\n    }\n  }\n  function pushUniqueFrameSelector(context, type, selectorArray) {\n    'use strict';\n    context.frames = context.frames || [];\n    var result, frame;\n    var frames = document.querySelectorAll(selectorArray.shift());\n    frameloop: for (var i = 0, l = frames.length; i < l; i++) {\n      frame = frames[i];\n      for (var j = 0, l2 = context.frames.length; j < l2; j++) {\n        if (context.frames[j].node === frame) {\n          context.frames[j][type].push(selectorArray);\n          break frameloop;\n        }\n      }\n      result = {\n        node: frame,\n        include: [],\n        exclude: []\n      };\n      if (selectorArray) {\n        result[type].push(selectorArray);\n      }\n      context.frames.push(result);\n    }\n  }\n  function normalizeContext(context) {\n    'use strict';\n    if (context && (typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' || context instanceof NodeList) {\n      if (context instanceof Node) {\n        return {\n          include: [ context ],\n          exclude: []\n        };\n      }\n      if (context.hasOwnProperty('include') || context.hasOwnProperty('exclude')) {\n        return {\n          include: context.include && +context.include.length ? context.include : [ document ],\n          exclude: context.exclude || []\n        };\n      }\n      if (context.length === +context.length) {\n        return {\n          include: context,\n          exclude: []\n        };\n      }\n    }\n    if (typeof context === 'string') {\n      return {\n        include: [ context ],\n        exclude: []\n      };\n    }\n    return {\n      include: [ document ],\n      exclude: []\n    };\n  }\n  function parseSelectorArray(context, type) {\n    'use strict';\n    var item, result = [], nodeList;\n    for (var i = 0, l = context[type].length; i < l; i++) {\n      item = context[type][i];\n      if (typeof item === 'string') {\n        nodeList = Array.from(document.querySelectorAll(item));\n        result = result.concat(nodeList.map(function(node) {\n          return axe.utils.getNodeFromTree(context.flatTree[0], node);\n        }));\n        break;\n      } else if (item && item.length && !(item instanceof Node)) {\n        if (item.length > 1) {\n          pushUniqueFrameSelector(context, type, item);\n        } else {\n          nodeList = Array.from(document.querySelectorAll(item[0]));\n          result = result.concat(nodeList.map(function(node) {\n            return axe.utils.getNodeFromTree(context.flatTree[0], node);\n          }));\n        }\n      } else if (item instanceof Node) {\n        if (item.documentElement instanceof Node) {\n          result.push(context.flatTree[0]);\n        } else {\n          result.push(axe.utils.getNodeFromTree(context.flatTree[0], item));\n        }\n      }\n    }\n    return result.filter(function(r) {\n      return r;\n    });\n  }\n  function validateContext(context) {\n    'use strict';\n    if (context.include.length === 0) {\n      if (context.frames.length === 0) {\n        var env = axe.utils.respondable.isInFrame() ? 'frame' : 'page';\n        return new Error('No elements found for include in ' + env + ' Context');\n      }\n      context.frames.forEach(function(frame, i) {\n        if (frame.include.length === 0) {\n          return new Error('No elements found for include in Context of frame ' + i);\n        }\n      });\n    }\n  }\n  function getRootNode(_ref) {\n    var include = _ref.include, exclude = _ref.exclude;\n    var selectors = Array.from(include).concat(Array.from(exclude));\n    var localDocument = selectors.reduce(function(result, item) {\n      if (result) {\n        return result;\n      } else if (item instanceof Element) {\n        return item.ownerDocument;\n      } else if (item instanceof Document) {\n        return item;\n      }\n    }, null);\n    return (localDocument || document).documentElement;\n  }\n  function Context(spec) {\n    'use strict';\n    var _this = this;\n    this.frames = [];\n    this.initiator = spec && typeof spec.initiator === 'boolean' ? spec.initiator : true;\n    this.page = false;\n    spec = normalizeContext(spec);\n    this.flatTree = axe.utils.getFlattenedTree(getRootNode(spec));\n    this.exclude = spec.exclude;\n    this.include = spec.include;\n    this.include = parseSelectorArray(this, 'include');\n    this.exclude = parseSelectorArray(this, 'exclude');\n    axe.utils.select('frame, iframe', this).forEach(function(frame) {\n      if (isNodeInContext(frame, _this)) {\n        pushUniqueFrame(_this.frames, frame.actualNode);\n      }\n    });\n    if (this.include.length === 1 && this.include[0].actualNode === document.documentElement) {\n      this.page = true;\n    }\n    var err = validateContext(this);\n    if (err instanceof Error) {\n      throw err;\n    }\n    if (!Array.isArray(this.include)) {\n      this.include = Array.from(this.include);\n    }\n    this.include.sort(axe.utils.nodeSorter);\n  }\n  'use strict';\n  function RuleResult(rule) {\n    'use strict';\n    this.id = rule.id;\n    this.result = axe.constants.NA;\n    this.pageLevel = rule.pageLevel;\n    this.impact = null;\n    this.nodes = [];\n  }\n  'use strict';\n  function Rule(spec, parentAudit) {\n    'use strict';\n    this._audit = parentAudit;\n    this.id = spec.id;\n    this.selector = spec.selector || '*';\n    this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n    this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n    this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n    this.any = spec.any || [];\n    this.all = spec.all || [];\n    this.none = spec.none || [];\n    this.tags = spec.tags || [];\n    if (spec.matches) {\n      this.matches = createExecutionContext(spec.matches);\n    }\n  }\n  Rule.prototype.matches = function() {\n    'use strict';\n    return true;\n  };\n  Rule.prototype.gather = function(context) {\n    'use strict';\n    var elements = axe.utils.select(this.selector, context);\n    if (this.excludeHidden) {\n      return elements.filter(function(element) {\n        return !axe.utils.isHidden(element.actualNode);\n      });\n    }\n    return elements;\n  };\n  Rule.prototype.runChecks = function(type, node, options, resolve, reject) {\n    'use strict';\n    var self = this;\n    var checkQueue = axe.utils.queue();\n    this[type].forEach(function(c) {\n      var check = self._audit.checks[c.id || c];\n      var option = axe.utils.getCheckOption(check, self.id, options);\n      checkQueue.defer(function(res, rej) {\n        check.run(node, option, res, rej);\n      });\n    });\n    checkQueue.then(function(results) {\n      results = results.filter(function(check) {\n        return check;\n      });\n      resolve({\n        type: type,\n        results: results\n      });\n    }).catch(reject);\n  };\n  Rule.prototype.run = function(context, options, resolve, reject) {\n    var _this = this;\n    var q = axe.utils.queue();\n    var ruleResult = new RuleResult(this);\n    var markStart = 'mark_runchecks_start_' + this.id;\n    var markEnd = 'mark_runchecks_end_' + this.id;\n    var nodes = void 0;\n    try {\n      nodes = this.gather(context).filter(function(node) {\n        return _this.matches(node.actualNode, node);\n      });\n    } catch (error) {\n      reject(new SupportError({\n        cause: error,\n        ruleId: this.id\n      }));\n      return;\n    }\n    if (options.performanceTimer) {\n      axe.log('gather (', nodes.length, '):', axe.utils.performanceTimer.timeElapsed() + 'ms');\n      axe.utils.performanceTimer.mark(markStart);\n    }\n    nodes.forEach(function(node) {\n      q.defer(function(resolveNode, rejectNode) {\n        var checkQueue = axe.utils.queue();\n        checkQueue.defer(function(res, rej) {\n          _this.runChecks('any', node, options, res, rej);\n        });\n        checkQueue.defer(function(res, rej) {\n          _this.runChecks('all', node, options, res, rej);\n        });\n        checkQueue.defer(function(res, rej) {\n          _this.runChecks('none', node, options, res, rej);\n        });\n        checkQueue.then(function(results) {\n          if (results.length) {\n            var hasResults = false, result = {};\n            results.forEach(function(r) {\n              var res = r.results.filter(function(result) {\n                return result;\n              });\n              result[r.type] = res;\n              if (res.length) {\n                hasResults = true;\n              }\n            });\n            if (hasResults) {\n              result.node = new axe.utils.DqElement(node.actualNode, options);\n              ruleResult.nodes.push(result);\n            }\n          }\n          resolveNode();\n        }).catch(function(err) {\n          return rejectNode(err);\n        });\n      });\n    });\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.mark(markEnd);\n      axe.utils.performanceTimer.measure('runchecks_' + this.id, markStart, markEnd);\n    }\n    q.then(function() {\n      return resolve(ruleResult);\n    }).catch(function(error) {\n      return reject(error);\n    });\n  };\n  function findAfterChecks(rule) {\n    'use strict';\n    return axe.utils.getAllChecks(rule).map(function(c) {\n      var check = rule._audit.checks[c.id || c];\n      return check && typeof check.after === 'function' ? check : null;\n    }).filter(Boolean);\n  }\n  function findCheckResults(nodes, checkID) {\n    'use strict';\n    var checkResults = [];\n    nodes.forEach(function(nodeResult) {\n      var checks = axe.utils.getAllChecks(nodeResult);\n      checks.forEach(function(checkResult) {\n        if (checkResult.id === checkID) {\n          checkResults.push(checkResult);\n        }\n      });\n    });\n    return checkResults;\n  }\n  function filterChecks(checks) {\n    'use strict';\n    return checks.filter(function(check) {\n      return check.filtered !== true;\n    });\n  }\n  function sanitizeNodes(result) {\n    'use strict';\n    var checkTypes = [ 'any', 'all', 'none' ];\n    var nodes = result.nodes.filter(function(detail) {\n      var length = 0;\n      checkTypes.forEach(function(type) {\n        detail[type] = filterChecks(detail[type]);\n        length += detail[type].length;\n      });\n      return length > 0;\n    });\n    if (result.pageLevel && nodes.length) {\n      nodes = [ nodes.reduce(function(a, b) {\n        if (a) {\n          checkTypes.forEach(function(type) {\n            a[type].push.apply(a[type], b[type]);\n          });\n          return a;\n        }\n      }) ];\n    }\n    return nodes;\n  }\n  Rule.prototype.after = function(result, options) {\n    'use strict';\n    var afterChecks = findAfterChecks(this);\n    var ruleID = this.id;\n    afterChecks.forEach(function(check) {\n      var beforeResults = findCheckResults(result.nodes, check.id);\n      var option = axe.utils.getCheckOption(check, ruleID, options);\n      var afterResults = check.after(beforeResults, option);\n      beforeResults.forEach(function(item) {\n        if (afterResults.indexOf(item) === -1) {\n          item.filtered = true;\n        }\n      });\n    });\n    result.nodes = sanitizeNodes(result);\n    return result;\n  };\n  Rule.prototype.configure = function(spec) {\n    'use strict';\n    if (spec.hasOwnProperty('selector')) {\n      this.selector = spec.selector;\n    }\n    if (spec.hasOwnProperty('excludeHidden')) {\n      this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n    }\n    if (spec.hasOwnProperty('enabled')) {\n      this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n    }\n    if (spec.hasOwnProperty('pageLevel')) {\n      this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n    }\n    if (spec.hasOwnProperty('any')) {\n      this.any = spec.any;\n    }\n    if (spec.hasOwnProperty('all')) {\n      this.all = spec.all;\n    }\n    if (spec.hasOwnProperty('none')) {\n      this.none = spec.none;\n    }\n    if (spec.hasOwnProperty('tags')) {\n      this.tags = spec.tags;\n    }\n    if (spec.hasOwnProperty('matches')) {\n      if (typeof spec.matches === 'string') {\n        this.matches = new Function('return ' + spec.matches + ';')();\n      } else {\n        this.matches = spec.matches;\n      }\n    }\n  };\n  'use strict';\n  (function(axe) {\n    var definitions = [ {\n      name: 'NA',\n      value: 'inapplicable',\n      priority: 0,\n      group: 'inapplicable'\n    }, {\n      name: 'PASS',\n      value: 'passed',\n      priority: 1,\n      group: 'passes'\n    }, {\n      name: 'CANTTELL',\n      value: 'cantTell',\n      priority: 2,\n      group: 'incomplete'\n    }, {\n      name: 'FAIL',\n      value: 'failed',\n      priority: 3,\n      group: 'violations'\n    } ];\n    var constants = {\n      helpUrlBase: 'https://dequeuniversity.com/rules/',\n      results: [],\n      resultGroups: [],\n      resultGroupMap: {},\n      impact: Object.freeze([ 'minor', 'moderate', 'serious', 'critical' ])\n    };\n    definitions.forEach(function(definition) {\n      var name = definition.name;\n      var value = definition.value;\n      var priority = definition.priority;\n      var group = definition.group;\n      constants[name] = value;\n      constants[name + '_PRIO'] = priority;\n      constants[name + '_GROUP'] = group;\n      constants.results[priority] = value;\n      constants.resultGroups[priority] = group;\n      constants.resultGroupMap[value] = group;\n    });\n    Object.freeze(constants.results);\n    Object.freeze(constants.resultGroups);\n    Object.freeze(constants.resultGroupMap);\n    Object.freeze(constants);\n    Object.defineProperty(axe, 'constants', {\n      value: constants,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n  })(axe);\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.log = function() {\n    'use strict';\n    if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' && console.log) {\n      Function.prototype.apply.call(console.log, console, arguments);\n    }\n  };\n  'use strict';\n  function cleanupPlugins(resolve, reject) {\n    'use strict';\n    resolve = resolve || function() {};\n    reject = reject || axe.log;\n    if (!axe._audit) {\n      throw new Error('No audit configured');\n    }\n    var q = axe.utils.queue();\n    var cleanupErrors = [];\n    Object.keys(axe.plugins).forEach(function(key) {\n      q.defer(function(res) {\n        var rej = function rej(err) {\n          cleanupErrors.push(err);\n          res();\n        };\n        try {\n          axe.plugins[key].cleanup(res, rej);\n        } catch (err) {\n          rej(err);\n        }\n      });\n    });\n    var flattenedTree = axe.utils.getFlattenedTree(document.body);\n    axe.utils.querySelectorAll(flattenedTree, 'iframe, frame').forEach(function(node) {\n      q.defer(function(res, rej) {\n        return axe.utils.sendCommandToFrame(node.actualNode, {\n          command: 'cleanup-plugin'\n        }, res, rej);\n      });\n    });\n    q.then(function(results) {\n      if (cleanupErrors.length === 0) {\n        resolve(results);\n      } else {\n        reject(cleanupErrors);\n      }\n    }).catch(reject);\n  }\n  axe.cleanup = cleanupPlugins;\n  'use strict';\n  function configureChecksRulesAndBranding(spec) {\n    'use strict';\n    var audit;\n    audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    if (spec.reporter && (typeof spec.reporter === 'function' || reporters[spec.reporter])) {\n      audit.reporter = spec.reporter;\n    }\n    if (spec.checks) {\n      spec.checks.forEach(function(check) {\n        audit.addCheck(check);\n      });\n    }\n    var modifiedRules = [];\n    if (spec.rules) {\n      spec.rules.forEach(function(rule) {\n        modifiedRules.push(rule.id);\n        audit.addRule(rule);\n      });\n    }\n    if (spec.disableOtherRules) {\n      audit.rules.forEach(function(rule) {\n        if (modifiedRules.includes(rule.id) === false) {\n          rule.enabled = false;\n        }\n      });\n    }\n    if (typeof spec.branding !== 'undefined') {\n      audit.setBranding(spec.branding);\n    } else {\n      audit._constructHelpUrls();\n    }\n    if (spec.tagExclude) {\n      audit.tagExclude = spec.tagExclude;\n    }\n  }\n  axe.configure = configureChecksRulesAndBranding;\n  'use strict';\n  axe.getRules = function(tags) {\n    'use strict';\n    tags = tags || [];\n    var matchingRules = !tags.length ? axe._audit.rules : axe._audit.rules.filter(function(item) {\n      return !!tags.filter(function(tag) {\n        return item.tags.indexOf(tag) !== -1;\n      }).length;\n    });\n    var ruleData = axe._audit.data.rules || {};\n    return matchingRules.map(function(matchingRule) {\n      var rd = ruleData[matchingRule.id] || {};\n      return {\n        ruleId: matchingRule.id,\n        description: rd.description,\n        help: rd.help,\n        helpUrl: rd.helpUrl,\n        tags: matchingRule.tags\n      };\n    });\n  };\n  'use strict';\n  function runCommand(data, keepalive, callback) {\n    'use strict';\n    var resolve = callback;\n    var reject = function reject(err) {\n      if (err instanceof Error === false) {\n        err = new Error(err);\n      }\n      callback(err);\n    };\n    var context = data && data.context || {};\n    if (context.hasOwnProperty('include') && !context.include.length) {\n      context.include = [ document ];\n    }\n    var options = data && data.options || {};\n    switch (data.command) {\n     case 'rules':\n      return runRules(context, options, function(results, cleanup) {\n        resolve(results);\n        cleanup();\n      }, reject);\n\n     case 'cleanup-plugin':\n      return cleanupPlugins(resolve, reject);\n\n     default:\n      if (axe._audit && axe._audit.commands && axe._audit.commands[data.command]) {\n        return axe._audit.commands[data.command](data, callback);\n      }\n    }\n  }\n  axe._load = function(audit) {\n    'use strict';\n    axe.utils.respondable.subscribe('axe.ping', function(data, keepalive, respond) {\n      respond({\n        axe: true\n      });\n    });\n    axe.utils.respondable.subscribe('axe.start', runCommand);\n    axe._audit = new Audit(audit);\n  };\n  'use strict';\n  var axe = axe || {};\n  axe.plugins = {};\n  function Plugin(spec) {\n    'use strict';\n    this._run = spec.run;\n    this._collect = spec.collect;\n    this._registry = {};\n    spec.commands.forEach(function(command) {\n      axe._audit.registerCommand(command);\n    });\n  }\n  Plugin.prototype.run = function() {\n    'use strict';\n    return this._run.apply(this, arguments);\n  };\n  Plugin.prototype.collect = function() {\n    'use strict';\n    return this._collect.apply(this, arguments);\n  };\n  Plugin.prototype.cleanup = function(done) {\n    'use strict';\n    var q = axe.utils.queue();\n    var that = this;\n    Object.keys(this._registry).forEach(function(key) {\n      q.defer(function(done) {\n        that._registry[key].cleanup(done);\n      });\n    });\n    q.then(function() {\n      done();\n    });\n  };\n  Plugin.prototype.add = function(impl) {\n    'use strict';\n    this._registry[impl.id] = impl;\n  };\n  axe.registerPlugin = function(plugin) {\n    'use strict';\n    axe.plugins[plugin.id] = new Plugin(plugin);\n  };\n  'use strict';\n  var reporters = {};\n  var defaultReporter;\n  axe.getReporter = function(reporter) {\n    'use strict';\n    if (typeof reporter === 'string' && reporters[reporter]) {\n      return reporters[reporter];\n    }\n    if (typeof reporter === 'function') {\n      return reporter;\n    }\n    return defaultReporter;\n  };\n  axe.addReporter = function registerReporter(name, cb, isDefault) {\n    'use strict';\n    reporters[name] = cb;\n    if (isDefault) {\n      defaultReporter = cb;\n    }\n  };\n  'use strict';\n  function resetConfiguration() {\n    'use strict';\n    var audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    audit.resetRulesAndChecks();\n  }\n  axe.reset = resetConfiguration;\n  'use strict';\n  function cleanup() {\n    axe._tree = undefined;\n    axe._selectorData = undefined;\n  }\n  function runRules(context, options, resolve, reject) {\n    'use strict';\n    try {\n      context = new Context(context);\n      axe._tree = context.flatTree;\n      axe._selectorData = axe.utils.getSelectorData(context.flatTree);\n    } catch (e) {\n      cleanup();\n      return reject(e);\n    }\n    var q = axe.utils.queue();\n    var audit = axe._audit;\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.auditStart();\n    }\n    if (context.frames.length && options.iframes !== false) {\n      q.defer(function(res, rej) {\n        axe.utils.collectResultsFromFrames(context, options, 'rules', null, res, rej);\n      });\n    }\n    var scrollState = void 0;\n    q.defer(function(res, rej) {\n      if (options.restoreScroll) {\n        scrollState = axe.utils.getScrollState();\n      }\n      audit.run(context, options, res, rej);\n    });\n    q.then(function(data) {\n      try {\n        if (scrollState) {\n          axe.utils.setScrollState(scrollState);\n        }\n        if (options.performanceTimer) {\n          axe.utils.performanceTimer.auditEnd();\n        }\n        var results = axe.utils.mergeResults(data.map(function(results) {\n          return {\n            results: results\n          };\n        }));\n        if (context.initiator) {\n          results = audit.after(results, options);\n          results.forEach(axe.utils.publishMetaData);\n          results = results.map(axe.utils.finalizeRuleResult);\n        }\n        try {\n          resolve(results, cleanup);\n        } catch (e) {\n          cleanup();\n          axe.log(e);\n        }\n      } catch (e) {\n        cleanup();\n        reject(e);\n      }\n    }).catch(function(e) {\n      cleanup();\n      reject(e);\n    });\n  }\n  axe._runRules = runRules;\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function isContext(potential) {\n    'use strict';\n    switch (true) {\n     case typeof potential === 'string':\n     case Array.isArray(potential):\n     case Node && potential instanceof Node:\n     case NodeList && potential instanceof NodeList:\n      return true;\n\n     case (typeof potential === 'undefined' ? 'undefined' : _typeof(potential)) !== 'object':\n      return false;\n\n     case potential.include !== undefined:\n     case potential.exclude !== undefined:\n     case typeof potential.length === 'number':\n      return true;\n\n     default:\n      return false;\n    }\n  }\n  var noop = function noop() {};\n  function normalizeRunParams(context, options, callback) {\n    'use strict';\n    var typeErr = new TypeError('axe.run arguments are invalid');\n    if (!isContext(context)) {\n      if (callback !== undefined) {\n        throw typeErr;\n      }\n      callback = options;\n      options = context;\n      context = document;\n    }\n    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n      if (callback !== undefined) {\n        throw typeErr;\n      }\n      callback = options;\n      options = {};\n    }\n    if (typeof callback !== 'function' && callback !== undefined) {\n      throw typeErr;\n    }\n    return {\n      context: context,\n      options: options,\n      callback: callback || noop\n    };\n  }\n  axe.run = function(context, options, callback) {\n    'use strict';\n    if (!axe._audit) {\n      throw new Error('No audit configured');\n    }\n    var args = normalizeRunParams(context, options, callback);\n    context = args.context;\n    options = args.options;\n    callback = args.callback;\n    options.reporter = options.reporter || axe._audit.reporter || 'v1';\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.start();\n    }\n    var p = void 0;\n    var reject = noop;\n    var resolve = noop;\n    if (window.Promise && callback === noop) {\n      p = new Promise(function(_resolve, _reject) {\n        reject = _reject;\n        resolve = _resolve;\n      });\n    }\n    axe._runRules(context, options, function(rawResults, cleanup) {\n      var respond = function respond(results) {\n        cleanup();\n        try {\n          callback(null, results);\n        } catch (e) {\n          axe.log(e);\n        }\n        resolve(results);\n      };\n      if (options.performanceTimer) {\n        axe.utils.performanceTimer.end();\n      }\n      try {\n        var reporter = axe.getReporter(options.reporter);\n        var results = reporter(rawResults, options, respond);\n        if (results !== undefined) {\n          respond(results);\n        }\n      } catch (err) {\n        cleanup();\n        callback(err);\n        reject(err);\n      }\n    }, function(err) {\n      callback(err);\n      reject(err);\n    });\n    return p;\n  };\n  'use strict';\n  helpers.failureSummary = function failureSummary(nodeData) {\n    'use strict';\n    var failingChecks = {};\n    failingChecks.none = nodeData.none.concat(nodeData.all);\n    failingChecks.any = nodeData.any;\n    return Object.keys(failingChecks).map(function(key) {\n      if (!failingChecks[key].length) {\n        return;\n      }\n      var sum = axe._audit.data.failureSummaries[key];\n      if (sum && typeof sum.failureMessage === 'function') {\n        return sum.failureMessage(failingChecks[key].map(function(check) {\n          return check.message || '';\n        }));\n      }\n    }).filter(function(i) {\n      return i !== undefined;\n    }).join('\\n\\n');\n  };\n  'use strict';\n  helpers.incompleteFallbackMessage = function incompleteFallbackMessage() {\n    'use strict';\n    return axe._audit.data.incompleteFallbackMessage();\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function normalizeRelatedNodes(node, options) {\n    'use strict';\n    [ 'any', 'all', 'none' ].forEach(function(type) {\n      if (!Array.isArray(node[type])) {\n        return;\n      }\n      node[type].filter(function(checkRes) {\n        return Array.isArray(checkRes.relatedNodes);\n      }).forEach(function(checkRes) {\n        checkRes.relatedNodes = checkRes.relatedNodes.map(function(relatedNode) {\n          var res = {\n            html: relatedNode.source\n          };\n          if (options.elementRef && !relatedNode.fromFrame) {\n            res.element = relatedNode.element;\n          }\n          if (options.selectors !== false || relatedNode.fromFrame) {\n            res.target = relatedNode.selector;\n          }\n          if (options.xpath) {\n            res.xpath = relatedNode.xpath;\n          }\n          return res;\n        });\n      });\n    });\n  }\n  var resultKeys = axe.constants.resultGroups;\n  helpers.processAggregate = function(results, options) {\n    var resultObject = axe.utils.aggregateResult(results);\n    resultObject.timestamp = new Date().toISOString();\n    resultObject.url = window.location.href;\n    resultKeys.forEach(function(key) {\n      if (options.resultTypes && !options.resultTypes.includes(key)) {\n        (resultObject[key] || []).forEach(function(ruleResult) {\n          if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n            ruleResult.nodes = [ ruleResult.nodes[0] ];\n          }\n        });\n      }\n      resultObject[key] = (resultObject[key] || []).map(function(ruleResult) {\n        ruleResult = Object.assign({}, ruleResult);\n        if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n          ruleResult.nodes = ruleResult.nodes.map(function(subResult) {\n            if (_typeof(subResult.node) === 'object') {\n              subResult.html = subResult.node.source;\n              if (options.elementRef && !subResult.node.fromFrame) {\n                subResult.element = subResult.node.element;\n              }\n              if (options.selectors !== false || subResult.node.fromFrame) {\n                subResult.target = subResult.node.selector;\n              }\n              if (options.xpath) {\n                subResult.xpath = subResult.node.xpath;\n              }\n            }\n            delete subResult.result;\n            delete subResult.node;\n            normalizeRelatedNodes(subResult, options);\n            return subResult;\n          });\n        }\n        resultKeys.forEach(function(key) {\n          return delete ruleResult[key];\n        });\n        delete ruleResult.pageLevel;\n        delete ruleResult.result;\n        return ruleResult;\n      });\n    });\n    return resultObject;\n  };\n  'use strict';\n  axe.addReporter('na', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback({\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  });\n  'use strict';\n  axe.addReporter('no-passes', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    options.resultTypes = [ 'violations' ];\n    var out = helpers.processAggregate(results, options);\n    callback({\n      violations: out.violations,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  });\n  'use strict';\n  axe.addReporter('raw', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    callback(results);\n  });\n  'use strict';\n  axe.addReporter('v1', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    out.violations.forEach(function(result) {\n      return result.nodes.forEach(function(nodeResult) {\n        nodeResult.failureSummary = helpers.failureSummary(nodeResult);\n      });\n    });\n    callback({\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  });\n  'use strict';\n  axe.addReporter('v2', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback({\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  }, true);\n  'use strict';\n  axe.utils.aggregate = function(map, values, initial) {\n    values = values.slice();\n    if (initial) {\n      values.push(initial);\n    }\n    var sorting = values.map(function(val) {\n      return map.indexOf(val);\n    }).sort();\n    return map[sorting.pop()];\n  };\n  'use strict';\n  var _axe$constants = axe.constants, CANTTELL_PRIO = _axe$constants.CANTTELL_PRIO, FAIL_PRIO = _axe$constants.FAIL_PRIO;\n  var checkMap = [];\n  checkMap[axe.constants.PASS_PRIO] = true;\n  checkMap[axe.constants.CANTTELL_PRIO] = null;\n  checkMap[axe.constants.FAIL_PRIO] = false;\n  var checkTypes = [ 'any', 'all', 'none' ];\n  function anyAllNone(obj, functor) {\n    return checkTypes.reduce(function(out, type) {\n      out[type] = (obj[type] || []).map(function(val) {\n        return functor(val, type);\n      });\n      return out;\n    }, {});\n  }\n  axe.utils.aggregateChecks = function(nodeResOriginal) {\n    var nodeResult = Object.assign({}, nodeResOriginal);\n    anyAllNone(nodeResult, function(check, type) {\n      var i = checkMap.indexOf(check.result);\n      check.priority = i !== -1 ? i : axe.constants.CANTTELL_PRIO;\n      if (type === 'none') {\n        check.priority = 4 - check.priority;\n      }\n    });\n    var priorities = {\n      all: nodeResult.all.reduce(function(a, b) {\n        return Math.max(a, b.priority);\n      }, 0),\n      none: nodeResult.none.reduce(function(a, b) {\n        return Math.max(a, b.priority);\n      }, 0),\n      any: nodeResult.any.reduce(function(a, b) {\n        return Math.min(a, b.priority);\n      }, 4) % 4\n    };\n    nodeResult.priority = Math.max(priorities.all, priorities.none, priorities.any);\n    var impacts = [];\n    checkTypes.forEach(function(type) {\n      nodeResult[type] = nodeResult[type].filter(function(check) {\n        return check.priority === nodeResult.priority && check.priority === priorities[type];\n      });\n      nodeResult[type].forEach(function(check) {\n        return impacts.push(check.impact);\n      });\n    });\n    if ([ CANTTELL_PRIO, FAIL_PRIO ].includes(nodeResult.priority)) {\n      nodeResult.impact = axe.utils.aggregate(axe.constants.impact, impacts);\n    } else {\n      nodeResult.impact = null;\n    }\n    anyAllNone(nodeResult, function(c) {\n      delete c.result;\n      delete c.priority;\n    });\n    nodeResult.result = axe.constants.results[nodeResult.priority];\n    delete nodeResult.priority;\n    return nodeResult;\n  };\n  'use strict';\n  (function() {\n    axe.utils.aggregateNodeResults = function(nodeResults) {\n      var ruleResult = {};\n      nodeResults = nodeResults.map(function(nodeResult) {\n        if (nodeResult.any && nodeResult.all && nodeResult.none) {\n          return axe.utils.aggregateChecks(nodeResult);\n        } else if (Array.isArray(nodeResult.node)) {\n          return axe.utils.finalizeRuleResult(nodeResult);\n        } else {\n          throw new TypeError('Invalid Result type');\n        }\n      });\n      if (nodeResults && nodeResults.length) {\n        var resultList = nodeResults.map(function(node) {\n          return node.result;\n        });\n        ruleResult.result = axe.utils.aggregate(axe.constants.results, resultList, ruleResult.result);\n      } else {\n        ruleResult.result = 'inapplicable';\n      }\n      axe.constants.resultGroups.forEach(function(group) {\n        return ruleResult[group] = [];\n      });\n      nodeResults.forEach(function(nodeResult) {\n        var groupName = axe.constants.resultGroupMap[nodeResult.result];\n        ruleResult[groupName].push(nodeResult);\n      });\n      var impactGroup = axe.constants.FAIL_GROUP;\n      if (ruleResult[impactGroup].length === 0) {\n        impactGroup = axe.constants.CANTTELL_GROUP;\n      }\n      if (ruleResult[impactGroup].length > 0) {\n        var impactList = ruleResult[impactGroup].map(function(failure) {\n          return failure.impact;\n        });\n        ruleResult.impact = axe.utils.aggregate(axe.constants.impact, impactList) || null;\n      } else {\n        ruleResult.impact = null;\n      }\n      return ruleResult;\n    };\n  })();\n  'use strict';\n  function copyToGroup(resultObject, subResult, group) {\n    var resultCopy = Object.assign({}, subResult);\n    resultCopy.nodes = (resultCopy[group] || []).concat();\n    axe.constants.resultGroups.forEach(function(group) {\n      delete resultCopy[group];\n    });\n    resultObject[group].push(resultCopy);\n  }\n  axe.utils.aggregateResult = function(results) {\n    var resultObject = {};\n    axe.constants.resultGroups.forEach(function(groupName) {\n      return resultObject[groupName] = [];\n    });\n    results.forEach(function(subResult) {\n      if (subResult.error) {\n        copyToGroup(resultObject, subResult, axe.constants.CANTTELL_GROUP);\n      } else if (subResult.result === axe.constants.NA) {\n        copyToGroup(resultObject, subResult, axe.constants.NA_GROUP);\n      } else {\n        axe.constants.resultGroups.forEach(function(group) {\n          if (Array.isArray(subResult[group]) && subResult[group].length > 0) {\n            copyToGroup(resultObject, subResult, group);\n          }\n        });\n      }\n    });\n    return resultObject;\n  };\n  'use strict';\n  function areStylesSet(el, styles, stopAt) {\n    'use strict';\n    var styl = window.getComputedStyle(el, null);\n    var set = false;\n    if (!styl) {\n      return false;\n    }\n    styles.forEach(function(att) {\n      if (styl.getPropertyValue(att.property) === att.value) {\n        set = true;\n      }\n    });\n    if (set) {\n      return true;\n    }\n    if (el.nodeName.toUpperCase() === stopAt.toUpperCase() || !el.parentNode) {\n      return false;\n    }\n    return areStylesSet(el.parentNode, styles, stopAt);\n  }\n  axe.utils.areStylesSet = areStylesSet;\n  'use strict';\n  axe.utils.checkHelper = function checkHelper(checkResult, options, resolve, reject) {\n    'use strict';\n    return {\n      isAsync: false,\n      async: function async() {\n        this.isAsync = true;\n        return function(result) {\n          if (result instanceof Error === false) {\n            checkResult.result = result;\n            resolve(checkResult);\n          } else {\n            reject(result);\n          }\n        };\n      },\n      data: function data(_data) {\n        checkResult.data = _data;\n      },\n      relatedNodes: function relatedNodes(nodes) {\n        nodes = nodes instanceof Node ? [ nodes ] : axe.utils.toArray(nodes);\n        checkResult.relatedNodes = nodes.map(function(element) {\n          return new axe.utils.DqElement(element, options);\n        });\n      }\n    };\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.utils.clone = function(obj) {\n    'use strict';\n    var index, length, out = obj;\n    if (obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n      if (Array.isArray(obj)) {\n        out = [];\n        for (index = 0, length = obj.length; index < length; index++) {\n          out[index] = axe.utils.clone(obj[index]);\n        }\n      } else {\n        out = {};\n        for (index in obj) {\n          out[index] = axe.utils.clone(obj[index]);\n        }\n      }\n    }\n    return out;\n  };\n  'use strict';\n  function err(message, node) {\n    'use strict';\n    var selector;\n    if (axe._tree) {\n      selector = axe.utils.getSelector(node);\n    }\n    return new Error(message + ': ' + (selector || node));\n  }\n  axe.utils.sendCommandToFrame = function(node, parameters, resolve, reject) {\n    'use strict';\n    var win = node.contentWindow;\n    if (!win) {\n      axe.log('Frame does not have a content window', node);\n      resolve(null);\n      return;\n    }\n    var timeout = setTimeout(function() {\n      timeout = setTimeout(function() {\n        if (!parameters.debug) {\n          resolve(null);\n        } else {\n          reject(err('No response from frame', node));\n        }\n      }, 0);\n    }, 500);\n    axe.utils.respondable(win, 'axe.ping', null, undefined, function() {\n      clearTimeout(timeout);\n      var frameWaitTime = parameters.options && parameters.options.frameWaitTime || 6e4;\n      timeout = setTimeout(function() {\n        reject(err('Axe in frame timed out', node));\n      }, frameWaitTime);\n      axe.utils.respondable(win, 'axe.start', parameters, undefined, function(data) {\n        clearTimeout(timeout);\n        if (data instanceof Error === false) {\n          resolve(data);\n        } else {\n          reject(data);\n        }\n      });\n    });\n  };\n  function collectResultsFromFrames(context, options, command, parameter, resolve, reject) {\n    'use strict';\n    var q = axe.utils.queue();\n    var frames = context.frames;\n    frames.forEach(function(frame) {\n      var params = {\n        options: options,\n        command: command,\n        parameter: parameter,\n        context: {\n          initiator: false,\n          page: context.page,\n          include: frame.include || [],\n          exclude: frame.exclude || []\n        }\n      };\n      q.defer(function(res, rej) {\n        var node = frame.node;\n        axe.utils.sendCommandToFrame(node, params, function(data) {\n          if (data) {\n            return res({\n              results: data,\n              frameElement: node,\n              frame: axe.utils.getSelector(node)\n            });\n          }\n          res(null);\n        }, rej);\n      });\n    });\n    q.then(function(data) {\n      resolve(axe.utils.mergeResults(data, options));\n    }).catch(reject);\n  }\n  axe.utils.collectResultsFromFrames = collectResultsFromFrames;\n  'use strict';\n  axe.utils.contains = function(node, otherNode) {\n    'use strict';\n    function containsShadowChild(node, otherNode) {\n      if (node.shadowId === otherNode.shadowId) {\n        return true;\n      }\n      return !!node.children.find(function(child) {\n        return containsShadowChild(child, otherNode);\n      });\n    }\n    if (node.shadowId || otherNode.shadowId) {\n      return containsShadowChild(node, otherNode);\n    }\n    if (typeof node.actualNode.contains === 'function') {\n      return node.actualNode.contains(otherNode.actualNode);\n    }\n    return !!(node.actualNode.compareDocumentPosition(otherNode.actualNode) & 16);\n  };\n  'use strict';\n  (function(axe) {\n    /*!\n  * The copyright below covers the code within this function block only\n  *\n  * Copyright (c) 2013 Dulin Marat\n  * \n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  * \n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  * \n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n    function CssSelectorParser() {\n      this.pseudos = {};\n      this.attrEqualityMods = {};\n      this.ruleNestingOperators = {};\n      this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function(name) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        name = arguments[j];\n        this.pseudos[name] = 'selector';\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function(name) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        name = arguments[j];\n        delete this.pseudos[name];\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function(name) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        name = arguments[j];\n        this.pseudos[name] = 'numeric';\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function(name) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        name = arguments[j];\n        delete this.pseudos[name];\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function(operator) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        operator = arguments[j];\n        this.ruleNestingOperators[operator] = true;\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function(operator) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        operator = arguments[j];\n        delete this.ruleNestingOperators[operator];\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function(mod) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        mod = arguments[j];\n        this.attrEqualityMods[mod] = true;\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function(mod) {\n      for (var j = 0, len = arguments.length; j < len; j++) {\n        mod = arguments[j];\n        delete this.attrEqualityMods[mod];\n      }\n      return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function() {\n      this.substitutesEnabled = true;\n      return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function() {\n      this.substitutesEnabled = false;\n      return this;\n    };\n    function isIdentStart(c) {\n      return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '-' || c === '_';\n    }\n    function isIdent(c) {\n      return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '-' || c === '_';\n    }\n    function isHex(c) {\n      return c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F' || c >= '0' && c <= '9';\n    }\n    function isDecimal(c) {\n      return c >= '0' && c <= '9';\n    }\n    function isAttrMatchOperator(chr) {\n      return chr === '=' || chr === '^' || chr === '$' || chr === '*' || chr === '~';\n    }\n    var identSpecialChars = {\n      '!': true,\n      '\"': true,\n      '#': true,\n      $: true,\n      '%': true,\n      '&': true,\n      '\\'': true,\n      '(': true,\n      ')': true,\n      '*': true,\n      '+': true,\n      ',': true,\n      '.': true,\n      '/': true,\n      ';': true,\n      '<': true,\n      '=': true,\n      '>': true,\n      '?': true,\n      '@': true,\n      '[': true,\n      '\\\\': true,\n      ']': true,\n      '^': true,\n      '`': true,\n      '{': true,\n      '|': true,\n      '}': true,\n      '~': true\n    };\n    var strReplacementsRev = {\n      '\\n': '\\\\n',\n      '\\r': '\\\\r',\n      '\\t': '\\\\t',\n      '\\f': '\\\\f',\n      '\\v': '\\\\v'\n    };\n    var singleQuoteEscapeChars = {\n      n: '\\n',\n      r: '\\r',\n      t: '\\t',\n      f: '\\f',\n      '\\\\': '\\\\',\n      '\\'': '\\''\n    };\n    var doubleQuotesEscapeChars = {\n      n: '\\n',\n      r: '\\r',\n      t: '\\t',\n      f: '\\f',\n      '\\\\': '\\\\',\n      '\"': '\"'\n    };\n    function ParseContext(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n      var chr, getIdent, getStr, l, skipWhitespace;\n      l = str.length;\n      chr = null;\n      getStr = function getStr(quote, escapeTable) {\n        var esc, hex, result;\n        result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n          if (chr === quote) {\n            pos++;\n            return result;\n          } else if (chr === '\\\\') {\n            pos++;\n            chr = str.charAt(pos);\n            if (chr === quote) {\n              result += quote;\n            } else if (esc = escapeTable[chr]) {\n              result += esc;\n            } else if (isHex(chr)) {\n              hex = chr;\n              pos++;\n              chr = str.charAt(pos);\n              while (isHex(chr)) {\n                hex += chr;\n                pos++;\n                chr = str.charAt(pos);\n              }\n              if (chr === ' ') {\n                pos++;\n                chr = str.charAt(pos);\n              }\n              result += String.fromCharCode(parseInt(hex, 16));\n              continue;\n            } else {\n              result += chr;\n            }\n          } else {\n            result += chr;\n          }\n          pos++;\n          chr = str.charAt(pos);\n        }\n        return result;\n      };\n      getIdent = function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n          if (isIdent(chr)) {\n            result += chr;\n          } else if (chr === '\\\\') {\n            pos++;\n            if (pos >= l) {\n              throw Error('Expected symbol but end of file reached.');\n            }\n            chr = str.charAt(pos);\n            if (identSpecialChars[chr]) {\n              result += chr;\n            } else if (isHex(chr)) {\n              var hex = chr;\n              pos++;\n              chr = str.charAt(pos);\n              while (isHex(chr)) {\n                hex += chr;\n                pos++;\n                chr = str.charAt(pos);\n              }\n              if (chr === ' ') {\n                pos++;\n                chr = str.charAt(pos);\n              }\n              result += String.fromCharCode(parseInt(hex, 16));\n              continue;\n            } else {\n              result += chr;\n            }\n          } else {\n            return result;\n          }\n          pos++;\n          chr = str.charAt(pos);\n        }\n        return result;\n      };\n      skipWhitespace = function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === '\\t' || chr === '\\n' || chr === '\\r' || chr === '\\f') {\n          result = true;\n          pos++;\n          chr = str.charAt(pos);\n        }\n        return result;\n      };\n      this.parse = function() {\n        var res = this.parseSelector();\n        if (pos < l) {\n          throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n      };\n      this.parseSelector = function() {\n        var res;\n        var selector = res = this.parseSingleSelector();\n        chr = str.charAt(pos);\n        while (chr === ',') {\n          pos++;\n          skipWhitespace();\n          if (res.type !== 'selectors') {\n            res = {\n              type: 'selectors',\n              selectors: [ selector ]\n            };\n          }\n          selector = this.parseSingleSelector();\n          if (!selector) {\n            throw Error('Rule expected after \",\".');\n          }\n          res.selectors.push(selector);\n        }\n        return res;\n      };\n      this.parseSingleSelector = function() {\n        skipWhitespace();\n        var selector = {\n          type: 'ruleSet'\n        };\n        var rule = this.parseRule();\n        if (!rule) {\n          return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n          rule.type = 'rule';\n          currentRule.rule = rule;\n          currentRule = rule;\n          skipWhitespace();\n          chr = str.charAt(pos);\n          if (pos >= l || chr === ',' || chr === ')') {\n            break;\n          }\n          if (ruleNestingOperators[chr]) {\n            var op = chr;\n            pos++;\n            skipWhitespace();\n            rule = this.parseRule();\n            if (!rule) {\n              throw Error('Rule expected after \"' + op + '\".');\n            }\n            rule.nestingOperator = op;\n          } else {\n            rule = this.parseRule();\n            if (rule) {\n              rule.nestingOperator = null;\n            }\n          }\n        }\n        return selector;\n      };\n      this.parseRule = function() {\n        var rule = null;\n        while (pos < l) {\n          chr = str.charAt(pos);\n          if (chr === '*') {\n            pos++;\n            (rule = rule || {}).tagName = '*';\n          } else if (isIdentStart(chr) || chr === '\\\\') {\n            (rule = rule || {}).tagName = getIdent();\n          } else if (chr === '.') {\n            pos++;\n            rule = rule || {};\n            (rule.classNames = rule.classNames || []).push(getIdent());\n          } else if (chr === '#') {\n            pos++;\n            (rule = rule || {}).id = getIdent();\n          } else if (chr === '[') {\n            pos++;\n            skipWhitespace();\n            var attr = {\n              name: getIdent()\n            };\n            skipWhitespace();\n            if (chr === ']') {\n              pos++;\n            } else {\n              var operator = '';\n              if (attrEqualityMods[chr]) {\n                operator = chr;\n                pos++;\n                chr = str.charAt(pos);\n              }\n              if (pos >= l) {\n                throw Error('Expected \"=\" but end of file reached.');\n              }\n              if (chr !== '=') {\n                throw Error('Expected \"=\" but \"' + chr + '\" found.');\n              }\n              attr.operator = operator + '=';\n              pos++;\n              skipWhitespace();\n              var attrValue = '';\n              attr.valueType = 'string';\n              if (chr === '\"') {\n                attrValue = getStr('\"', doubleQuotesEscapeChars);\n              } else if (chr === '\\'') {\n                attrValue = getStr('\\'', singleQuoteEscapeChars);\n              } else if (substitutesEnabled && chr === '$') {\n                pos++;\n                attrValue = getIdent();\n                attr.valueType = 'substitute';\n              } else {\n                while (pos < l) {\n                  if (chr === ']') {\n                    break;\n                  }\n                  attrValue += chr;\n                  pos++;\n                  chr = str.charAt(pos);\n                }\n                attrValue = attrValue.trim();\n              }\n              skipWhitespace();\n              if (pos >= l) {\n                throw Error('Expected \"]\" but end of file reached.');\n              }\n              if (chr !== ']') {\n                throw Error('Expected \"]\" but \"' + chr + '\" found.');\n              }\n              pos++;\n              attr.value = attrValue;\n            }\n            rule = rule || {};\n            (rule.attrs = rule.attrs || []).push(attr);\n          } else if (chr === ':') {\n            pos++;\n            var pseudoName = getIdent();\n            var pseudo = {\n              name: pseudoName\n            };\n            if (chr === '(') {\n              pos++;\n              var value = '';\n              skipWhitespace();\n              if (pseudos[pseudoName] === 'selector') {\n                pseudo.valueType = 'selector';\n                value = this.parseSelector();\n              } else {\n                pseudo.valueType = pseudos[pseudoName] || 'string';\n                if (chr === '\"') {\n                  value = getStr('\"', doubleQuotesEscapeChars);\n                } else if (chr === '\\'') {\n                  value = getStr('\\'', singleQuoteEscapeChars);\n                } else if (substitutesEnabled && chr === '$') {\n                  pos++;\n                  value = getIdent();\n                  pseudo.valueType = 'substitute';\n                } else {\n                  while (pos < l) {\n                    if (chr === ')') {\n                      break;\n                    }\n                    value += chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                  }\n                  value = value.trim();\n                }\n                skipWhitespace();\n              }\n              if (pos >= l) {\n                throw Error('Expected \")\" but end of file reached.');\n              }\n              if (chr !== ')') {\n                throw Error('Expected \")\" but \"' + chr + '\" found.');\n              }\n              pos++;\n              pseudo.value = value;\n            }\n            rule = rule || {};\n            (rule.pseudos = rule.pseudos || []).push(pseudo);\n          } else {\n            break;\n          }\n        }\n        return rule;\n      };\n      return this;\n    }\n    CssSelectorParser.prototype.parse = function(str) {\n      var context = new ParseContext(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n      return context.parse();\n    };\n    CssSelectorParser.prototype.escapeIdentifier = function(s) {\n      var result = '';\n      var i = 0;\n      var len = s.length;\n      while (i < len) {\n        var chr = s.charAt(i);\n        if (identSpecialChars[chr]) {\n          result += '\\\\' + chr;\n        } else {\n          if (!(chr === '_' || chr === '-' || chr >= 'A' && chr <= 'Z' || chr >= 'a' && chr <= 'z' || i !== 0 && chr >= '0' && chr <= '9')) {\n            var charCode = chr.charCodeAt(0);\n            if ((charCode & 63488) === 55296) {\n              var extraCharCode = s.charCodeAt(i++);\n              if ((charCode & 64512) !== 55296 || (extraCharCode & 64512) !== 56320) {\n                throw Error('UCS-2(decode): illegal sequence');\n              }\n              charCode = ((charCode & 1023) << 10) + (extraCharCode & 1023) + 65536;\n            }\n            result += '\\\\' + charCode.toString(16) + ' ';\n          } else {\n            result += chr;\n          }\n        }\n        i++;\n      }\n      return result;\n    };\n    CssSelectorParser.prototype.escapeStr = function(s) {\n      var result = '';\n      var i = 0;\n      var len = s.length;\n      var chr, replacement;\n      while (i < len) {\n        chr = s.charAt(i);\n        if (chr === '\"') {\n          chr = '\\\\\"';\n        } else if (chr === '\\\\') {\n          chr = '\\\\\\\\';\n        } else if (replacement = strReplacementsRev[chr]) {\n          chr = replacement;\n        }\n        result += chr;\n        i++;\n      }\n      return '\"' + result + '\"';\n    };\n    CssSelectorParser.prototype.render = function(path) {\n      return this._renderEntity(path).trim();\n    };\n    CssSelectorParser.prototype._renderEntity = function(entity) {\n      var currentEntity, parts, res;\n      res = '';\n      switch (entity.type) {\n       case 'ruleSet':\n        currentEntity = entity.rule;\n        parts = [];\n        while (currentEntity) {\n          if (currentEntity.nestingOperator) {\n            parts.push(currentEntity.nestingOperator);\n          }\n          parts.push(this._renderEntity(currentEntity));\n          currentEntity = currentEntity.rule;\n        }\n        res = parts.join(' ');\n        break;\n\n       case 'selectors':\n        res = entity.selectors.map(this._renderEntity, this).join(', ');\n        break;\n\n       case 'rule':\n        if (entity.tagName) {\n          if (entity.tagName === '*') {\n            res = '*';\n          } else {\n            res = this.escapeIdentifier(entity.tagName);\n          }\n        }\n        if (entity.id) {\n          res += '#' + this.escapeIdentifier(entity.id);\n        }\n        if (entity.classNames) {\n          res += entity.classNames.map(function(cn) {\n            return '.' + this.escapeIdentifier(cn);\n          }, this).join('');\n        }\n        if (entity.attrs) {\n          res += entity.attrs.map(function(attr) {\n            if (attr.operator) {\n              if (attr.valueType === 'substitute') {\n                return '[' + this.escapeIdentifier(attr.name) + attr.operator + '$' + attr.value + ']';\n              } else {\n                return '[' + this.escapeIdentifier(attr.name) + attr.operator + this.escapeStr(attr.value) + ']';\n              }\n            } else {\n              return '[' + this.escapeIdentifier(attr.name) + ']';\n            }\n          }, this).join('');\n        }\n        if (entity.pseudos) {\n          res += entity.pseudos.map(function(pseudo) {\n            if (pseudo.valueType) {\n              if (pseudo.valueType === 'selector') {\n                return ':' + this.escapeIdentifier(pseudo.name) + '(' + this._renderEntity(pseudo.value) + ')';\n              } else if (pseudo.valueType === 'substitute') {\n                return ':' + this.escapeIdentifier(pseudo.name) + '($' + pseudo.value + ')';\n              } else if (pseudo.valueType === 'numeric') {\n                return ':' + this.escapeIdentifier(pseudo.name) + '(' + pseudo.value + ')';\n              } else {\n                return ':' + this.escapeIdentifier(pseudo.name) + '(' + this.escapeIdentifier(pseudo.value) + ')';\n              }\n            } else {\n              return ':' + this.escapeIdentifier(pseudo.name);\n            }\n          }, this).join('');\n        }\n        break;\n\n       default:\n        throw Error('Unknown entity type: \"' + entity.type(+'\".'));\n      }\n      return res;\n    };\n    var parser = new CssSelectorParser();\n    parser.registerNestingOperators('>');\n    axe.utils.cssParser = parser;\n  })(axe);\n  'use strict';\n  function truncate(str, maxLength) {\n    maxLength = maxLength || 300;\n    if (str.length > maxLength) {\n      var index = str.indexOf('>');\n      str = str.substring(0, index + 1);\n    }\n    return str;\n  }\n  function getSource(element) {\n    var source = element.outerHTML;\n    if (!source && typeof XMLSerializer === 'function') {\n      source = new XMLSerializer().serializeToString(element);\n    }\n    return truncate(source || '');\n  }\n  function DqElement(element, options, spec) {\n    this._fromFrame = !!spec;\n    this.spec = spec || {};\n    if (options && options.absolutePaths) {\n      this._options = {\n        toRoot: true\n      };\n    }\n    this.source = this.spec.source !== undefined ? this.spec.source : getSource(element);\n    this._element = element;\n  }\n  DqElement.prototype = {\n    get selector() {\n      return this.spec.selector || [ axe.utils.getSelector(this.element, this._options) ];\n    },\n    get xpath() {\n      return this.spec.xpath || [ axe.utils.getXpath(this.element) ];\n    },\n    get element() {\n      return this._element;\n    },\n    get fromFrame() {\n      return this._fromFrame;\n    },\n    toJSON: function toJSON() {\n      'use strict';\n      return {\n        selector: this.selector,\n        source: this.source,\n        xpath: this.xpath\n      };\n    }\n  };\n  DqElement.fromFrame = function(node, options, frame) {\n    node.selector.unshift(frame.selector);\n    node.xpath.unshift(frame.xpath);\n    return new axe.utils.DqElement(frame.element, options, node);\n  };\n  axe.utils.DqElement = DqElement;\n  'use strict';\n  axe.utils.matchesSelector = function() {\n    'use strict';\n    var method;\n    function getMethod(win) {\n      var index, candidate, elProto = win.Element.prototype, candidates = [ 'matches', 'matchesSelector', 'mozMatchesSelector', 'webkitMatchesSelector', 'msMatchesSelector' ], length = candidates.length;\n      for (index = 0; index < length; index++) {\n        candidate = candidates[index];\n        if (elProto[candidate]) {\n          return candidate;\n        }\n      }\n    }\n    return function(node, selector) {\n      if (!method || !node[method]) {\n        method = getMethod(node.ownerDocument.defaultView);\n      }\n      return node[method](selector);\n    };\n  }();\n  'use strict';\n  axe.utils.escapeSelector = function(value) {\n    'use strict';\n    var string = String(value);\n    var length = string.length;\n    var index = -1;\n    var codeUnit;\n    var result = '';\n    var firstCodeUnit = string.charCodeAt(0);\n    while (++index < length) {\n      codeUnit = string.charCodeAt(index);\n      if (codeUnit == 0) {\n        throw new Error('INVALID_CHARACTER_ERR');\n      }\n      if (codeUnit >= 1 && codeUnit <= 31 || codeUnit >= 127 && codeUnit <= 159 || index == 0 && codeUnit >= 48 && codeUnit <= 57 || index == 1 && codeUnit >= 48 && codeUnit <= 57 && firstCodeUnit == 45) {\n        result += '\\\\' + codeUnit.toString(16) + ' ';\n        continue;\n      }\n      if (index == 1 && codeUnit == 45 && firstCodeUnit == 45) {\n        result += '\\\\' + string.charAt(index);\n        continue;\n      }\n      if (codeUnit >= 128 || codeUnit == 45 || codeUnit == 95 || codeUnit >= 48 && codeUnit <= 57 || codeUnit >= 65 && codeUnit <= 90 || codeUnit >= 97 && codeUnit <= 122) {\n        result += string.charAt(index);\n        continue;\n      }\n      result += '\\\\' + string.charAt(index);\n    }\n    return result;\n  };\n  'use strict';\n  axe.utils.extendMetaData = function(to, from) {\n    Object.assign(to, from);\n    Object.keys(from).filter(function(prop) {\n      return typeof from[prop] === 'function';\n    }).forEach(function(prop) {\n      to[prop] = null;\n      try {\n        to[prop] = from[prop](to);\n      } catch (e) {}\n    });\n  };\n  'use strict';\n  axe.utils.finalizeRuleResult = function(ruleResult) {\n    Object.assign(ruleResult, axe.utils.aggregateNodeResults(ruleResult.nodes));\n    delete ruleResult.nodes;\n    return ruleResult;\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.utils.findBy = function(array, key, value) {\n    if (Array.isArray(array)) {\n      return array.find(function(obj) {\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj[key] === value;\n      });\n    }\n  };\n  'use strict';\n  var axe = axe || {\n    utils: {}\n  };\n  function virtualDOMfromNode(node, shadowId) {\n    return {\n      shadowId: shadowId,\n      children: [],\n      actualNode: node\n    };\n  }\n  function getSlotChildren(node) {\n    var retVal = [];\n    node = node.firstChild;\n    while (node) {\n      retVal.push(node);\n      node = node.nextSibling;\n    }\n    return retVal;\n  }\n  axe.utils.getFlattenedTree = function(node, shadowId) {\n    var retVal, realArray, nodeName;\n    function reduceShadowDOM(res, child) {\n      var replacements = axe.utils.getFlattenedTree(child, shadowId);\n      if (replacements) {\n        res = res.concat(replacements);\n      }\n      return res;\n    }\n    if (node.documentElement) {\n      node = node.documentElement;\n    }\n    nodeName = node.nodeName.toLowerCase();\n    if (axe.utils.isShadowRoot(node)) {\n      retVal = virtualDOMfromNode(node, shadowId);\n      shadowId = 'a' + Math.random().toString().substring(2);\n      realArray = Array.from(node.shadowRoot.childNodes);\n      retVal.children = realArray.reduce(reduceShadowDOM, []);\n      return [ retVal ];\n    } else {\n      if (nodeName === 'content') {\n        realArray = Array.from(node.getDistributedNodes());\n        return realArray.reduce(reduceShadowDOM, []);\n      } else if (nodeName === 'slot') {\n        realArray = Array.from(node.assignedNodes());\n        if (!realArray.length) {\n          realArray = getSlotChildren(node);\n        }\n        var styl = window.getComputedStyle(node);\n        if (false && styl.display !== 'contents') {\n          retVal = virtualDOMfromNode(node, shadowId);\n          retVal.children = realArray.reduce(reduceShadowDOM, []);\n          return [ retVal ];\n        } else {\n          return realArray.reduce(reduceShadowDOM, []);\n        }\n      } else {\n        if (node.nodeType === 1) {\n          retVal = virtualDOMfromNode(node, shadowId);\n          realArray = Array.from(node.childNodes);\n          retVal.children = realArray.reduce(reduceShadowDOM, []);\n          return [ retVal ];\n        } else if (node.nodeType === 3) {\n          return [ virtualDOMfromNode(node) ];\n        }\n        return undefined;\n      }\n    }\n  };\n  axe.utils.getNodeFromTree = function(vNode, node) {\n    var found;\n    if (vNode.actualNode === node) {\n      return vNode;\n    }\n    vNode.children.forEach(function(candidate) {\n      var retVal;\n      if (candidate.actualNode === node) {\n        found = candidate;\n      } else {\n        retVal = axe.utils.getNodeFromTree(candidate, node);\n        if (retVal) {\n          found = retVal;\n        }\n      }\n    });\n    return found;\n  };\n  'use strict';\n  axe.utils.getAllChecks = function getAllChecks(object) {\n    'use strict';\n    var result = [];\n    return result.concat(object.any || []).concat(object.all || []).concat(object.none || []);\n  };\n  'use strict';\n  axe.utils.getCheckOption = function(check, ruleID, options) {\n    var ruleCheckOption = ((options.rules && options.rules[ruleID] || {}).checks || {})[check.id];\n    var checkOption = (options.checks || {})[check.id];\n    var enabled = check.enabled;\n    var opts = check.options;\n    if (checkOption) {\n      if (checkOption.hasOwnProperty('enabled')) {\n        enabled = checkOption.enabled;\n      }\n      if (checkOption.hasOwnProperty('options')) {\n        opts = checkOption.options;\n      }\n    }\n    if (ruleCheckOption) {\n      if (ruleCheckOption.hasOwnProperty('enabled')) {\n        enabled = ruleCheckOption.enabled;\n      }\n      if (ruleCheckOption.hasOwnProperty('options')) {\n        opts = ruleCheckOption.options;\n      }\n    }\n    return {\n      enabled: enabled,\n      options: opts,\n      absolutePaths: options.absolutePaths\n    };\n  };\n  'use strict';\n  var _slicedToArray = function() {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) {\n            break;\n          }\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i['return']) {\n            _i['return']();\n          }\n        } finally {\n          if (_d) {\n            throw _e;\n          }\n        }\n      }\n      return _arr;\n    }\n    return function(arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError('Invalid attempt to destructure non-iterable instance');\n      }\n    };\n  }();\n  function isMostlyNumbers() {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return str.length !== 0 && (str.match(/[0-9]/g) || '').length >= str.length / 2;\n  }\n  function splitString(str, splitIndex) {\n    return [ str.substring(0, splitIndex), str.substring(splitIndex) ];\n  }\n  function uriParser(url) {\n    var original = url;\n    var protocol = '', domain = '', port = '', path = '', query = '', hash = '';\n    if (url.includes('#')) {\n      var _splitString = splitString(url, url.indexOf('#'));\n      var _splitString2 = _slicedToArray(_splitString, 2);\n      url = _splitString2[0];\n      hash = _splitString2[1];\n    }\n    if (url.includes('?')) {\n      var _splitString3 = splitString(url, url.indexOf('?'));\n      var _splitString4 = _slicedToArray(_splitString3, 2);\n      url = _splitString4[0];\n      query = _splitString4[1];\n    }\n    if (url.includes('://')) {\n      var _url$split = url.split('://');\n      var _url$split2 = _slicedToArray(_url$split, 2);\n      protocol = _url$split2[0];\n      url = _url$split2[1];\n      var _splitString5 = splitString(url, url.indexOf('/'));\n      var _splitString6 = _slicedToArray(_splitString5, 2);\n      domain = _splitString6[0];\n      url = _splitString6[1];\n    } else if (url.substr(0, 2) === '//') {\n      url = url.substr(2);\n      var _splitString7 = splitString(url, url.indexOf('/'));\n      var _splitString8 = _slicedToArray(_splitString7, 2);\n      domain = _splitString8[0];\n      url = _splitString8[1];\n    }\n    if (domain.substr(0, 4) === 'www.') {\n      domain = domain.substr(4);\n    }\n    if (domain && domain.includes(':')) {\n      var _splitString9 = splitString(domain, domain.indexOf(':'));\n      var _splitString10 = _slicedToArray(_splitString9, 2);\n      domain = _splitString10[0];\n      port = _splitString10[1];\n    }\n    path = url;\n    return {\n      original: original,\n      protocol: protocol,\n      domain: domain,\n      port: port,\n      path: path,\n      query: query,\n      hash: hash\n    };\n  }\n  axe.utils.getFriendlyUriEnd = function getFriendlyUriEnd() {\n    var uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (uri.length <= 1 || uri.substr(0, 5) === 'data:' || uri.substr(0, 11) === 'javascript:' || uri.includes('?')) {\n      return;\n    }\n    var currentDomain = options.currentDomain, _options$maxLength = options.maxLength, maxLength = _options$maxLength === undefined ? 25 : _options$maxLength;\n    var _uriParser = uriParser(uri), path = _uriParser.path, domain = _uriParser.domain, hash = _uriParser.hash;\n    var pathEnd = path.substr(path.substr(0, path.length - 2).lastIndexOf('/') + 1);\n    if (hash) {\n      if (pathEnd && (pathEnd + hash).length <= maxLength) {\n        return pathEnd + hash;\n      } else if (pathEnd.length < 2 && hash.length > 2 && hash.length <= maxLength) {\n        return hash;\n      } else {\n        return;\n      }\n    } else if (domain && domain.length < maxLength && path.length <= 1) {\n      return domain + path;\n    }\n    if (path === '/' + pathEnd && domain && currentDomain && domain !== currentDomain && (domain + path).length <= maxLength) {\n      return domain + path;\n    }\n    var lastDotIndex = pathEnd.lastIndexOf('.');\n    if ((lastDotIndex === -1 || lastDotIndex > 1) && (lastDotIndex !== -1 || pathEnd.length > 2) && pathEnd.length <= maxLength && !pathEnd.match(/index(\\.[a-zA-Z]{2-4})?/) && !isMostlyNumbers(pathEnd)) {\n      return pathEnd;\n    }\n  };\n  'use strict';\n  var escapeSelector = axe.utils.escapeSelector;\n  var isXHTML = void 0;\n  var ignoredAttributes = [ 'class', 'style', 'id', 'selected', 'checked', 'disabled', 'tabindex', 'aria-checked', 'aria-selected', 'aria-invalid', 'aria-activedescendant', 'aria-busy', 'aria-disabled', 'aria-expanded', 'aria-grabbed', 'aria-pressed', 'aria-valuenow' ];\n  var MAXATTRIBUTELENGTH = 31;\n  function getAttributeNameValue(node, at) {\n    var name = at.name;\n    var atnv = void 0;\n    if (name.indexOf('href') !== -1 || name.indexOf('src') !== -1) {\n      var friendly = axe.utils.getFriendlyUriEnd(node.getAttribute(name));\n      if (friendly) {\n        var value = encodeURI(friendly);\n        if (value) {\n          atnv = escapeSelector(at.name) + '$=\"' + value + '\"';\n        } else {\n          return;\n        }\n      } else {\n        atnv = escapeSelector(at.name) + '=\"' + node.getAttribute(name) + '\"';\n      }\n    } else {\n      atnv = escapeSelector(name) + '=\"' + escapeSelector(at.value) + '\"';\n    }\n    return atnv;\n  }\n  function countSort(a, b) {\n    return a.count < b.count ? -1 : a.count === b.count ? 0 : 1;\n  }\n  function filterAttributes(at) {\n    return !ignoredAttributes.includes(at.name) && at.name.indexOf(':') === -1 && (!at.value || at.value.length < MAXATTRIBUTELENGTH);\n  }\n  axe.utils.getSelectorData = function(domTree) {\n    var data = {\n      classes: {},\n      tags: {},\n      attributes: {}\n    };\n    domTree = Array.isArray(domTree) ? domTree : [ domTree ];\n    var currentLevel = domTree.slice();\n    var stack = [];\n    var _loop = function _loop() {\n      var current = currentLevel.pop();\n      var node = current.actualNode;\n      if (!!node.querySelectorAll) {\n        var tag = node.nodeName;\n        if (data.tags[tag]) {\n          data.tags[tag]++;\n        } else {\n          data.tags[tag] = 1;\n        }\n        if (node.classList) {\n          Array.from(node.classList).forEach(function(cl) {\n            var ind = escapeSelector(cl);\n            if (data.classes[ind]) {\n              data.classes[ind]++;\n            } else {\n              data.classes[ind] = 1;\n            }\n          });\n        }\n        if (node.attributes) {\n          Array.from(node.attributes).filter(filterAttributes).forEach(function(at) {\n            var atnv = getAttributeNameValue(node, at);\n            if (atnv) {\n              if (data.attributes[atnv]) {\n                data.attributes[atnv]++;\n              } else {\n                data.attributes[atnv] = 1;\n              }\n            }\n          });\n        }\n      }\n      if (current.children.length) {\n        stack.push(currentLevel);\n        currentLevel = current.children.slice();\n      }\n      while (!currentLevel.length && stack.length) {\n        currentLevel = stack.pop();\n      }\n    };\n    while (currentLevel.length) {\n      _loop();\n    }\n    return data;\n  };\n  function uncommonClasses(node, selectorData) {\n    var retVal = [];\n    var classData = selectorData.classes;\n    var tagData = selectorData.tags;\n    if (node.classList) {\n      Array.from(node.classList).forEach(function(cl) {\n        var ind = escapeSelector(cl);\n        if (classData[ind] < tagData[node.nodeName]) {\n          retVal.push({\n            name: ind,\n            count: classData[ind],\n            species: 'class'\n          });\n        }\n      });\n    }\n    return retVal.sort(countSort);\n  }\n  function getNthChildString(elm, selector) {\n    var siblings = elm.parentNode && Array.from(elm.parentNode.children || '') || [];\n    var hasMatchingSiblings = siblings.find(function(sibling) {\n      return sibling !== elm && axe.utils.matchesSelector(sibling, selector);\n    });\n    if (hasMatchingSiblings) {\n      var nthChild = 1 + siblings.indexOf(elm);\n      return ':nth-child(' + nthChild + ')';\n    } else {\n      return '';\n    }\n  }\n  function getElmId(elm) {\n    if (!elm.getAttribute('id')) {\n      return;\n    }\n    var doc = elm.getRootNode && elm.getRootNode() || document;\n    var id = '#' + escapeSelector(elm.getAttribute('id') || '');\n    if (!id.match(/player_uid_/) && doc.querySelectorAll(id).length === 1) {\n      return id;\n    }\n  }\n  function getBaseSelector(elm) {\n    if (typeof isXHTML === 'undefined') {\n      isXHTML = axe.utils.isXHTML(document);\n    }\n    return escapeSelector(isXHTML ? elm.localName : elm.nodeName.toLowerCase());\n  }\n  function uncommonAttributes(node, selectorData) {\n    var retVal = [];\n    var attData = selectorData.attributes;\n    var tagData = selectorData.tags;\n    if (node.attributes) {\n      Array.from(node.attributes).filter(filterAttributes).forEach(function(at) {\n        var atnv = getAttributeNameValue(node, at);\n        if (atnv && attData[atnv] < tagData[node.nodeName]) {\n          retVal.push({\n            name: atnv,\n            count: attData[atnv],\n            species: 'attribute'\n          });\n        }\n      });\n    }\n    return retVal.sort(countSort);\n  }\n  function getThreeLeastCommonFeatures(elm, selectorData) {\n    var selector = '';\n    var features = void 0;\n    var clss = uncommonClasses(elm, selectorData);\n    var atts = uncommonAttributes(elm, selectorData);\n    if (clss.length && clss[0].count === 1) {\n      features = [ clss[0] ];\n    } else if (atts.length && atts[0].count === 1) {\n      features = [ atts[0] ];\n      selector = getBaseSelector(elm);\n    } else {\n      features = clss.concat(atts);\n      features.sort(countSort);\n      features = features.slice(0, 3);\n      if (!features.some(function(feat) {\n        return feat.species === 'class';\n      })) {\n        selector = getBaseSelector(elm);\n      } else {\n        features.sort(function(a, b) {\n          return a.species !== b.species && a.species === 'class' ? -1 : a.species === b.species ? 0 : 1;\n        });\n      }\n    }\n    return selector += features.reduce(function(val, feat) {\n      switch (feat.species) {\n       case 'class':\n        return val + '.' + feat.name;\n\n       case 'attribute':\n        return val + '[' + feat.name + ']';\n      }\n      return val;\n    }, '');\n  }\n  function generateSelector(elm, options, doc) {\n    if (!axe._selectorData) {\n      throw new Error('Expect axe._selectorData to be set up');\n    }\n    var _options$toRoot = options.toRoot, toRoot = _options$toRoot === undefined ? false : _options$toRoot;\n    var selector = void 0;\n    var similar = void 0;\n    do {\n      var features = getElmId(elm);\n      if (!features) {\n        features = getThreeLeastCommonFeatures(elm, axe._selectorData);\n        features += getNthChildString(elm, features);\n      }\n      if (selector) {\n        selector = features + ' > ' + selector;\n      } else {\n        selector = features;\n      }\n      if (!similar) {\n        similar = Array.from(doc.querySelectorAll(selector));\n      } else {\n        similar = similar.filter(function(item) {\n          return axe.utils.matchesSelector(item, selector);\n        });\n      }\n      elm = elm.parentElement;\n    } while ((similar.length > 1 || toRoot) && elm && elm.nodeType !== 11);\n    if (similar.length === 1) {\n      return selector;\n    } else if (selector.indexOf(' > ') !== -1) {\n      return ':root' + selector.substring(selector.indexOf(' > '));\n    }\n    return ':root';\n  }\n  axe.utils.getSelector = function createUniqueSelector(elm) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!elm) {\n      return '';\n    }\n    var doc = elm.getRootNode && elm.getRootNode() || document;\n    if (doc.nodeType === 11) {\n      var stack = [];\n      while (doc.nodeType === 11) {\n        stack.push({\n          elm: elm,\n          doc: doc\n        });\n        elm = doc.host;\n        doc = elm.getRootNode();\n      }\n      stack.push({\n        elm: elm,\n        doc: doc\n      });\n      return stack.reverse().map(function(comp) {\n        return generateSelector(comp.elm, options, comp.doc);\n      });\n    } else {\n      return generateSelector(elm, options, doc);\n    }\n  };\n  'use strict';\n  function getXPathArray(node, path) {\n    var sibling, count;\n    if (!node) {\n      return [];\n    }\n    if (!path && node.nodeType === 9) {\n      path = [ {\n        str: 'html'\n      } ];\n      return path;\n    }\n    path = path || [];\n    if (node.parentNode && node.parentNode !== node) {\n      path = getXPathArray(node.parentNode, path);\n    }\n    if (node.previousSibling) {\n      count = 1;\n      sibling = node.previousSibling;\n      do {\n        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n          count++;\n        }\n        sibling = sibling.previousSibling;\n      } while (sibling);\n      if (count === 1) {\n        count = null;\n      }\n    } else if (node.nextSibling) {\n      sibling = node.nextSibling;\n      do {\n        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n          count = 1;\n          sibling = null;\n        } else {\n          count = null;\n          sibling = sibling.previousSibling;\n        }\n      } while (sibling);\n    }\n    if (node.nodeType === 1) {\n      var element = {};\n      element.str = node.nodeName.toLowerCase();\n      var id = node.getAttribute && axe.utils.escapeSelector(node.getAttribute('id'));\n      if (id && node.ownerDocument.querySelectorAll('#' + id).length === 1) {\n        element.id = node.getAttribute('id');\n      }\n      if (count > 1) {\n        element.count = count;\n      }\n      path.push(element);\n    }\n    return path;\n  }\n  function xpathToString(xpathArray) {\n    return xpathArray.reduce(function(str, elm) {\n      if (elm.id) {\n        return '/' + elm.str + '[@id=\\'' + elm.id + '\\']';\n      } else {\n        return str + ('/' + elm.str) + (elm.count > 0 ? '[' + elm.count + ']' : '');\n      }\n    }, '');\n  }\n  axe.utils.getXpath = function getXpath(node) {\n    var xpathArray = getXPathArray(node);\n    return xpathToString(xpathArray);\n  };\n  'use strict';\n  var styleSheet;\n  function injectStyle(style) {\n    'use strict';\n    if (styleSheet && styleSheet.parentNode) {\n      if (styleSheet.styleSheet === undefined) {\n        styleSheet.appendChild(document.createTextNode(style));\n      } else {\n        styleSheet.styleSheet.cssText += style;\n      }\n      return styleSheet;\n    }\n    if (!style) {\n      return;\n    }\n    var head = document.head || document.getElementsByTagName('head')[0];\n    styleSheet = document.createElement('style');\n    styleSheet.type = 'text/css';\n    if (styleSheet.styleSheet === undefined) {\n      styleSheet.appendChild(document.createTextNode(style));\n    } else {\n      styleSheet.styleSheet.cssText = style;\n    }\n    head.appendChild(styleSheet);\n    return styleSheet;\n  }\n  axe.utils.injectStyle = injectStyle;\n  'use strict';\n  axe.utils.isHidden = function isHidden(el, recursed) {\n    'use strict';\n    var parent;\n    if (el.nodeType === 9) {\n      return false;\n    }\n    if (el.nodeType === 11) {\n      el = el.host;\n    }\n    var style = window.getComputedStyle(el, null);\n    if (!style || !el.parentNode || style.getPropertyValue('display') === 'none' || !recursed && style.getPropertyValue('visibility') === 'hidden' || el.getAttribute('aria-hidden') === 'true') {\n      return true;\n    }\n    parent = el.assignedSlot ? el.assignedSlot : el.parentNode;\n    return axe.utils.isHidden(parent, true);\n  };\n  'use strict';\n  var possibleShadowRoots = [ 'article', 'aside', 'blockquote', 'body', 'div', 'footer', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'main', 'nav', 'p', 'section', 'span' ];\n  axe.utils.isShadowRoot = function isShadowRoot(node) {\n    var nodeName = node.nodeName.toLowerCase();\n    if (node.shadowRoot) {\n      if (/^[a-z][a-z0-9_.-]*-[a-z0-9_.-]*$/.test(nodeName) || possibleShadowRoots.includes(nodeName)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  'use strict';\n  axe.utils.isXHTML = function(doc) {\n    'use strict';\n    if (!doc.createElement) {\n      return false;\n    }\n    return doc.createElement('A').localName === 'A';\n  };\n  'use strict';\n  function pushFrame(resultSet, options, frameElement, frameSelector) {\n    'use strict';\n    var frameXpath = axe.utils.getXpath(frameElement);\n    var frameSpec = {\n      element: frameElement,\n      selector: frameSelector,\n      xpath: frameXpath\n    };\n    resultSet.forEach(function(res) {\n      res.node = axe.utils.DqElement.fromFrame(res.node, options, frameSpec);\n      var checks = axe.utils.getAllChecks(res);\n      if (checks.length) {\n        checks.forEach(function(check) {\n          check.relatedNodes = check.relatedNodes.map(function(node) {\n            return axe.utils.DqElement.fromFrame(node, options, frameSpec);\n          });\n        });\n      }\n    });\n  }\n  function spliceNodes(target, to) {\n    'use strict';\n    var firstFromFrame = to[0].node, sorterResult, t;\n    for (var i = 0, l = target.length; i < l; i++) {\n      t = target[i].node;\n      sorterResult = axe.utils.nodeSorter({\n        actualNode: t.element\n      }, {\n        actualNode: firstFromFrame.element\n      });\n      if (sorterResult > 0 || sorterResult === 0 && firstFromFrame.selector.length < t.selector.length) {\n        target.splice.apply(target, [ i, 0 ].concat(to));\n        return;\n      }\n    }\n    target.push.apply(target, to);\n  }\n  function normalizeResult(result) {\n    'use strict';\n    if (!result || !result.results) {\n      return null;\n    }\n    if (!Array.isArray(result.results)) {\n      return [ result.results ];\n    }\n    if (!result.results.length) {\n      return null;\n    }\n    return result.results;\n  }\n  axe.utils.mergeResults = function mergeResults(frameResults, options) {\n    'use strict';\n    var result = [];\n    frameResults.forEach(function(frameResult) {\n      var results = normalizeResult(frameResult);\n      if (!results || !results.length) {\n        return;\n      }\n      results.forEach(function(ruleResult) {\n        if (ruleResult.nodes && frameResult.frame) {\n          pushFrame(ruleResult.nodes, options, frameResult.frameElement, frameResult.frame);\n        }\n        var res = axe.utils.findBy(result, 'id', ruleResult.id);\n        if (!res) {\n          result.push(ruleResult);\n        } else {\n          if (ruleResult.nodes.length) {\n            spliceNodes(res.nodes, ruleResult.nodes);\n          }\n        }\n      });\n    });\n    return result;\n  };\n  'use strict';\n  axe.utils.nodeSorter = function nodeSorter(a, b) {\n    'use strict';\n    if (a.actualNode === b.actualNode) {\n      return 0;\n    }\n    if (a.actualNode.compareDocumentPosition(b.actualNode) & 4) {\n      return -1;\n    }\n    return 1;\n  };\n  'use strict';\n  utils.performanceTimer = function() {\n    'use strict';\n    function now() {\n      if (window.performance && window.performance) {\n        return window.performance.now();\n      }\n    }\n    var originalTime = null;\n    var lastRecordedTime = now();\n    return {\n      start: function start() {\n        this.mark('mark_axe_start');\n      },\n      end: function end() {\n        this.mark('mark_axe_end');\n        this.measure('axe', 'mark_axe_start', 'mark_axe_end');\n        this.logMeasures('axe');\n      },\n      auditStart: function auditStart() {\n        this.mark('mark_audit_start');\n      },\n      auditEnd: function auditEnd() {\n        this.mark('mark_audit_end');\n        this.measure('audit_start_to_end', 'mark_audit_start', 'mark_audit_end');\n        this.logMeasures();\n      },\n      mark: function mark(markName) {\n        if (window.performance && window.performance.mark !== undefined) {\n          window.performance.mark(markName);\n        }\n      },\n      measure: function measure(measureName, startMark, endMark) {\n        if (window.performance && window.performance.measure !== undefined) {\n          window.performance.measure(measureName, startMark, endMark);\n        }\n      },\n      logMeasures: function logMeasures(measureName) {\n        function log(req) {\n          axe.log('Measure ' + req.name + ' took ' + req.duration + 'ms');\n        }\n        if (window.performance && window.performance.getEntriesByType !== undefined) {\n          var measures = window.performance.getEntriesByType('measure');\n          for (var i = 0; i < measures.length; ++i) {\n            var req = measures[i];\n            if (req.name === measureName) {\n              log(req);\n              return;\n            }\n            log(req);\n          }\n        }\n      },\n      timeElapsed: function timeElapsed() {\n        return now() - lastRecordedTime;\n      },\n      reset: function reset() {\n        if (!originalTime) {\n          originalTime = now();\n        }\n        lastRecordedTime = now();\n      }\n    };\n  }();\n  'use strict';\n  if (typeof Object.assign !== 'function') {\n    (function() {\n      Object.assign = function(target) {\n        'use strict';\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n        return output;\n      };\n    })();\n  }\n  if (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n      value: function value(predicate) {\n        if (this === null) {\n          throw new TypeError('Array.prototype.find called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n          throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n        for (var i = 0; i < length; i++) {\n          value = list[i];\n          if (predicate.call(thisArg, value, i, list)) {\n            return value;\n          }\n        }\n        return undefined;\n      }\n    });\n  }\n  axe.utils.pollyfillElementsFromPoint = function() {\n    if (document.elementsFromPoint) {\n      return document.elementsFromPoint;\n    }\n    if (document.msElementsFromPoint) {\n      return document.msElementsFromPoint;\n    }\n    var usePointer = function() {\n      var element = document.createElement('x');\n      element.style.cssText = 'pointer-events:auto';\n      return element.style.pointerEvents === 'auto';\n    }();\n    var cssProp = usePointer ? 'pointer-events' : 'visibility';\n    var cssDisableVal = usePointer ? 'none' : 'hidden';\n    var style = document.createElement('style');\n    style.innerHTML = usePointer ? '* { pointer-events: all }' : '* { visibility: visible }';\n    return function(x, y) {\n      var current, i, d;\n      var elements = [];\n      var previousPointerEvents = [];\n      document.head.appendChild(style);\n      while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1) {\n        elements.push(current);\n        previousPointerEvents.push({\n          value: current.style.getPropertyValue(cssProp),\n          priority: current.style.getPropertyPriority(cssProp)\n        });\n        current.style.setProperty(cssProp, cssDisableVal, 'important');\n      }\n      if (elements.indexOf(document.documentElement) < elements.length - 1) {\n        elements.splice(elements.indexOf(document.documentElement), 1);\n        elements.push(document.documentElement);\n      }\n      for (i = previousPointerEvents.length; !!(d = previousPointerEvents[--i]); ) {\n        elements[i].style.setProperty(cssProp, d.value ? d.value : '', d.priority);\n      }\n      document.head.removeChild(style);\n      return elements;\n    };\n  };\n  if (typeof window.addEventListener === 'function') {\n    document.elementsFromPoint = axe.utils.pollyfillElementsFromPoint();\n  }\n  if (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n      value: function value(searchElement) {\n        'use strict';\n        var O = Object(this);\n        var len = parseInt(O.length, 10) || 0;\n        if (len === 0) {\n          return false;\n        }\n        var n = parseInt(arguments[1], 10) || 0;\n        var k;\n        if (n >= 0) {\n          k = n;\n        } else {\n          k = len + n;\n          if (k < 0) {\n            k = 0;\n          }\n        }\n        var currentElement;\n        while (k < len) {\n          currentElement = O[k];\n          if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {\n            return true;\n          }\n          k++;\n        }\n        return false;\n      }\n    });\n  }\n  if (!Array.prototype.some) {\n    Object.defineProperty(Array.prototype, 'some', {\n      value: function value(fun) {\n        'use strict';\n        if (this == null) {\n          throw new TypeError('Array.prototype.some called on null or undefined');\n        }\n        if (typeof fun !== 'function') {\n          throw new TypeError();\n        }\n        var t = Object(this);\n        var len = t.length >>> 0;\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n          if (i in t && fun.call(thisArg, t[i], i, t)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    });\n  }\n  if (!Array.from) {\n    Object.defineProperty(Array, 'from', {\n      value: function() {\n        var toStr = Object.prototype.toString;\n        var isCallable = function isCallable(fn) {\n          return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n        };\n        var toInteger = function toInteger(value) {\n          var number = Number(value);\n          if (isNaN(number)) {\n            return 0;\n          }\n          if (number === 0 || !isFinite(number)) {\n            return number;\n          }\n          return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n        };\n        var maxSafeInteger = Math.pow(2, 53) - 1;\n        var toLength = function toLength(value) {\n          var len = toInteger(value);\n          return Math.min(Math.max(len, 0), maxSafeInteger);\n        };\n        return function from(arrayLike) {\n          var C = this;\n          var items = Object(arrayLike);\n          if (arrayLike == null) {\n            throw new TypeError('Array.from requires an array-like object - not null or undefined');\n          }\n          var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n          var T;\n          if (typeof mapFn !== 'undefined') {\n            if (!isCallable(mapFn)) {\n              throw new TypeError('Array.from: when provided, the second argument must be a function');\n            }\n            if (arguments.length > 2) {\n              T = arguments[2];\n            }\n          }\n          var len = toLength(items.length);\n          var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n          var k = 0;\n          var kValue;\n          while (k < len) {\n            kValue = items[k];\n            if (mapFn) {\n              A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n            } else {\n              A[k] = kValue;\n            }\n            k += 1;\n          }\n          A.length = len;\n          return A;\n        };\n      }()\n    });\n  }\n  if (!String.prototype.includes) {\n    String.prototype.includes = function(search, start) {\n      if (typeof start !== 'number') {\n        start = 0;\n      }\n      if (start + search.length > this.length) {\n        return false;\n      } else {\n        return this.indexOf(search, start) !== -1;\n      }\n    };\n  }\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function getIncompleteReason(checkData, messages) {\n    function getDefaultMsg(messages) {\n      if (messages.incomplete && messages.incomplete.default) {\n        return messages.incomplete.default;\n      } else {\n        return helpers.incompleteFallbackMessage();\n      }\n    }\n    if (checkData && checkData.missingData) {\n      try {\n        var msg = messages.incomplete[checkData.missingData[0].reason];\n        if (!msg) {\n          throw new Error();\n        }\n        return msg;\n      } catch (e) {\n        if (typeof checkData.missingData === 'string') {\n          return messages.incomplete[checkData.missingData];\n        } else {\n          return getDefaultMsg(messages);\n        }\n      }\n    } else {\n      return getDefaultMsg(messages);\n    }\n  }\n  function extender(checksData, shouldBeTrue) {\n    'use strict';\n    return function(check) {\n      var sourceData = checksData[check.id] || {};\n      var messages = sourceData.messages || {};\n      var data = Object.assign({}, sourceData);\n      delete data.messages;\n      if (check.result === undefined) {\n        if (_typeof(messages.incomplete) === 'object') {\n          data.message = function() {\n            return getIncompleteReason(check.data, messages);\n          };\n        } else {\n          data.message = messages.incomplete;\n        }\n      } else {\n        data.message = check.result === shouldBeTrue ? messages.pass : messages.fail;\n      }\n      axe.utils.extendMetaData(check, data);\n    };\n  }\n  axe.utils.publishMetaData = function(ruleResult) {\n    'use strict';\n    var checksData = axe._audit.data.checks || {};\n    var rulesData = axe._audit.data.rules || {};\n    var rule = axe.utils.findBy(axe._audit.rules, 'id', ruleResult.id) || {};\n    ruleResult.tags = axe.utils.clone(rule.tags || []);\n    var shouldBeTrue = extender(checksData, true);\n    var shouldBeFalse = extender(checksData, false);\n    ruleResult.nodes.forEach(function(detail) {\n      detail.any.forEach(shouldBeTrue);\n      detail.all.forEach(shouldBeTrue);\n      detail.none.forEach(shouldBeFalse);\n    });\n    axe.utils.extendMetaData(ruleResult, axe.utils.clone(rulesData[ruleResult.id] || {}));\n  };\n  'use strict';\n  var convertExpressions = function convertExpressions() {};\n  var matchExpressions = function matchExpressions() {};\n  function matchesTag(node, exp) {\n    return node.nodeType === 1 && (exp.tag === '*' || node.nodeName.toLowerCase() === exp.tag);\n  }\n  function matchesClasses(node, exp) {\n    return !exp.classes || exp.classes.reduce(function(result, cl) {\n      return result && node.className && node.className.match(cl.regexp);\n    }, true);\n  }\n  function matchesAttributes(node, exp) {\n    return !exp.attributes || exp.attributes.reduce(function(result, att) {\n      var nodeAtt = node.getAttribute(att.key);\n      return result && nodeAtt !== null && (!att.value || att.test(nodeAtt));\n    }, true);\n  }\n  function matchesId(node, exp) {\n    return !exp.id || node.id === exp.id;\n  }\n  function matchesPseudos(target, exp) {\n    if (!exp.pseudos || exp.pseudos.reduce(function(result, pseudo) {\n      if (pseudo.name === 'not') {\n        return result && !matchExpressions([ target ], pseudo.expressions, false).length;\n      }\n      throw new Error('the pseudo selector ' + pseudo.name + ' has not yet been implemented');\n    }, true)) {\n      return true;\n    }\n    return false;\n  }\n  var escapeRegExp = function() {\n    /*! Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License */\n    var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g;\n    var to = '\\\\';\n    return function(string) {\n      return string.replace(from, to);\n    };\n  }();\n  var reUnescape = /\\\\/g;\n  function convertAttributes(atts) {\n    /*! Credit Mootools Copyright Mootools, MIT License */\n    if (!atts) {\n      return;\n    }\n    return atts.map(function(att) {\n      var attributeKey = att.name.replace(reUnescape, '');\n      var attributeValue = (att.value || '').replace(reUnescape, '');\n      var test, regexp;\n      switch (att.operator) {\n       case '^=':\n        regexp = new RegExp('^' + escapeRegExp(attributeValue));\n        break;\n\n       case '$=':\n        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\n        break;\n\n       case '~=':\n        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\n        break;\n\n       case '|=':\n        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\n        break;\n\n       case '=':\n        test = function test(value) {\n          return attributeValue === value;\n        };\n        break;\n\n       case '*=':\n        test = function test(value) {\n          return value && value.includes(attributeValue);\n        };\n        break;\n\n       case '!=':\n        test = function test(value) {\n          return attributeValue !== value;\n        };\n        break;\n\n       default:\n        test = function test(value) {\n          return !!value;\n        };\n      }\n      if (attributeValue === '' && /^[*$^]=$/.test(att.operator)) {\n        test = function test() {\n          return false;\n        };\n      }\n      if (!test) {\n        test = function test(value) {\n          return value && regexp.test(value);\n        };\n      }\n      return {\n        key: attributeKey,\n        value: attributeValue,\n        test: test\n      };\n    });\n  }\n  function convertClasses(classes) {\n    if (!classes) {\n      return;\n    }\n    return classes.map(function(className) {\n      className = className.replace(reUnescape, '');\n      return {\n        value: className,\n        regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\n      };\n    });\n  }\n  function convertPseudos(pseudos) {\n    if (!pseudos) {\n      return;\n    }\n    return pseudos.map(function(p) {\n      var expressions;\n      if (p.name === 'not') {\n        expressions = axe.utils.cssParser.parse(p.value);\n        expressions = expressions.selectors ? expressions.selectors : [ expressions ];\n        expressions = convertExpressions(expressions);\n      }\n      return {\n        name: p.name,\n        expressions: expressions,\n        value: p.value\n      };\n    });\n  }\n  convertExpressions = function convertExpressions(expressions) {\n    return expressions.map(function(exp) {\n      var newExp = [];\n      var rule = exp.rule;\n      while (rule) {\n        newExp.push({\n          tag: rule.tagName ? rule.tagName.toLowerCase() : '*',\n          combinator: rule.nestingOperator ? rule.nestingOperator : ' ',\n          id: rule.id,\n          attributes: convertAttributes(rule.attrs),\n          classes: convertClasses(rule.classNames),\n          pseudos: convertPseudos(rule.pseudos)\n        });\n        rule = rule.rule;\n      }\n      return newExp;\n    });\n  };\n  function createLocalVariables(nodes, anyLevel, thisLevel, parentShadowId) {\n    var retVal = {\n      nodes: nodes.slice(),\n      anyLevel: anyLevel,\n      thisLevel: thisLevel,\n      parentShadowId: parentShadowId\n    };\n    retVal.nodes.reverse();\n    return retVal;\n  }\n  function matchesSelector(node, exp) {\n    return matchesTag(node.actualNode, exp[0]) && matchesClasses(node.actualNode, exp[0]) && matchesAttributes(node.actualNode, exp[0]) && matchesId(node.actualNode, exp[0]) && matchesPseudos(node, exp[0]);\n  }\n  matchExpressions = function matchExpressions(domTree, expressions, recurse, filter) {\n    var stack = [];\n    var nodes = Array.isArray(domTree) ? domTree : [ domTree ];\n    var currentLevel = createLocalVariables(nodes, expressions, [], domTree[0].shadowId);\n    var result = [];\n    while (currentLevel.nodes.length) {\n      var node = currentLevel.nodes.pop();\n      var childOnly = [];\n      var childAny = [];\n      var combined = currentLevel.anyLevel.slice().concat(currentLevel.thisLevel);\n      var added = false;\n      for (var i = 0; i < combined.length; i++) {\n        var exp = combined[i];\n        if (matchesSelector(node, exp) && (!exp[0].id || node.shadowId === currentLevel.parentShadowId)) {\n          if (exp.length === 1) {\n            if (!added && (!filter || filter(node))) {\n              result.push(node);\n              added = true;\n            }\n          } else {\n            var rest = exp.slice(1);\n            if ([ ' ', '>' ].includes(rest[0].combinator) === false) {\n              throw new Error('axe.utils.querySelectorAll does not support the combinator: ' + exp[1].combinator);\n            }\n            if (rest[0].combinator === '>') {\n              childOnly.push(rest);\n            } else {\n              childAny.push(rest);\n            }\n          }\n        }\n        if (currentLevel.anyLevel.includes(exp) && (!exp[0].id || node.shadowId === currentLevel.parentShadowId)) {\n          childAny.push(exp);\n        }\n      }\n      if (node.children && node.children.length && recurse) {\n        stack.push(currentLevel);\n        currentLevel = createLocalVariables(node.children, childAny, childOnly, node.shadowId);\n      }\n      while (!currentLevel.nodes.length && stack.length) {\n        currentLevel = stack.pop();\n      }\n    }\n    return result;\n  };\n  axe.utils.querySelectorAll = function(domTree, selector) {\n    return axe.utils.querySelectorAllFilter(domTree, selector);\n  };\n  axe.utils.querySelectorAllFilter = function(domTree, selector, filter) {\n    domTree = Array.isArray(domTree) ? domTree : [ domTree ];\n    var expressions = axe.utils.cssParser.parse(selector);\n    expressions = expressions.selectors ? expressions.selectors : [ expressions ];\n    expressions = convertExpressions(expressions);\n    return matchExpressions(domTree, expressions, true, filter);\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  (function() {\n    'use strict';\n    function noop() {}\n    function funcGuard(f) {\n      if (typeof f !== 'function') {\n        throw new TypeError('Queue methods require functions as arguments');\n      }\n    }\n    function queue() {\n      var tasks = [];\n      var started = 0;\n      var remaining = 0;\n      var completeQueue = noop;\n      var complete = false;\n      var err;\n      var defaultFail = function defaultFail(e) {\n        err = e;\n        setTimeout(function() {\n          if (err !== undefined && err !== null) {\n            axe.log('Uncaught error (of queue)', err);\n          }\n        }, 1);\n      };\n      var failed = defaultFail;\n      function createResolve(i) {\n        return function(r) {\n          tasks[i] = r;\n          remaining -= 1;\n          if (!remaining && completeQueue !== noop) {\n            complete = true;\n            completeQueue(tasks);\n          }\n        };\n      }\n      function abort(msg) {\n        completeQueue = noop;\n        failed(msg);\n        return tasks;\n      }\n      function pop() {\n        var length = tasks.length;\n        for (;started < length; started++) {\n          var task = tasks[started];\n          try {\n            task.call(null, createResolve(started), abort);\n          } catch (e) {\n            abort(e);\n          }\n        }\n      }\n      var q = {\n        defer: function defer(fn) {\n          if ((typeof fn === 'undefined' ? 'undefined' : _typeof(fn)) === 'object' && fn.then && fn.catch) {\n            var defer = fn;\n            fn = function fn(resolve, reject) {\n              defer.then(resolve).catch(reject);\n            };\n          }\n          funcGuard(fn);\n          if (err !== undefined) {\n            return;\n          } else if (complete) {\n            throw new Error('Queue already completed');\n          }\n          tasks.push(fn);\n          ++remaining;\n          pop();\n          return q;\n        },\n        then: function then(fn) {\n          funcGuard(fn);\n          if (completeQueue !== noop) {\n            throw new Error('queue `then` already set');\n          }\n          if (!err) {\n            completeQueue = fn;\n            if (!remaining) {\n              complete = true;\n              completeQueue(tasks);\n            }\n          }\n          return q;\n        },\n        catch: function _catch(fn) {\n          funcGuard(fn);\n          if (failed !== defaultFail) {\n            throw new Error('queue `catch` already set');\n          }\n          if (!err) {\n            failed = fn;\n          } else {\n            fn(err);\n            err = null;\n          }\n          return q;\n        },\n        abort: abort\n      };\n      return q;\n    }\n    axe.utils.queue = queue;\n  })();\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  (function(exports) {\n    'use strict';\n    var messages = {}, subscribers = {}, errorTypes = Object.freeze([ 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError', 'TypeError', 'URIError' ]);\n    function _getSource() {\n      var application = 'axe', version = '', src;\n      if (typeof axe !== 'undefined' && axe._audit && !axe._audit.application) {\n        application = axe._audit.application;\n      }\n      if (typeof axe !== 'undefined') {\n        version = axe.version;\n      }\n      src = application + '.' + version;\n      return src;\n    }\n    function verify(postedMessage) {\n      if ((typeof postedMessage === 'undefined' ? 'undefined' : _typeof(postedMessage)) === 'object' && typeof postedMessage.uuid === 'string' && postedMessage._respondable === true) {\n        var messageSource = _getSource();\n        return postedMessage._source === messageSource || postedMessage._source === 'axe.x.y.z' || messageSource === 'axe.x.y.z';\n      }\n      return false;\n    }\n    function post(win, topic, message, uuid, keepalive, callback) {\n      var error;\n      if (message instanceof Error) {\n        error = {\n          name: message.name,\n          message: message.message,\n          stack: message.stack\n        };\n        message = undefined;\n      }\n      var data = {\n        uuid: uuid,\n        topic: topic,\n        message: message,\n        error: error,\n        _respondable: true,\n        _source: _getSource(),\n        _keepalive: keepalive\n      };\n      if (typeof callback === 'function') {\n        messages[uuid] = callback;\n      }\n      win.postMessage(JSON.stringify(data), '*');\n    }\n    function respondable(win, topic, message, keepalive, callback) {\n      var id = uuid.v1();\n      post(win, topic, message, id, keepalive, callback);\n    }\n    respondable.subscribe = function(topic, callback) {\n      subscribers[topic] = callback;\n    };\n    respondable.isInFrame = function(win) {\n      win = win || window;\n      return !!win.frameElement;\n    };\n    function createResponder(source, topic, uuid) {\n      return function(message, keepalive, callback) {\n        post(source, topic, message, uuid, keepalive, callback);\n      };\n    }\n    function publish(target, data, keepalive) {\n      var topic = data.topic;\n      var subscriber = subscribers[topic];\n      if (subscriber) {\n        var responder = createResponder(target, null, data.uuid);\n        subscriber(data.message, keepalive, responder);\n      }\n    }\n    function buildErrorObject(error) {\n      var msg = error.message || 'Unknown error occurred';\n      var errorName = errorTypes.includes(error.name) ? error.name : 'Error';\n      var ErrConstructor = window[errorName] || Error;\n      if (error.stack) {\n        msg += '\\n' + error.stack.replace(error.message, '');\n      }\n      return new ErrConstructor(msg);\n    }\n    function parseMessage(dataString) {\n      var data;\n      if (typeof dataString !== 'string') {\n        return;\n      }\n      try {\n        data = JSON.parse(dataString);\n      } catch (ex) {}\n      if (!verify(data)) {\n        return;\n      }\n      if (_typeof(data.error) === 'object') {\n        data.error = buildErrorObject(data.error);\n      } else {\n        data.error = undefined;\n      }\n      return data;\n    }\n    if (typeof window.addEventListener === 'function') {\n      window.addEventListener('message', function(e) {\n        var data = parseMessage(e.data);\n        if (!data) {\n          return;\n        }\n        var uuid = data.uuid;\n        var keepalive = data._keepalive;\n        var callback = messages[uuid];\n        if (callback) {\n          var result = data.error || data.message;\n          var responder = createResponder(e.source, data.topic, uuid);\n          callback(result, keepalive, responder);\n          if (!keepalive) {\n            delete messages[uuid];\n          }\n        }\n        if (!data.error) {\n          try {\n            publish(e.source, data, keepalive);\n          } catch (err) {\n            post(e.source, data.topic, err, uuid, false);\n          }\n        }\n      }, false);\n    }\n    exports.respondable = respondable;\n  })(utils);\n  'use strict';\n  function matchTags(rule, runOnly) {\n    'use strict';\n    var include, exclude, matching;\n    var defaultExclude = axe._audit && axe._audit.tagExclude ? axe._audit.tagExclude : [];\n    if (runOnly.hasOwnProperty('include') || runOnly.hasOwnProperty('exclude')) {\n      include = runOnly.include || [];\n      include = Array.isArray(include) ? include : [ include ];\n      exclude = runOnly.exclude || [];\n      exclude = Array.isArray(exclude) ? exclude : [ exclude ];\n      exclude = exclude.concat(defaultExclude.filter(function(tag) {\n        return include.indexOf(tag) === -1;\n      }));\n    } else {\n      include = Array.isArray(runOnly) ? runOnly : [ runOnly ];\n      exclude = defaultExclude.filter(function(tag) {\n        return include.indexOf(tag) === -1;\n      });\n    }\n    matching = include.some(function(tag) {\n      return rule.tags.indexOf(tag) !== -1;\n    });\n    if (matching || include.length === 0 && rule.enabled !== false) {\n      return exclude.every(function(tag) {\n        return rule.tags.indexOf(tag) === -1;\n      });\n    } else {\n      return false;\n    }\n  }\n  axe.utils.ruleShouldRun = function(rule, context, options) {\n    'use strict';\n    var runOnly = options.runOnly || {};\n    var ruleOptions = (options.rules || {})[rule.id];\n    if (rule.pageLevel && !context.page) {\n      return false;\n    } else if (runOnly.type === 'rule') {\n      return runOnly.values.indexOf(rule.id) !== -1;\n    } else if (ruleOptions && typeof ruleOptions.enabled === 'boolean') {\n      return ruleOptions.enabled;\n    } else if (runOnly.type === 'tag' && runOnly.values) {\n      return matchTags(rule, runOnly.values);\n    } else {\n      return matchTags(rule, []);\n    }\n  };\n  'use strict';\n  function getScroll(elm) {\n    var style = window.getComputedStyle(elm);\n    var visibleOverflowY = style.getPropertyValue('overflow-y') === 'visible';\n    var visibleOverflowX = style.getPropertyValue('overflow-x') === 'visible';\n    if (!visibleOverflowY && elm.scrollHeight > elm.clientHeight || !visibleOverflowX && elm.scrollWidth > elm.clientWidth) {\n      return {\n        elm: elm,\n        top: elm.scrollTop,\n        left: elm.scrollLeft\n      };\n    }\n  }\n  function setScroll(elm, top, left) {\n    if (elm === window) {\n      return elm.scroll(top, left);\n    } else {\n      elm.scrollTop = top;\n      elm.scrollLeft = left;\n    }\n  }\n  function getElmScrollRecursive(root) {\n    return Array.from(root.children).reduce(function(scrolls, elm) {\n      var scroll = getScroll(elm);\n      if (scroll) {\n        scrolls.push(scroll);\n      }\n      return scrolls.concat(getElmScrollRecursive(elm));\n    }, []);\n  }\n  axe.utils.getScrollState = function getScrollState() {\n    var win = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n    var root = win.document.documentElement;\n    var windowScroll = [ win.pageXOffset !== undefined ? {\n      elm: win,\n      top: win.pageYOffset,\n      left: win.pageXOffset\n    } : {\n      elm: root,\n      top: root.scrollTop,\n      left: root.scrollLeft\n    } ];\n    return windowScroll.concat(getElmScrollRecursive(document.body));\n  };\n  axe.utils.setScrollState = function setScrollState(scrollState) {\n    scrollState.forEach(function(_ref) {\n      var elm = _ref.elm, top = _ref.top, left = _ref.left;\n      return setScroll(elm, top, left);\n    });\n  };\n  'use strict';\n  function getDeepest(collection) {\n    'use strict';\n    return collection.sort(function(a, b) {\n      if (axe.utils.contains(a, b)) {\n        return 1;\n      }\n      return -1;\n    })[0];\n  }\n  function isNodeInContext(node, context) {\n    'use strict';\n    var include = context.include && getDeepest(context.include.filter(function(candidate) {\n      return axe.utils.contains(candidate, node);\n    }));\n    var exclude = context.exclude && getDeepest(context.exclude.filter(function(candidate) {\n      return axe.utils.contains(candidate, node);\n    }));\n    if (!exclude && include || exclude && axe.utils.contains(exclude, include)) {\n      return true;\n    }\n    return false;\n  }\n  function pushNode(result, nodes) {\n    'use strict';\n    var temp;\n    if (result.length === 0) {\n      return nodes;\n    }\n    if (result.length < nodes.length) {\n      temp = result;\n      result = nodes;\n      nodes = temp;\n    }\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (!result.includes(nodes[i])) {\n        result.push(nodes[i]);\n      }\n    }\n    return result;\n  }\n  function reduceIncludes(includes) {\n    return includes.reduce(function(res, el) {\n      if (!res.length || !res[res.length - 1].actualNode.contains(el.actualNode)) {\n        res.push(el);\n      }\n      return res;\n    }, []);\n  }\n  axe.utils.select = function select(selector, context) {\n    'use strict';\n    var result = [], candidate;\n    if (axe._selectCache) {\n      for (var j = 0, l = axe._selectCache.length; j < l; j++) {\n        var item = axe._selectCache[j];\n        if (item.selector === selector) {\n          return item.result;\n        }\n      }\n    }\n    var curried = function(context) {\n      return function(node) {\n        return isNodeInContext(node, context);\n      };\n    }(context);\n    var reducedIncludes = reduceIncludes(context.include);\n    for (var i = 0; i < reducedIncludes.length; i++) {\n      candidate = reducedIncludes[i];\n      if (candidate.actualNode.nodeType === candidate.actualNode.ELEMENT_NODE && axe.utils.matchesSelector(candidate.actualNode, selector) && curried(candidate)) {\n        result = pushNode(result, [ candidate ]);\n      }\n      result = pushNode(result, axe.utils.querySelectorAllFilter(candidate, selector, curried));\n    }\n    if (axe._selectCache) {\n      axe._selectCache.push({\n        selector: selector,\n        result: result\n      });\n    }\n    return result;\n  };\n  'use strict';\n  axe.utils.toArray = function(thing) {\n    'use strict';\n    return Array.prototype.slice.call(thing);\n  };\n  axe.utils.uniqueArray = function(arr1, arr2) {\n    return arr1.concat(arr2).filter(function(elem, pos, arr) {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n  'use strict';\n  var uuid;\n  (function(_global) {\n    var _rng;\n    var _crypto = _global.crypto || _global.msCrypto;\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      var _rnds8 = new Uint8Array(16);\n      _rng = function whatwgRNG() {\n        _crypto.getRandomValues(_rnds8);\n        return _rnds8;\n      };\n    }\n    if (!_rng) {\n      var _rnds = new Array(16);\n      _rng = function _rng() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 3) === 0) {\n            r = Math.random() * 4294967296;\n          }\n          _rnds[i] = r >>> ((i & 3) << 3) & 255;\n        }\n        return _rnds;\n      };\n    }\n    var BufferClass = typeof _global.Buffer == 'function' ? _global.Buffer : Array;\n    var _byteToHex = [];\n    var _hexToByte = {};\n    for (var i = 0; i < 256; i++) {\n      _byteToHex[i] = (i + 256).toString(16).substr(1);\n      _hexToByte[_byteToHex[i]] = i;\n    }\n    function parse(s, buf, offset) {\n      var i = buf && offset || 0, ii = 0;\n      buf = buf || [];\n      s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n        if (ii < 16) {\n          buf[i + ii++] = _hexToByte[oct];\n        }\n      });\n      while (ii < 16) {\n        buf[i + ii++] = 0;\n      }\n      return buf;\n    }\n    function unparse(buf, offset) {\n      var i = offset || 0, bth = _byteToHex;\n      return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n    }\n    var _seedBytes = _rng();\n    var _nodeId = [ _seedBytes[0] | 1, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5] ];\n    var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 16383;\n    var _lastMSecs = 0, _lastNSecs = 0;\n    function v1(options, buf, offset) {\n      var i = buf && offset || 0;\n      var b = buf || [];\n      options = options || {};\n      var clockseq = options.clockseq != null ? options.clockseq : _clockseq;\n      var msecs = options.msecs != null ? options.msecs : new Date().getTime();\n      var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;\n      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n      if (dt < 0 && options.clockseq == null) {\n        clockseq = clockseq + 1 & 16383;\n      }\n      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n        nsecs = 0;\n      }\n      if (nsecs >= 1e4) {\n        throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n      }\n      _lastMSecs = msecs;\n      _lastNSecs = nsecs;\n      _clockseq = clockseq;\n      msecs += 122192928e5;\n      var tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n      b[i++] = tl >>> 24 & 255;\n      b[i++] = tl >>> 16 & 255;\n      b[i++] = tl >>> 8 & 255;\n      b[i++] = tl & 255;\n      var tmh = msecs / 4294967296 * 1e4 & 268435455;\n      b[i++] = tmh >>> 8 & 255;\n      b[i++] = tmh & 255;\n      b[i++] = tmh >>> 24 & 15 | 16;\n      b[i++] = tmh >>> 16 & 255;\n      b[i++] = clockseq >>> 8 | 128;\n      b[i++] = clockseq & 255;\n      var node = options.node || _nodeId;\n      for (var n = 0; n < 6; n++) {\n        b[i + n] = node[n];\n      }\n      return buf ? buf : unparse(b);\n    }\n    function v4(options, buf, offset) {\n      var i = buf && offset || 0;\n      if (typeof options == 'string') {\n        buf = options == 'binary' ? new BufferClass(16) : null;\n        options = null;\n      }\n      options = options || {};\n      var rnds = options.random || (options.rng || _rng)();\n      rnds[6] = rnds[6] & 15 | 64;\n      rnds[8] = rnds[8] & 63 | 128;\n      if (buf) {\n        for (var ii = 0; ii < 16; ii++) {\n          buf[i + ii] = rnds[ii];\n        }\n      }\n      return buf || unparse(rnds);\n    }\n    uuid = v4;\n    uuid.v1 = v1;\n    uuid.v4 = v4;\n    uuid.parse = parse;\n    uuid.unparse = unparse;\n    uuid.BufferClass = BufferClass;\n  })(window);\n  'use strict';\n  axe._load({\n    data: {\n      rules: {\n        accesskeys: {\n          description: 'Ensures every accesskey attribute value is unique',\n          help: 'accesskey attribute value must be unique'\n        },\n        'area-alt': {\n          description: 'Ensures <area> elements of image maps have alternate text',\n          help: 'Active <area> elements must have alternate text'\n        },\n        'aria-allowed-attr': {\n          description: 'Ensures ARIA attributes are allowed for an element\\'s role',\n          help: 'Elements must only use allowed ARIA attributes'\n        },\n        'aria-dpub-role-fallback': {\n          description: 'Ensures unsupported DPUB roles are only used on elements with implicit fallback roles',\n          help: 'Unsupported DPUB ARIA roles should be used on elements with implicit fallback roles'\n        },\n        'aria-hidden-body': {\n          description: 'Ensures aria-hidden=\\'true\\' is not present on the document body.',\n          help: 'aria-hidden=\\'true\\' must not be present on the document body'\n        },\n        'aria-required-attr': {\n          description: 'Ensures elements with ARIA roles have all required ARIA attributes',\n          help: 'Required ARIA attributes must be provided'\n        },\n        'aria-required-children': {\n          description: 'Ensures elements with an ARIA role that require child roles contain them',\n          help: 'Certain ARIA roles must contain particular children'\n        },\n        'aria-required-parent': {\n          description: 'Ensures elements with an ARIA role that require parent roles are contained by them',\n          help: 'Certain ARIA roles must be contained by particular parents'\n        },\n        'aria-roles': {\n          description: 'Ensures all elements with a role attribute use a valid value',\n          help: 'ARIA roles used must conform to valid values'\n        },\n        'aria-valid-attr-value': {\n          description: 'Ensures all ARIA attributes have valid values',\n          help: 'ARIA attributes must conform to valid values'\n        },\n        'aria-valid-attr': {\n          description: 'Ensures attributes that begin with aria- are valid ARIA attributes',\n          help: 'ARIA attributes must conform to valid names'\n        },\n        'audio-caption': {\n          description: 'Ensures <audio> elements have captions',\n          help: '<audio> elements must have a captions track'\n        },\n        blink: {\n          description: 'Ensures <blink> elements are not used',\n          help: '<blink> elements are deprecated and must not be used'\n        },\n        'button-name': {\n          description: 'Ensures buttons have discernible text',\n          help: 'Buttons must have discernible text'\n        },\n        bypass: {\n          description: 'Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content',\n          help: 'Page must have means to bypass repeated blocks'\n        },\n        checkboxgroup: {\n          description: 'Ensures related <input type=\"checkbox\"> elements have a group and that that group designation is consistent',\n          help: 'Checkbox inputs with the same name attribute value must be part of a group'\n        },\n        'color-contrast': {\n          description: 'Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds',\n          help: 'Elements must have sufficient color contrast'\n        },\n        'definition-list': {\n          description: 'Ensures <dl> elements are structured correctly',\n          help: '<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script> or <template> elements'\n        },\n        dlitem: {\n          description: 'Ensures <dt> and <dd> elements are contained by a <dl>',\n          help: '<dt> and <dd> elements must be contained by a <dl>'\n        },\n        'document-title': {\n          description: 'Ensures each HTML document contains a non-empty <title> element',\n          help: 'Documents must have <title> element to aid in navigation'\n        },\n        'duplicate-id': {\n          description: 'Ensures every id attribute value is unique',\n          help: 'id attribute value must be unique'\n        },\n        'empty-heading': {\n          description: 'Ensures headings have discernible text',\n          help: 'Headings must not be empty'\n        },\n        'focus-order-semantics': {\n          description: 'Ensures elements in the focus order have an appropriate role',\n          help: 'Elements in the focus order need a role appropriate for interactive content'\n        },\n        'frame-tested': {\n          description: 'Ensures <iframe> and <frame> elements contain the axe-core script',\n          help: 'Frames must be tested with axe-core'\n        },\n        'frame-title-unique': {\n          description: 'Ensures <iframe> and <frame> elements contain a unique title attribute',\n          help: 'Frames must have a unique title attribute'\n        },\n        'frame-title': {\n          description: 'Ensures <iframe> and <frame> elements contain a non-empty title attribute',\n          help: 'Frames must have title attribute'\n        },\n        'heading-order': {\n          description: 'Ensures the order of headings is semantically correct',\n          help: 'Heading levels should only increase by one'\n        },\n        'hidden-content': {\n          description: 'Informs users about hidden content.',\n          help: 'Hidden content on the page cannot be analyzed'\n        },\n        'html-has-lang': {\n          description: 'Ensures every HTML document has a lang attribute',\n          help: '<html> element must have a lang attribute'\n        },\n        'html-lang-valid': {\n          description: 'Ensures the lang attribute of the <html> element has a valid value',\n          help: '<html> element must have a valid value for the lang attribute'\n        },\n        'image-alt': {\n          description: 'Ensures <img> elements have alternate text or a role of none or presentation',\n          help: 'Images must have alternate text'\n        },\n        'image-redundant-alt': {\n          description: 'Ensure button and link text is not repeated as image alternative',\n          help: 'Text of buttons and links should not be repeated in the image alternative'\n        },\n        'input-image-alt': {\n          description: 'Ensures <input type=\"image\"> elements have alternate text',\n          help: 'Image buttons must have alternate text'\n        },\n        'label-title-only': {\n          description: 'Ensures that every form element is not solely labeled using the title or aria-describedby attributes',\n          help: 'Form elements should have a visible label'\n        },\n        label: {\n          description: 'Ensures every form element has a label',\n          help: 'Form elements must have labels'\n        },\n        'landmark-banner-is-top-level': {\n          description: 'The banner landmark should not be contained in another landmark',\n          help: 'Banner landmark must be at top level'\n        },\n        'landmark-contentinfo-is-top-level': {\n          description: 'The contentinfo landmark should not be contained in another landmark',\n          help: 'Contentinfo landmark must be at top level'\n        },\n        'landmark-main-is-top-level': {\n          description: 'The main landmark should not be contained in another landmark',\n          help: 'Main landmark is not at top level'\n        },\n        'landmark-no-duplicate-banner': {\n          description: 'Ensures the document has no more than one banner landmark',\n          help: 'Document contain at most one banner landmark'\n        },\n        'landmark-no-duplicate-contentinfo': {\n          description: 'Ensures the document has no more than one contentinfo landmark',\n          help: 'Document contain at most one contentinfo landmark'\n        },\n        'landmark-one-main': {\n          description: 'Ensures a navigation point to the primary content of the page. If the page contains iframes, each iframe should contain either no main landmarks or just one',\n          help: 'Page must contain one main landmark'\n        },\n        'layout-table': {\n          description: 'Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute',\n          help: 'Layout tables must not use data table elements'\n        },\n        'link-in-text-block': {\n          description: 'Links can be distinguished without relying on color',\n          help: 'Links must be distinguished from surrounding text in a way that does not rely on color'\n        },\n        'link-name': {\n          description: 'Ensures links have discernible text',\n          help: 'Links must have discernible text'\n        },\n        list: {\n          description: 'Ensures that lists are structured correctly',\n          help: '<ul> and <ol> must only directly contain <li>, <script> or <template> elements'\n        },\n        listitem: {\n          description: 'Ensures <li> elements are used semantically',\n          help: '<li> elements must be contained in a <ul> or <ol>'\n        },\n        marquee: {\n          description: 'Ensures <marquee> elements are not used',\n          help: '<marquee> elements are deprecated and must not be used'\n        },\n        'meta-refresh': {\n          description: 'Ensures <meta http-equiv=\"refresh\"> is not used',\n          help: 'Timed refresh must not exist'\n        },\n        'meta-viewport-large': {\n          description: 'Ensures <meta name=\"viewport\"> can scale a significant amount',\n          help: 'Users should be able to zoom and scale the text up to 500%'\n        },\n        'meta-viewport': {\n          description: 'Ensures <meta name=\"viewport\"> does not disable text scaling and zooming',\n          help: 'Zooming and scaling must not be disabled'\n        },\n        'object-alt': {\n          description: 'Ensures <object> elements have alternate text',\n          help: '<object> elements must have alternate text'\n        },\n        'p-as-heading': {\n          description: 'Ensure p elements are not used to style headings',\n          help: 'Bold, italic text and font-size are not used to style p elements as a heading'\n        },\n        'page-has-heading-one': {\n          description: 'Ensure that the page, or at least one of its frames contains a level-one heading',\n          help: 'Page must contain a level-one heading'\n        },\n        radiogroup: {\n          description: 'Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent',\n          help: 'Radio inputs with the same name attribute value must be part of a group'\n        },\n        region: {\n          description: 'Ensures all content is contained within a landmark region',\n          help: 'Content should be contained in a landmark region'\n        },\n        'scope-attr-valid': {\n          description: 'Ensures the scope attribute is used correctly on tables',\n          help: 'scope attribute should be used correctly'\n        },\n        'server-side-image-map': {\n          description: 'Ensures that server-side image maps are not used',\n          help: 'Server-side image maps must not be used'\n        },\n        'skip-link': {\n          description: 'Ensure all skip links have a focusable target',\n          help: 'The skip-link target should exist and be focusable'\n        },\n        tabindex: {\n          description: 'Ensures tabindex attribute values are not greater than 0',\n          help: 'Elements should not have tabindex greater than zero'\n        },\n        'table-duplicate-name': {\n          description: 'Ensure that tables do not have the same summary and caption',\n          help: 'The <caption> element should not contain the same text as the summary attribute'\n        },\n        'table-fake-caption': {\n          description: 'Ensure that tables with a caption use the <caption> element.',\n          help: 'Data or header cells should not be used to give caption to a data table.'\n        },\n        'td-has-header': {\n          description: 'Ensure that each non-empty data cell in a large table has one or more table headers',\n          help: 'All non-empty td element in table larger than 3 by 3 must have an associated table header'\n        },\n        'td-headers-attr': {\n          description: 'Ensure that each cell in a table using the headers refers to another cell in that table',\n          help: 'All cells in a table element that use the headers attribute must only refer to other cells of that same table'\n        },\n        'th-has-data-cells': {\n          description: 'Ensure that each table header in a data table refers to data cells',\n          help: 'All th elements and elements with role=columnheader/rowheader must have data cells they describe'\n        },\n        'valid-lang': {\n          description: 'Ensures lang attributes have valid values',\n          help: 'lang attribute must have a valid value'\n        },\n        'video-caption': {\n          description: 'Ensures <video> elements have captions',\n          help: '<video> elements must have captions'\n        },\n        'video-description': {\n          description: 'Ensures <video> elements have audio descriptions',\n          help: '<video> elements must have an audio description track'\n        }\n      },\n      checks: {\n        accesskeys: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Accesskey attribute value is unique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple elements with the same accesskey';\n              return out;\n            }\n          }\n        },\n        'non-empty-alt': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a non-empty alt attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no alt attribute or the alt attribute is empty';\n              return out;\n            }\n          }\n        },\n        'non-empty-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a title attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no title attribute or the title attribute is empty';\n              return out;\n            }\n          }\n        },\n        'aria-label': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'aria-label attribute exists and is not empty';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-label attribute does not exist or is empty';\n              return out;\n            }\n          }\n        },\n        'aria-labelledby': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'aria-labelledby attribute exists and references elements that are visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty or not visible';\n              return out;\n            }\n          }\n        },\n        'aria-allowed-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attributes are used correctly for the defined role';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'ARIA attribute' + (it.data && it.data.length > 1 ? 's are' : ' is') + ' not allowed:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'implicit-role-fallback': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element’s implicit ARIA role is an appropriate fallback';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element’s implicit ARIA role is not a good fallback for the (unsupported) role';\n              return out;\n            }\n          }\n        },\n        'aria-hidden-body': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'No aria-hidden attribute is present on document body';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-hidden=true should not be present on the document body';\n              return out;\n            }\n          }\n        },\n        'aria-required-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All required ARIA attributes are present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA attribute' + (it.data && it.data.length > 1 ? 's' : '') + ' not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-children': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Required ARIA children are present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA ' + (it.data && it.data.length > 1 ? 'children' : 'child') + ' role not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-parent': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Required ARIA parent role present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA parent' + (it.data && it.data.length > 1 ? 's' : '') + ' role not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        invalidrole: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA role is valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Role must be one of the valid ARIA roles';\n              return out;\n            }\n          }\n        },\n        abstractrole: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Abstract roles are not used';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Abstract roles cannot be directly used';\n              return out;\n            }\n          }\n        },\n        'aria-valid-attr-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute values are valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Invalid ARIA attribute value' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-errormessage': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Uses a supported aria-errormessage technique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-errormessage value' + (it.data && it.data.length > 1 ? 's' : '') + ' ';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' `' + value;\n                }\n              }\n              out += '` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)';\n              return out;\n            }\n          }\n        },\n        'aria-valid-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ' are valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Invalid ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        caption: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The multimedia element has a captions track';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The multimedia element does not have a captions track';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'A captions track for this element could not be found';\n              return out;\n            }\n          }\n        },\n        'is-on-screen': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is not visible';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element is visible';\n              return out;\n            }\n          }\n        },\n        'non-empty-if-present': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element ';\n              if (it.data) {\n                out += 'has a non-empty value attribute';\n              } else {\n                out += 'does not have a value attribute';\n              }\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has a value attribute and the value attribute is empty';\n              return out;\n            }\n          }\n        },\n        'non-empty-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a non-empty value attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no value attribute or the value attribute is empty';\n              return out;\n            }\n          }\n        },\n        'button-has-visible-text': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has inner text that is visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have inner text that is visible to screen readers';\n              return out;\n            }\n          }\n        },\n        'role-presentation': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s default semantics were overriden with role=\"presentation\"';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s default semantics were not overridden with role=\"presentation\"';\n              return out;\n            }\n          }\n        },\n        'role-none': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s default semantics were overriden with role=\"none\"';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s default semantics were not overridden with role=\"none\"';\n              return out;\n            }\n          }\n        },\n        'focusable-no-name': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is not in tab order or has accessible text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element is in tab order and does not have accessible text';\n              return out;\n            }\n          }\n        },\n        'internal-link-present': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Valid skip link found';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'No valid skip link found';\n              return out;\n            }\n          }\n        },\n        'header-present': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has a header';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page does not have a header';\n              return out;\n            }\n          }\n        },\n        landmark: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has a landmark region';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page does not have a landmark region';\n              return out;\n            }\n          }\n        },\n        'group-labelledby': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All elements with the name \"' + it.data.name + '\" reference the same element with aria-labelledby';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'All elements with the name \"' + it.data.name + '\" do not reference the same element with aria-labelledby';\n              return out;\n            }\n          }\n        },\n        fieldset: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is contained in a fieldset';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '';\n              var code = it.data && it.data.failureCode;\n              if (code === 'no-legend') {\n                out += 'Fieldset does not have a legend as its first child';\n              } else if (code === 'empty-legend') {\n                out += 'Legend does not have text that is visible to screen readers';\n              } else if (code === 'mixed-inputs') {\n                out += 'Fieldset contains unrelated inputs';\n              } else if (code === 'no-group-label') {\n                out += 'ARIA group does not have aria-label or aria-labelledby';\n              } else if (code === 'group-mixed-inputs') {\n                out += 'ARIA group contains unrelated inputs';\n              } else {\n                out += 'Element does not have a containing fieldset or ARIA group';\n              }\n              return out;\n            }\n          }\n        },\n        'color-contrast': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has sufficient color contrast of ' + it.data.contrastRatio;\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has insufficient color contrast of ' + it.data.contrastRatio + ' (foreground color: ' + it.data.fgColor + ', background color: ' + it.data.bgColor + ', font size: ' + it.data.fontSize + ', font weight: ' + it.data.fontWeight + '). Expected contrast ratio of ' + it.data.expectedContrastRatio;\n              return out;\n            },\n            incomplete: {\n              bgImage: 'Element\\'s background color could not be determined due to a background image',\n              bgGradient: 'Element\\'s background color could not be determined due to a background gradient',\n              imgNode: 'Element\\'s background color could not be determined because element contains an image node',\n              bgOverlap: 'Element\\'s background color could not be determined because it is overlapped by another element',\n              fgAlpha: 'Element\\'s foreground color could not be determined because of alpha transparency',\n              elmPartiallyObscured: 'Element\\'s background color could not be determined because it\\'s partially obscured by another element',\n              elmPartiallyObscuring: 'Element\\'s background color could not be determined because it partially overlaps other elements',\n              outsideViewport: 'Element\\'s background color could not be determined because it\\'s outside the viewport',\n              equalRatio: 'Element has a 1:1 contrast ratio with the background',\n              default: 'Unable to determine contrast ratio'\n            }\n          }\n        },\n        'structured-dlitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'When not empty, element has both <dt> and <dd> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'When not empty, element does not have at least one <dt> element followed by at least one <dd> element';\n              return out;\n            }\n          }\n        },\n        'only-dlitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List element only has direct children that are allowed inside <dt> or <dd> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List element has direct children that are not allowed inside <dt> or <dd> elements';\n              return out;\n            }\n          }\n        },\n        dlitem: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Description list item has a <dl> parent element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Description list item does not have a <dl> parent element';\n              return out;\n            }\n          }\n        },\n        'doc-has-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has a non-empty <title> element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document does not have a non-empty <title> element';\n              return out;\n            }\n          }\n        },\n        'duplicate-id': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no elements that share the same id attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple elements with the same id attribute: ' + it.data;\n              return out;\n            }\n          }\n        },\n        'has-visible-text': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has text that is visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have text that is visible to screen readers';\n              return out;\n            }\n          }\n        },\n        'has-widget-role': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a widget role.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have a widget role.';\n              return out;\n            }\n          }\n        },\n        'valid-scrollable-semantics': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has valid semantics for an element in the focus order.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has invalid semantics for an element in the focus order.';\n              return out;\n            }\n          }\n        },\n        'frame-tested': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The iframe was tested with axe-core';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The iframe could not be tested with axe-core';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'The iframe still has to be tested with axe-core';\n              return out;\n            }\n          }\n        },\n        'unique-frame-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s title attribute is unique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s title attribute is not unique';\n              return out;\n            }\n          }\n        },\n        'heading-order': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Heading order valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Heading order invalid';\n              return out;\n            }\n          }\n        },\n        'hidden-content': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All content on the page has been analyzed.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'There were problems analyzing the content on this page.';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it.';\n              return out;\n            }\n          }\n        },\n        'has-lang': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The <html> element has a lang attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The <html> element does not have a lang attribute';\n              return out;\n            }\n          }\n        },\n        'valid-lang': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Value of lang attribute is included in the list of valid languages';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Value of lang attribute not included in the list of valid languages';\n              return out;\n            }\n          }\n        },\n        'has-alt': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has an alt attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have an alt attribute';\n              return out;\n            }\n          }\n        },\n        'duplicate-img-label': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not duplicate existing text in <img> alt text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element contains <img> element with alt text that duplicates existing text';\n              return out;\n            }\n          }\n        },\n        'title-only': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element does not solely use title attribute for its label';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Only title used to generate label for form element';\n              return out;\n            }\n          }\n        },\n        'implicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has an implicit (wrapped) <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element does not have an implicit (wrapped) <label>';\n              return out;\n            }\n          }\n        },\n        'explicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has an explicit <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element does not have an explicit <label>';\n              return out;\n            }\n          }\n        },\n        'help-same-as-label': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Help text (title or aria-describedby) does not duplicate label text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Help text (title or aria-describedby) text is the same as the label text';\n              return out;\n            }\n          }\n        },\n        'multiple-label': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element does not have multiple <label> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element has multiple <label> elements';\n              return out;\n            }\n          }\n        },\n        'landmark-is-top-level': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The ' + it.data.role + ' landmark is at the top level.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The ' + it.data.role + ' landmark is contained in another landmark.';\n              return out;\n            }\n          }\n        },\n        'page-no-duplicate-banner': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no more than one banner landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has more than one banner landmark';\n              return out;\n            }\n          }\n        },\n        'page-no-duplicate-contentinfo': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no more than one contentinfo landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has more than one contentinfo landmark';\n              return out;\n            }\n          }\n        },\n        'page-has-main': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has at least one main landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page must have a main landmark';\n              return out;\n            }\n          }\n        },\n        'page-no-duplicate-main': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no more than one main landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has more than one main landmark';\n              return out;\n            }\n          }\n        },\n        'has-th': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use <th> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses <th> elements';\n              return out;\n            }\n          }\n        },\n        'has-caption': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use <caption> element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses <caption> element';\n              return out;\n            }\n          }\n        },\n        'has-summary': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use summary attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses summary attribute';\n              return out;\n            }\n          }\n        },\n        'link-in-text-block': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Links can be distinguished from surrounding text in some way other than by color';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Links need to be distinguished from surrounding text in some way other than by color';\n              return out;\n            },\n            incomplete: {\n              bgContrast: 'Element\\'s contrast ratio could not be determined. Check for a distinct hover/focus style',\n              bgImage: 'Element\\'s contrast ratio could not be determined due to a background image',\n              bgGradient: 'Element\\'s contrast ratio could not be determined due to a background gradient',\n              imgNode: 'Element\\'s contrast ratio could not be determined because element contains an image node',\n              bgOverlap: 'Element\\'s contrast ratio could not be determined because of element overlap',\n              default: 'Unable to determine contrast ratio'\n            }\n          }\n        },\n        'only-listitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List element only has direct children that are allowed inside <li> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List element has direct children that are not allowed inside <li> elements';\n              return out;\n            }\n          }\n        },\n        listitem: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List item has a <ul>, <ol> or role=\"list\" parent element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List item does not have a <ul>, <ol> or role=\"list\" parent element';\n              return out;\n            }\n          }\n        },\n        'meta-refresh': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not immediately refresh the page';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag forces timed refresh of page';\n              return out;\n            }\n          }\n        },\n        'meta-viewport-large': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not prevent significant zooming on mobile devices';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag limits zooming on mobile devices';\n              return out;\n            }\n          }\n        },\n        'meta-viewport': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not disable zooming on mobile devices';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag disables zooming on mobile devices';\n              return out;\n            }\n          }\n        },\n        'p-as-heading': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<p> elements are not styled as headings';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Heading elements should be used instead of styled p elements';\n              return out;\n            }\n          }\n        },\n        'page-has-heading-one': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has at least one level-one heading';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page must have a level-one heading';\n              return out;\n            }\n          }\n        },\n        region: {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Content contained by ARIA landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Content not contained by an ARIA landmark';\n              return out;\n            }\n          }\n        },\n        'html5-scope': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Scope attribute is only used on table header elements (<th>)';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'In HTML 5, scope attributes may only be used on table header elements (<th>)';\n              return out;\n            }\n          }\n        },\n        'scope-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Scope attribute is used correctly';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The value of the scope attribute may only be \\'row\\' or \\'col\\'';\n              return out;\n            }\n          }\n        },\n        exists: {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not exist';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element exists';\n              return out;\n            }\n          }\n        },\n        'skip-link': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Skip link target exists';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Skip link target should become visible on activation';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'No skip link target';\n              return out;\n            }\n          }\n        },\n        tabindex: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not have a tabindex greater than 0';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has a tabindex greater than 0';\n              return out;\n            }\n          }\n        },\n        'same-caption-summary': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Content of summary attribute and <caption> are not duplicated';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Content of summary attribute and <caption> element are identical';\n              return out;\n            }\n          }\n        },\n        'caption-faked': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The first row of a table is not used as a caption';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The first row of the table should be a caption instead of a table cell';\n              return out;\n            }\n          }\n        },\n        'td-has-header': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All non-empty data cells have table headers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Some non-empty data cells do not have table headers';\n              return out;\n            }\n          }\n        },\n        'td-headers-attr': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The headers attribute is exclusively used to refer to other cells in the table';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The headers attribute is not exclusively used to refer to other cells in the table';\n              return out;\n            }\n          }\n        },\n        'th-has-data-cells': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All table header cells refer to data cells';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Not all table header cells refer to data cells';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Table data cells are missing or empty';\n              return out;\n            }\n          }\n        },\n        description: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The multimedia element has an audio description track';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The multimedia element does not have an audio description track';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'An audio description track for this element could not be found';\n              return out;\n            }\n          }\n        }\n      },\n      failureSummaries: {\n        any: {\n          failureMessage: function anonymous(it) {\n            var out = 'Fix any of the following:';\n            var arr1 = it;\n            if (arr1) {\n              var value, i1 = -1, l1 = arr1.length - 1;\n              while (i1 < l1) {\n                value = arr1[i1 += 1];\n                out += '\\n  ' + value.split('\\n').join('\\n  ');\n              }\n            }\n            return out;\n          }\n        },\n        none: {\n          failureMessage: function anonymous(it) {\n            var out = 'Fix all of the following:';\n            var arr1 = it;\n            if (arr1) {\n              var value, i1 = -1, l1 = arr1.length - 1;\n              while (i1 < l1) {\n                value = arr1[i1 += 1];\n                out += '\\n  ' + value.split('\\n').join('\\n  ');\n              }\n            }\n            return out;\n          }\n        }\n      },\n      incompleteFallbackMessage: function anonymous(it) {\n        var out = 'aXe couldn\\'t tell the reason. Time to break out the element inspector!';\n        return out;\n      }\n    },\n    rules: [ {\n      id: 'accesskeys',\n      selector: '[accesskey]',\n      excludeHidden: false,\n      tags: [ 'wcag2a', 'wcag211', 'cat.keyboard' ],\n      all: [],\n      any: [],\n      none: [ 'accesskeys' ]\n    }, {\n      id: 'area-alt',\n      selector: 'map area[href]',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-alt', 'non-empty-title', 'aria-label', 'aria-labelledby' ],\n      none: []\n    }, {\n      id: 'aria-allowed-attr',\n      matches: function matches(node, virtualNode) {\n        var role = node.getAttribute('role');\n        if (!role) {\n          role = axe.commons.aria.implicitRole(node);\n        }\n        var allowed = axe.commons.aria.allowedAttr(role);\n        if (role && allowed) {\n          var aria = /^aria-/;\n          if (node.hasAttributes()) {\n            var attrs = node.attributes;\n            for (var i = 0, l = attrs.length; i < l; i++) {\n              if (aria.test(attrs[i].name)) {\n                return true;\n              }\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [ 'aria-allowed-attr' ],\n      none: []\n    }, {\n      id: 'aria-dpub-role-fallback',\n      selector: '[role]',\n      matches: function matches(node, virtualNode) {\n        var role = node.getAttribute('role');\n        return [ 'doc-backlink', 'doc-biblioentry', 'doc-biblioref', 'doc-cover', 'doc-endnote', 'doc-glossref', 'doc-noteref' ].includes(role);\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [ 'implicit-role-fallback' ],\n      any: [],\n      none: []\n    }, {\n      id: 'aria-hidden-body',\n      selector: 'body',\n      excludeHidden: false,\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [],\n      any: [ 'aria-hidden-body' ],\n      none: []\n    }, {\n      id: 'aria-required-attr',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [ 'aria-required-attr' ],\n      none: []\n    }, {\n      id: 'aria-required-children',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'aria-required-children' ],\n      none: []\n    }, {\n      id: 'aria-required-parent',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'aria-required-parent' ],\n      none: []\n    }, {\n      id: 'aria-roles',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [],\n      none: [ 'invalidrole', 'abstractrole' ]\n    }, {\n      id: 'aria-valid-attr-value',\n      matches: function matches(node, virtualNode) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131', 'wcag411', 'wcag412' ],\n      all: [ {\n        options: [],\n        id: 'aria-valid-attr-value'\n      }, 'aria-errormessage' ],\n      any: [],\n      none: []\n    }, {\n      id: 'aria-valid-attr',\n      matches: function matches(node, virtualNode) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ {\n        options: [],\n        id: 'aria-valid-attr'\n      } ],\n      none: []\n    }, {\n      id: 'audio-caption',\n      selector: 'audio',\n      excludeHidden: false,\n      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag121', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [],\n      none: [ 'caption' ]\n    }, {\n      id: 'blink',\n      selector: 'blink',\n      excludeHidden: false,\n      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag222', 'section508', 'section508.22.j' ],\n      all: [],\n      any: [],\n      none: [ 'is-on-screen' ]\n    }, {\n      id: 'button-name',\n      selector: 'button, [role=\"button\"], input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]',\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag412', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-if-present', 'non-empty-value', 'button-has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n      none: [ 'focusable-no-name' ]\n    }, {\n      id: 'bypass',\n      selector: 'html',\n      pageLevel: true,\n      matches: function matches(node, virtualNode) {\n        return !!node.querySelector('a[href]');\n      },\n      tags: [ 'cat.keyboard', 'wcag2a', 'wcag241', 'section508', 'section508.22.o' ],\n      all: [],\n      any: [ 'internal-link-present', 'header-present', 'landmark' ],\n      none: []\n    }, {\n      id: 'checkboxgroup',\n      selector: 'input[type=checkbox][name]',\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [ 'group-labelledby', 'fieldset' ],\n      none: []\n    }, {\n      id: 'color-contrast',\n      matches: function matches(node, virtualNode) {\n        var nodeName = node.nodeName.toUpperCase(), nodeType = node.type;\n        if (node.getAttribute('aria-disabled') === 'true' || axe.commons.dom.findUpVirtual(virtualNode, '[aria-disabled=\"true\"]')) {\n          return false;\n        }\n        if (nodeName === 'INPUT') {\n          return [ 'hidden', 'range', 'color', 'checkbox', 'radio', 'image' ].indexOf(nodeType) === -1 && !node.disabled;\n        }\n        if (nodeName === 'SELECT') {\n          return !!node.options.length && !node.disabled;\n        }\n        if (nodeName === 'TEXTAREA') {\n          return !node.disabled;\n        }\n        if (nodeName === 'OPTION') {\n          return false;\n        }\n        if (nodeName === 'BUTTON' && node.disabled || axe.commons.dom.findUpVirtual(virtualNode, 'button[disabled]')) {\n          return false;\n        }\n        if (nodeName === 'FIELDSET' && node.disabled || axe.commons.dom.findUpVirtual(virtualNode, 'fieldset[disabled]')) {\n          return false;\n        }\n        var nodeParentLabel = axe.commons.dom.findUpVirtual(virtualNode, 'label');\n        if (nodeName === 'LABEL' || nodeParentLabel) {\n          var relevantNode = node;\n          var relevantVirtualNode = virtualNode;\n          if (nodeParentLabel) {\n            relevantNode = nodeParentLabel;\n            relevantVirtualNode = axe.utils.getNodeFromTree(axe._tree[0], nodeParentLabel);\n          }\n          var doc = axe.commons.dom.getRootNode(relevantNode);\n          var candidate = relevantNode.htmlFor && doc.getElementById(relevantNode.htmlFor);\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n          var candidate = axe.utils.querySelectorAll(relevantVirtualNode, 'input:not([type=\"hidden\"]):not([type=\"image\"])' + ':not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]), select, textarea');\n          if (candidate.length && candidate[0].actualNode.disabled) {\n            return false;\n          }\n        }\n        if (node.getAttribute('id')) {\n          var id = axe.commons.utils.escapeSelector(node.getAttribute('id'));\n          var _doc = axe.commons.dom.getRootNode(node);\n          var candidate = _doc.querySelector('[aria-labelledby~=' + id + ']');\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n        }\n        if (axe.commons.text.visibleVirtual(virtualNode, false, true) === '') {\n          return false;\n        }\n        var range = document.createRange(), childNodes = virtualNode.children, length = childNodes.length, child, index;\n        for (index = 0; index < length; index++) {\n          child = childNodes[index];\n          if (child.actualNode.nodeType === 3 && axe.commons.text.sanitize(child.actualNode.nodeValue) !== '') {\n            range.selectNodeContents(child.actualNode);\n          }\n        }\n        var rects = range.getClientRects();\n        length = rects.length;\n        for (index = 0; index < length; index++) {\n          if (axe.commons.dom.visuallyOverlaps(rects[index], node)) {\n            return true;\n          }\n        }\n        return false;\n      },\n      excludeHidden: false,\n      options: {\n        noScroll: false\n      },\n      tags: [ 'cat.color', 'wcag2aa', 'wcag143' ],\n      all: [],\n      any: [ 'color-contrast' ],\n      none: []\n    }, {\n      id: 'definition-list',\n      selector: 'dl',\n      matches: function matches(node, virtualNode) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'structured-dlitems', 'only-dlitems' ]\n    }, {\n      id: 'dlitem',\n      selector: 'dd, dt',\n      matches: function matches(node, virtualNode) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'dlitem' ],\n      none: []\n    }, {\n      id: 'document-title',\n      selector: 'html',\n      matches: function matches(node, virtualNode) {\n        return node.ownerDocument.defaultView.self === node.ownerDocument.defaultView.top;\n      },\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag242' ],\n      all: [],\n      any: [ 'doc-has-title' ],\n      none: []\n    }, {\n      id: 'duplicate-id',\n      selector: '[id]',\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ 'duplicate-id' ],\n      none: []\n    }, {\n      id: 'empty-heading',\n      selector: 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]',\n      matches: function matches(node, virtualNode) {\n        var explicitRoles = void 0;\n        if (node.hasAttribute('role')) {\n          explicitRoles = node.getAttribute('role').split(/\\s+/i).filter(axe.commons.aria.isValidRole);\n        }\n        if (explicitRoles && explicitRoles.length > 0) {\n          return explicitRoles.includes('heading');\n        } else {\n          return axe.commons.aria.implicitRole(node) === 'heading';\n        }\n      },\n      tags: [ 'cat.name-role-value', 'best-practice' ],\n      all: [],\n      any: [ 'has-visible-text' ],\n      none: []\n    }, {\n      id: 'focus-order-semantics',\n      selector: 'div, h1, h2, h3, h4, h5, h6, [role=heading], p, span',\n      matches: function matches(node, virtualNode) {\n        return axe.commons.dom.insertedIntoFocusOrder(node);\n      },\n      tags: [ 'cat.keyboard', 'best-practice', 'experimental' ],\n      all: [],\n      any: [ {\n        options: [],\n        id: 'has-widget-role'\n      }, {\n        options: [],\n        id: 'valid-scrollable-semantics'\n      } ],\n      none: []\n    }, {\n      id: 'frame-tested',\n      selector: 'frame, iframe',\n      tags: [ 'cat.structure', 'review-item' ],\n      all: [ {\n        options: {\n          isViolation: false\n        },\n        id: 'frame-tested'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'frame-title-unique',\n      selector: 'frame[title], iframe[title]',\n      matches: function matches(node, virtualNode) {\n        var title = node.getAttribute('title');\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      },\n      tags: [ 'cat.text-alternatives', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'unique-frame-title' ]\n    }, {\n      id: 'frame-title',\n      selector: 'frame, iframe',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag241', 'section508', 'section508.22.i' ],\n      all: [],\n      any: [ 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'heading-order',\n      selector: 'h1, h2, h3, h4, h5, h6, [role=heading]',\n      matches: function matches(node, virtualNode) {\n        var explicitRoles = void 0;\n        if (node.hasAttribute('role')) {\n          explicitRoles = node.getAttribute('role').split(/\\s+/i).filter(axe.commons.aria.isValidRole);\n        }\n        if (explicitRoles && explicitRoles.length > 0) {\n          return explicitRoles.includes('heading');\n        } else {\n          return axe.commons.aria.implicitRole(node) === 'heading';\n        }\n      },\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'heading-order' ],\n      none: []\n    }, {\n      id: 'hidden-content',\n      selector: '*',\n      excludeHidden: false,\n      tags: [ 'cat.structure', 'experimental', 'review-item' ],\n      all: [],\n      any: [ 'hidden-content' ],\n      none: []\n    }, {\n      id: 'html-has-lang',\n      selector: 'html',\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [],\n      any: [ 'has-lang' ],\n      none: []\n    }, {\n      id: 'html-lang-valid',\n      selector: 'html[lang]',\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [],\n      any: [],\n      none: [ 'valid-lang' ]\n    }, {\n      id: 'image-alt',\n      selector: 'img, [role=\\'img\\']:not(svg)',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-alt', 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'image-redundant-alt',\n      selector: 'button, [role=\"button\"], a[href], p, li, td, th',\n      tags: [ 'cat.text-alternatives', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'duplicate-img-label' ]\n    }, {\n      id: 'input-image-alt',\n      selector: 'input[type=\"image\"]',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-alt', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n      none: []\n    }, {\n      id: 'label-title-only',\n      selector: 'input, select, textarea',\n      matches: function matches(node, virtualNode) {\n        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n          return true;\n        }\n        var type = node.getAttribute('type').toLowerCase();\n        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n      },\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'title-only' ]\n    }, {\n      id: 'label',\n      selector: 'input, select, textarea',\n      matches: function matches(node, virtualNode) {\n        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n          return true;\n        }\n        var type = node.getAttribute('type').toLowerCase();\n        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n      },\n      tags: [ 'cat.forms', 'wcag2a', 'wcag332', 'wcag131', 'section508', 'section508.22.n' ],\n      all: [],\n      any: [ 'aria-label', 'aria-labelledby', 'implicit-label', 'explicit-label', 'non-empty-title' ],\n      none: [ 'help-same-as-label', 'multiple-label' ]\n    }, {\n      id: 'landmark-banner-is-top-level',\n      selector: 'header:not([role]), [role=banner]',\n      matches: function matches(node, virtualNode) {\n        var nativeScopeFilter = 'article, aside, main, nav, section';\n        return node.hasAttribute('role') || !axe.commons.dom.findUpVirtual(virtualNode, nativeScopeFilter);\n      },\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-contentinfo-is-top-level',\n      selector: 'footer:not([role]), [role=contentinfo]',\n      matches: function matches(node, virtualNode) {\n        var nativeScopeFilter = 'article, aside, main, nav, section';\n        return node.hasAttribute('role') || !axe.commons.dom.findUpVirtual(virtualNode, nativeScopeFilter);\n      },\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-main-is-top-level',\n      selector: 'main:not([role]), [role=main]',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-no-duplicate-banner',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          selector: 'header:not([role]), [role=banner]',\n          nativeScopeFilter: 'article, aside, main, nav, section'\n        },\n        id: 'page-no-duplicate-banner'\n      } ],\n      none: []\n    }, {\n      id: 'landmark-no-duplicate-contentinfo',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          selector: 'footer:not([role]), [role=contentinfo]',\n          nativeScopeFilter: 'article, aside, main, nav, section'\n        },\n        id: 'page-no-duplicate-contentinfo'\n      } ],\n      none: []\n    }, {\n      id: 'landmark-one-main',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [ {\n        options: {\n          selector: 'main:not([role]), [role=\\'main\\']'\n        },\n        id: 'page-has-main'\n      }, {\n        options: {\n          selector: 'main:not([role]), [role=\\'main\\']'\n        },\n        id: 'page-no-duplicate-main'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'layout-table',\n      selector: 'table',\n      matches: function matches(node, virtualNode) {\n        return !axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.semantics', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'has-th', 'has-caption', 'has-summary' ]\n    }, {\n      id: 'link-in-text-block',\n      selector: 'a[href], [role=link]',\n      matches: function matches(node, virtualNode) {\n        var text = axe.commons.text.sanitize(node.textContent);\n        var role = node.getAttribute('role');\n        if (role && role !== 'link') {\n          return false;\n        }\n        if (!text) {\n          return false;\n        }\n        if (!axe.commons.dom.isVisible(node, false)) {\n          return false;\n        }\n        return axe.commons.dom.isInTextBlock(node);\n      },\n      excludeHidden: false,\n      tags: [ 'cat.color', 'experimental', 'wcag2a', 'wcag141' ],\n      all: [ 'link-in-text-block' ],\n      any: [],\n      none: []\n    }, {\n      id: 'link-name',\n      selector: 'a[href], [role=link][href]',\n      matches: function matches(node, virtualNode) {\n        return node.getAttribute('role') !== 'button';\n      },\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag111', 'wcag412', 'wcag244', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n      none: [ 'focusable-no-name' ]\n    }, {\n      id: 'list',\n      selector: 'ul, ol',\n      matches: function matches(node, virtualNode) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'only-listitems' ]\n    }, {\n      id: 'listitem',\n      selector: 'li',\n      matches: function matches(node, virtualNode) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'listitem' ],\n      none: []\n    }, {\n      id: 'marquee',\n      selector: 'marquee',\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag222' ],\n      all: [],\n      any: [],\n      none: [ 'is-on-screen' ]\n    }, {\n      id: 'meta-refresh',\n      selector: 'meta[http-equiv=\"refresh\"]',\n      excludeHidden: false,\n      tags: [ 'cat.time', 'wcag2a', 'wcag2aaa', 'wcag221', 'wcag224', 'wcag325' ],\n      all: [],\n      any: [ 'meta-refresh' ],\n      none: []\n    }, {\n      id: 'meta-viewport-large',\n      selector: 'meta[name=\"viewport\"]',\n      excludeHidden: false,\n      tags: [ 'cat.sensory-and-visual-cues', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          scaleMinimum: 5,\n          lowerBound: 2\n        },\n        id: 'meta-viewport-large'\n      } ],\n      none: []\n    }, {\n      id: 'meta-viewport',\n      selector: 'meta[name=\"viewport\"]',\n      excludeHidden: false,\n      tags: [ 'cat.sensory-and-visual-cues', 'wcag2aa', 'wcag144' ],\n      all: [],\n      any: [ {\n        options: {\n          scaleMinimum: 2\n        },\n        id: 'meta-viewport'\n      } ],\n      none: []\n    }, {\n      id: 'object-alt',\n      selector: 'object',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n      none: []\n    }, {\n      id: 'p-as-heading',\n      selector: 'p',\n      matches: function matches(node, virtualNode) {\n        var children = Array.from(node.parentNode.childNodes);\n        var nodeText = node.textContent.trim();\n        var isSentence = /[.!?:;](?![.!?:;])/g;\n        if (nodeText.length === 0 || (nodeText.match(isSentence) || []).length >= 2) {\n          return false;\n        }\n        var siblingsAfter = children.slice(children.indexOf(node) + 1).filter(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P' && elm.textContent.trim() !== '';\n        });\n        return siblingsAfter.length !== 0;\n      },\n      tags: [ 'cat.semantics', 'wcag2a', 'wcag131', 'experimental' ],\n      all: [ {\n        options: {\n          margins: [ {\n            weight: 150,\n            italic: true\n          }, {\n            weight: 150,\n            size: 1.15\n          }, {\n            italic: true,\n            size: 1.15\n          }, {\n            size: 1.4\n          } ]\n        },\n        id: 'p-as-heading'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'page-has-heading-one',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [ {\n        options: {\n          selector: 'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'\n        },\n        id: 'page-has-heading-one'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'radiogroup',\n      selector: 'input[type=radio][name]',\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [ 'group-labelledby', 'fieldset' ],\n      none: []\n    }, {\n      id: 'region',\n      selector: 'html',\n      pageLevel: true,\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'region' ],\n      none: []\n    }, {\n      id: 'scope-attr-valid',\n      selector: 'td[scope], th[scope]',\n      tags: [ 'cat.tables', 'best-practice' ],\n      all: [ 'html5-scope', 'scope-value' ],\n      any: [],\n      none: []\n    }, {\n      id: 'server-side-image-map',\n      selector: 'img[ismap]',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag211', 'section508', 'section508.22.f' ],\n      all: [],\n      any: [],\n      none: [ 'exists' ]\n    }, {\n      id: 'skip-link',\n      selector: 'a[href]',\n      matches: function matches(node, virtualNode) {\n        var href = node.getAttribute('href');\n        return href[0] === '#' && href.length > 1;\n      },\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'skip-link' ],\n      none: []\n    }, {\n      id: 'tabindex',\n      selector: '[tabindex]',\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'tabindex' ],\n      none: []\n    }, {\n      id: 'table-duplicate-name',\n      selector: 'table',\n      tags: [ 'cat.tables', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'same-caption-summary' ]\n    }, {\n      id: 'table-fake-caption',\n      selector: 'table',\n      matches: function matches(node, virtualNode) {\n        return axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'caption-faked' ],\n      any: [],\n      none: []\n    }, {\n      id: 'td-has-header',\n      selector: 'table',\n      matches: function matches(node, virtualNode) {\n        if (axe.commons.table.isDataTable(node)) {\n          var tableArray = axe.commons.table.toArray(node);\n          return tableArray.length >= 3 && tableArray[0].length >= 3 && tableArray[1].length >= 3 && tableArray[2].length >= 3;\n        }\n        return false;\n      },\n      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'td-has-header' ],\n      any: [],\n      none: []\n    }, {\n      id: 'td-headers-attr',\n      selector: 'table',\n      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'td-headers-attr' ],\n      any: [],\n      none: []\n    }, {\n      id: 'th-has-data-cells',\n      selector: 'table',\n      matches: function matches(node, virtualNode) {\n        return axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'th-has-data-cells' ],\n      any: [],\n      none: []\n    }, {\n      id: 'valid-lang',\n      selector: '[lang], [xml\\\\:lang]',\n      matches: function matches(node, virtualNode) {\n        return node.nodeName.toLowerCase() !== 'html';\n      },\n      tags: [ 'cat.language', 'wcag2aa', 'wcag312' ],\n      all: [],\n      any: [],\n      none: [ 'valid-lang' ]\n    }, {\n      id: 'video-caption',\n      selector: 'video',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag122', 'wcag123', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [],\n      none: [ 'caption' ]\n    }, {\n      id: 'video-description',\n      selector: 'video',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2aa', 'wcag125', 'section508', 'section508.22.b' ],\n      all: [],\n      any: [],\n      none: [ 'description' ]\n    } ],\n    checks: [ {\n      id: 'abstractrole',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return axe.commons.aria.getRoleType(node.getAttribute('role')) === 'abstract';\n      }\n    }, {\n      id: 'aria-allowed-attr',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = options || {};\n        var invalid = [];\n        var attr, attrName, allowed, role = node.getAttribute('role'), attrs = node.attributes;\n        if (!role) {\n          role = axe.commons.aria.implicitRole(node);\n        }\n        allowed = axe.commons.aria.allowedAttr(role);\n        if (Array.isArray(options[role])) {\n          allowed = axe.utils.uniqueArray(options[role].concat(allowed));\n        }\n        if (role && allowed) {\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            attr = attrs[i];\n            attrName = attr.name;\n            if (axe.commons.aria.validateAttr(attrName) && !allowed.includes(attrName)) {\n              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n            }\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'aria-hidden-body',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return node.getAttribute('aria-hidden') !== 'true';\n      }\n    }, {\n      id: 'aria-errormessage',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = Array.isArray(options) ? options : [];\n        var attr = node.getAttribute('aria-errormessage'), hasAttr = node.hasAttribute('aria-errormessage');\n        var doc = axe.commons.dom.getRootNode(node);\n        function validateAttrValue() {\n          var idref = attr && doc.getElementById(attr);\n          if (idref) {\n            return idref.getAttribute('role') === 'alert' || idref.getAttribute('aria-live') === 'assertive' || axe.utils.tokenList(node.getAttribute('aria-describedby') || '').indexOf(attr) > -1;\n          }\n        }\n        if (options.indexOf(attr) === -1 && hasAttr) {\n          if (!validateAttrValue()) {\n            this.data(attr);\n            return false;\n          }\n        }\n        return true;\n      }\n    }, {\n      id: 'has-widget-role',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var role = node.getAttribute('role');\n        if (role === null) {\n          return false;\n        }\n        var roleType = axe.commons.aria.getRoleType(role);\n        return roleType === 'widget' || roleType === 'composite';\n      },\n      options: []\n    }, {\n      id: 'implicit-role-fallback',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var role = node.getAttribute('role');\n        if (role === null || !axe.commons.aria.isValidRole(role)) {\n          return true;\n        }\n        var roleType = axe.commons.aria.getRoleType(role);\n        return axe.commons.aria.implicitRole(node) === roleType;\n      }\n    }, {\n      id: 'invalidrole',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return !axe.commons.aria.isValidRole(node.getAttribute('role'));\n      }\n    }, {\n      id: 'aria-required-attr',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = options || {};\n        var missing = [];\n        if (node.hasAttributes()) {\n          var attr, role = node.getAttribute('role'), required = axe.commons.aria.requiredAttr(role);\n          if (Array.isArray(options[role])) {\n            required = axe.utils.uniqueArray(options[role], required);\n          }\n          if (role && required) {\n            for (var i = 0, l = required.length; i < l; i++) {\n              attr = required[i];\n              if (!node.getAttribute(attr)) {\n                missing.push(attr);\n              }\n            }\n          }\n        }\n        if (missing.length) {\n          this.data(missing);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'aria-required-children',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var requiredOwned = axe.commons.aria.requiredOwned, implicitNodes = axe.commons.aria.implicitNodes, matchesSelector = axe.commons.utils.matchesSelector, idrefs = axe.commons.dom.idrefs;\n        function owns(node, virtualTree, role, ariaOwned) {\n          if (node === null) {\n            return false;\n          }\n          var implicit = implicitNodes(role), selector = [ '[role=\"' + role + '\"]' ];\n          if (implicit) {\n            selector = selector.concat(implicit);\n          }\n          selector = selector.join(',');\n          return ariaOwned ? matchesSelector(node, selector) || !!axe.utils.querySelectorAll(virtualTree, selector)[0] : !!axe.utils.querySelectorAll(virtualTree, selector)[0];\n        }\n        function ariaOwns(nodes, role) {\n          var index, length;\n          for (index = 0, length = nodes.length; index < length; index++) {\n            if (nodes[index] === null) {\n              continue;\n            }\n            var virtualTree = axe.utils.getNodeFromTree(axe._tree[0], nodes[index]);\n            if (owns(nodes[index], virtualTree, role, true)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        function missingRequiredChildren(node, childRoles, all, role) {\n          var i, l = childRoles.length, missing = [], ownedElements = idrefs(node, 'aria-owns');\n          for (i = 0; i < l; i++) {\n            var r = childRoles[i];\n            if (owns(node, virtualNode, r) || ariaOwns(ownedElements, r)) {\n              if (!all) {\n                return null;\n              }\n            } else {\n              if (all) {\n                missing.push(r);\n              }\n            }\n          }\n          if (role === 'combobox') {\n            var textboxIndex = missing.indexOf('textbox');\n            var textTypeInputs = [ 'text', 'search', 'email', 'url', 'tel' ];\n            if (textboxIndex >= 0 && node.tagName === 'INPUT' && textTypeInputs.includes(node.type)) {\n              missing.splice(textboxIndex, 1);\n            }\n            var listboxIndex = missing.indexOf('listbox');\n            var expanded = node.getAttribute('aria-expanded');\n            if (listboxIndex >= 0 && (!expanded || expanded === 'false')) {\n              missing.splice(listboxIndex, 1);\n            }\n          }\n          if (missing.length) {\n            return missing;\n          }\n          if (!all && childRoles.length) {\n            return childRoles;\n          }\n          return null;\n        }\n        var role = node.getAttribute('role');\n        var required = requiredOwned(role);\n        if (!required) {\n          return true;\n        }\n        var all = false;\n        var childRoles = required.one;\n        if (!childRoles) {\n          var all = true;\n          childRoles = required.all;\n        }\n        var missing = missingRequiredChildren(node, childRoles, all, role);\n        if (!missing) {\n          return true;\n        }\n        this.data(missing);\n        return false;\n      }\n    }, {\n      id: 'aria-required-parent',\n      evaluate: function evaluate(node, options, virtualNode) {\n        function getSelector(role) {\n          var impliedNative = axe.commons.aria.implicitNodes(role) || [];\n          return impliedNative.concat('[role=\"' + role + '\"]').join(',');\n        }\n        function getMissingContext(virtualNode, requiredContext, includeElement) {\n          var index, length, role = virtualNode.actualNode.getAttribute('role'), missing = [];\n          if (!requiredContext) {\n            requiredContext = axe.commons.aria.requiredContext(role);\n          }\n          if (!requiredContext) {\n            return null;\n          }\n          for (index = 0, length = requiredContext.length; index < length; index++) {\n            if (includeElement && axe.utils.matchesSelector(virtualNode.actualNode, getSelector(requiredContext[index]))) {\n              return null;\n            }\n            if (axe.commons.dom.findUpVirtual(virtualNode, getSelector(requiredContext[index]))) {\n              return null;\n            } else {\n              missing.push(requiredContext[index]);\n            }\n          }\n          return missing;\n        }\n        function getAriaOwners(element) {\n          var owners = [], o = null;\n          while (element) {\n            if (element.getAttribute('id')) {\n              var id = axe.commons.utils.escapeSelector(element.getAttribute('id'));\n              var doc = axe.commons.dom.getRootNode(element);\n              o = doc.querySelector('[aria-owns~=' + id + ']');\n              if (o) {\n                owners.push(o);\n              }\n            }\n            element = element.parentElement;\n          }\n          return owners.length ? owners : null;\n        }\n        var missingParents = getMissingContext(virtualNode);\n        if (!missingParents) {\n          return true;\n        }\n        var owners = getAriaOwners(node);\n        if (owners) {\n          for (var i = 0, l = owners.length; i < l; i++) {\n            missingParents = getMissingContext(axe.utils.getNodeFromTree(axe._tree[0], owners[i]), missingParents, true);\n            if (!missingParents) {\n              return true;\n            }\n          }\n        }\n        this.data(missingParents);\n        return false;\n      }\n    }, {\n      id: 'aria-valid-attr-value',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = Array.isArray(options) ? options : [];\n        var invalid = [], aria = /^aria-/;\n        var attr, attrName, attrs = node.attributes;\n        var skipAttrs = [ 'aria-errormessage' ];\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          attr = attrs[i];\n          attrName = attr.name;\n          if (!skipAttrs.includes(attrName)) {\n            if (options.indexOf(attrName) === -1 && aria.test(attrName) && !axe.commons.aria.validateAttrValue(node, attrName)) {\n              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n            }\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      },\n      options: []\n    }, {\n      id: 'aria-valid-attr',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = Array.isArray(options) ? options : [];\n        var invalid = [], aria = /^aria-/;\n        var attr, attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          attr = attrs[i].name;\n          if (options.indexOf(attr) === -1 && aria.test(attr) && !axe.commons.aria.validateAttr(attr)) {\n            invalid.push(attr);\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      },\n      options: []\n    }, {\n      id: 'valid-scrollable-semantics',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS = {\n          ARTICLE: true,\n          ASIDE: true,\n          NAV: true,\n          SECTION: true\n        };\n        var VALID_ROLES_FOR_SCROLLABLE_REGIONS = {\n          banner: false,\n          complementary: true,\n          contentinfo: true,\n          form: true,\n          main: true,\n          navigation: true,\n          region: true,\n          search: false\n        };\n        function validScrollableTagName(node) {\n          var tagName = node.tagName.toUpperCase();\n          return VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS[tagName] || false;\n        }\n        function validScrollableRole(node) {\n          var role = node.getAttribute('role');\n          if (!role) {\n            return false;\n          }\n          return VALID_ROLES_FOR_SCROLLABLE_REGIONS[role.toLowerCase()] || false;\n        }\n        function validScrollableSemantics(node) {\n          return validScrollableRole(node) || validScrollableTagName(node);\n        }\n        return validScrollableSemantics(node);\n      },\n      options: []\n    }, {\n      id: 'color-contrast',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!axe.commons.dom.isVisible(node, false)) {\n          return true;\n        }\n        var noScroll = !!(options || {}).noScroll;\n        var bgNodes = [], bgColor = axe.commons.color.getBackgroundColor(node, bgNodes, noScroll), fgColor = axe.commons.color.getForegroundColor(node, noScroll);\n        var nodeStyle = window.getComputedStyle(node);\n        var fontSize = parseFloat(nodeStyle.getPropertyValue('font-size'));\n        var fontWeight = nodeStyle.getPropertyValue('font-weight');\n        var bold = [ 'bold', 'bolder', '600', '700', '800', '900' ].indexOf(fontWeight) !== -1;\n        var cr = axe.commons.color.hasValidContrastRatio(bgColor, fgColor, fontSize, bold);\n        var truncatedResult = Math.floor(cr.contrastRatio * 100) / 100;\n        var missing;\n        if (bgColor === null) {\n          missing = axe.commons.color.incompleteData.get('bgColor');\n        }\n        var equalRatio = false;\n        if (truncatedResult === 1) {\n          equalRatio = true;\n          missing = axe.commons.color.incompleteData.set('bgColor', 'equalRatio');\n        }\n        var data = {\n          fgColor: fgColor ? fgColor.toHexString() : undefined,\n          bgColor: bgColor ? bgColor.toHexString() : undefined,\n          contrastRatio: cr ? truncatedResult : undefined,\n          fontSize: (fontSize * 72 / 96).toFixed(1) + 'pt',\n          fontWeight: bold ? 'bold' : 'normal',\n          missingData: missing,\n          expectedContrastRatio: cr.expectedContrastRatio + ':1'\n        };\n        this.data(data);\n        if (fgColor === null || bgColor === null || equalRatio) {\n          missing = null;\n          axe.commons.color.incompleteData.clear();\n          this.relatedNodes(bgNodes);\n          return undefined;\n        } else if (!cr.isValid) {\n          this.relatedNodes(bgNodes);\n        }\n        return cr.isValid;\n      }\n    }, {\n      id: 'link-in-text-block',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var _axe$commons = axe.commons, color = _axe$commons.color, dom = _axe$commons.dom;\n        function getContrast(color1, color2) {\n          var c1lum = color1.getRelativeLuminance();\n          var c2lum = color2.getRelativeLuminance();\n          return (Math.max(c1lum, c2lum) + .05) / (Math.min(c1lum, c2lum) + .05);\n        }\n        var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n        function isBlock(elm) {\n          var display = window.getComputedStyle(elm).getPropertyValue('display');\n          return blockLike.indexOf(display) !== -1 || display.substr(0, 6) === 'table-';\n        }\n        if (isBlock(node)) {\n          return false;\n        }\n        var parentBlock = dom.getComposedParent(node);\n        while (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n          parentBlock = dom.getComposedParent(parentBlock);\n        }\n        this.relatedNodes([ parentBlock ]);\n        if (color.elementIsDistinct(node, parentBlock)) {\n          return true;\n        } else {\n          var nodeColor, parentColor;\n          nodeColor = color.getForegroundColor(node);\n          parentColor = color.getForegroundColor(parentBlock);\n          if (!nodeColor || !parentColor) {\n            return undefined;\n          }\n          var contrast = getContrast(nodeColor, parentColor);\n          if (contrast === 1) {\n            return true;\n          } else if (contrast >= 3) {\n            axe.commons.color.incompleteData.set('fgColor', 'bgContrast');\n            this.data({\n              missingData: axe.commons.color.incompleteData.get('fgColor')\n            });\n            axe.commons.color.incompleteData.clear();\n            return undefined;\n          }\n          nodeColor = color.getBackgroundColor(node);\n          parentColor = color.getBackgroundColor(parentBlock);\n          if (!nodeColor || !parentColor || getContrast(nodeColor, parentColor) >= 3) {\n            var reason = void 0;\n            if (!nodeColor || !parentColor) {\n              reason = axe.commons.color.incompleteData.get('bgColor');\n            } else {\n              reason = 'bgContrast';\n            }\n            axe.commons.color.incompleteData.set('fgColor', reason);\n            this.data({\n              missingData: axe.commons.color.incompleteData.get('fgColor')\n            });\n            axe.commons.color.incompleteData.clear();\n            return undefined;\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'fieldset',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var failureCode, self = this;\n        function getUnrelatedElements(parent, name) {\n          return axe.commons.utils.toArray(parent.querySelectorAll('select,textarea,button,input:not([name=\"' + name + '\"]):not([type=\"hidden\"])'));\n        }\n        function checkFieldset(group, name) {\n          var firstNode = group.firstElementChild;\n          if (!firstNode || firstNode.nodeName.toUpperCase() !== 'LEGEND') {\n            self.relatedNodes([ group ]);\n            failureCode = 'no-legend';\n            return false;\n          }\n          if (!axe.commons.text.accessibleText(firstNode)) {\n            self.relatedNodes([ firstNode ]);\n            failureCode = 'empty-legend';\n            return false;\n          }\n          var otherElements = getUnrelatedElements(group, name);\n          if (otherElements.length) {\n            self.relatedNodes(otherElements);\n            failureCode = 'mixed-inputs';\n            return false;\n          }\n          return true;\n        }\n        function checkARIAGroup(group, name) {\n          var hasLabelledByText = axe.commons.dom.idrefs(group, 'aria-labelledby').some(function(element) {\n            return element && axe.commons.text.accessibleText(element);\n          });\n          var ariaLabel = group.getAttribute('aria-label');\n          if (!hasLabelledByText && !(ariaLabel && axe.commons.text.sanitize(ariaLabel))) {\n            self.relatedNodes(group);\n            failureCode = 'no-group-label';\n            return false;\n          }\n          var otherElements = getUnrelatedElements(group, name);\n          if (otherElements.length) {\n            self.relatedNodes(otherElements);\n            failureCode = 'group-mixed-inputs';\n            return false;\n          }\n          return true;\n        }\n        function spliceCurrentNode(nodes, current) {\n          return axe.commons.utils.toArray(nodes).filter(function(candidate) {\n            return candidate !== current;\n          });\n        }\n        function runCheck(virtualNode) {\n          var name = axe.commons.utils.escapeSelector(virtualNode.actualNode.name);\n          var root = axe.commons.dom.getRootNode(virtualNode.actualNode);\n          var matchingNodes = root.querySelectorAll('input[type=\"' + axe.commons.utils.escapeSelector(virtualNode.actualNode.type) + '\"][name=\"' + name + '\"]');\n          if (matchingNodes.length < 2) {\n            return true;\n          }\n          var fieldset = axe.commons.dom.findUpVirtual(virtualNode, 'fieldset');\n          var group = axe.commons.dom.findUpVirtual(virtualNode, '[role=\"group\"]' + (virtualNode.actualNode.type === 'radio' ? ',[role=\"radiogroup\"]' : ''));\n          if (!group && !fieldset) {\n            failureCode = 'no-group';\n            self.relatedNodes(spliceCurrentNode(matchingNodes, virtualNode.actualNode));\n            return false;\n          } else if (fieldset) {\n            return checkFieldset(fieldset, name);\n          } else {\n            return checkARIAGroup(group, name);\n          }\n        }\n        var data = {\n          name: node.getAttribute('name'),\n          type: node.getAttribute('type')\n        };\n        var result = runCheck(virtualNode);\n        if (!result) {\n          data.failureCode = failureCode;\n        }\n        this.data(data);\n        return result;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(result) {\n          if (result.result) {\n            return true;\n          }\n          var data = result.data;\n          if (data) {\n            seen[data.type] = seen[data.type] || {};\n            if (!seen[data.type][data.name]) {\n              seen[data.type][data.name] = [ data ];\n              return true;\n            }\n            var hasBeenSeen = seen[data.type][data.name].some(function(candidate) {\n              return candidate.failureCode === data.failureCode;\n            });\n            if (!hasBeenSeen) {\n              seen[data.type][data.name].push(data);\n            }\n            return !hasBeenSeen;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'group-labelledby',\n      evaluate: function evaluate(node, options, virtualNode) {\n        this.data({\n          name: node.getAttribute('name'),\n          type: node.getAttribute('type')\n        });\n        var doc = axe.commons.dom.getRootNode(node);\n        var matchingNodes = doc.querySelectorAll('input[type=\"' + axe.commons.utils.escapeSelector(node.type) + '\"][name=\"' + axe.commons.utils.escapeSelector(node.name) + '\"]');\n        if (matchingNodes.length <= 1) {\n          return true;\n        }\n        return [].map.call(matchingNodes, function(m) {\n          var l = m.getAttribute('aria-labelledby');\n          return l ? l.split(/\\s+/) : [];\n        }).reduce(function(prev, curr) {\n          return prev.filter(function(n) {\n            return curr.includes(n);\n          });\n        }).filter(function(n) {\n          var labelNode = doc.getElementById(n);\n          return labelNode && axe.commons.text.accessibleText(labelNode, true);\n        }).length !== 0;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(result) {\n          var data = result.data;\n          if (data) {\n            seen[data.type] = seen[data.type] || {};\n            if (!seen[data.type][data.name]) {\n              seen[data.type][data.name] = true;\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'accesskeys',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (axe.commons.dom.isVisible(node, false)) {\n          this.data(node.getAttribute('accesskey'));\n          this.relatedNodes([ node ]);\n        }\n        return true;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(r) {\n          if (!r.data) {\n            return false;\n          }\n          var key = r.data.toUpperCase();\n          if (!seen[key]) {\n            seen[key] = r;\n            r.relatedNodes = [];\n            return true;\n          }\n          seen[key].relatedNodes.push(r.relatedNodes[0]);\n          return false;\n        }).map(function(r) {\n          r.result = !!r.relatedNodes.length;\n          return r;\n        });\n      }\n    }, {\n      id: 'focusable-no-name',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var tabIndex = node.getAttribute('tabindex'), inFocusOrder = axe.commons.dom.isFocusable(node) && tabIndex > -1;\n        if (!inFocusOrder) {\n          return false;\n        }\n        return !axe.commons.text.accessibleTextVirtual(virtualNode);\n      }\n    }, {\n      id: 'landmark-is-top-level',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var landmarks = axe.commons.aria.getRolesByType('landmark');\n        var parent = axe.commons.dom.getComposedParent(node);\n        this.data({\n          role: node.getAttribute('role') || axe.commons.aria.implicitRole(node)\n        });\n        while (parent) {\n          var role = parent.getAttribute('role');\n          if (!role && parent.tagName.toLowerCase() !== 'form') {\n            role = axe.commons.aria.implicitRole(parent);\n          }\n          if (role && landmarks.includes(role)) {\n            return false;\n          }\n          parent = axe.commons.dom.getComposedParent(parent);\n        }\n        return true;\n      }\n    }, {\n      id: 'page-has-heading-one',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var matchingElms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        this.relatedNodes(matchingElms.map(function(vNode) {\n          return vNode.actualNode;\n        }));\n        return matchingElms.length > 0;\n      },\n      after: function after(results, options) {\n        var elmUsedAnywhere = results.some(function(frameResult) {\n          return frameResult.result === true;\n        });\n        if (elmUsedAnywhere) {\n          results.forEach(function(result) {\n            result.result = true;\n          });\n        }\n        return results;\n      },\n      options: {\n        selector: 'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'\n      }\n    }, {\n      id: 'page-has-main',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var matchingElms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        this.relatedNodes(matchingElms.map(function(vNode) {\n          return vNode.actualNode;\n        }));\n        return matchingElms.length > 0;\n      },\n      after: function after(results, options) {\n        var elmUsedAnywhere = results.some(function(frameResult) {\n          return frameResult.result === true;\n        });\n        if (elmUsedAnywhere) {\n          results.forEach(function(result) {\n            result.result = true;\n          });\n        }\n        return results;\n      },\n      options: {\n        selector: 'main:not([role]), [role=\\'main\\']'\n      }\n    }, {\n      id: 'page-no-duplicate-banner',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        if (typeof options.nativeScopeFilter === 'string') {\n          elms = elms.filter(function(elm) {\n            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n          });\n        }\n        this.relatedNodes(elms.map(function(elm) {\n          return elm.actualNode;\n        }));\n        return elms.length <= 1;\n      },\n      options: {\n        selector: 'header:not([role]), [role=banner]',\n        nativeScopeFilter: 'article, aside, main, nav, section'\n      }\n    }, {\n      id: 'page-no-duplicate-contentinfo',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        if (typeof options.nativeScopeFilter === 'string') {\n          elms = elms.filter(function(elm) {\n            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n          });\n        }\n        this.relatedNodes(elms.map(function(elm) {\n          return elm.actualNode;\n        }));\n        return elms.length <= 1;\n      },\n      options: {\n        selector: 'footer:not([role]), [role=contentinfo]',\n        nativeScopeFilter: 'article, aside, main, nav, section'\n      }\n    }, {\n      id: 'page-no-duplicate-main',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        if (typeof options.nativeScopeFilter === 'string') {\n          elms = elms.filter(function(elm) {\n            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n          });\n        }\n        this.relatedNodes(elms.map(function(elm) {\n          return elm.actualNode;\n        }));\n        return elms.length <= 1;\n      },\n      options: {\n        selector: 'main:not([role]), [role=\\'main\\']'\n      }\n    }, {\n      id: 'tabindex',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return node.tabIndex <= 0;\n      }\n    }, {\n      id: 'duplicate-img-label',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var text = axe.commons.text.visibleVirtual(virtualNode, true).toLowerCase();\n        if (text === '') {\n          return false;\n        }\n        var images = axe.utils.querySelectorAll(virtualNode, 'img').filter(function(_ref) {\n          var actualNode = _ref.actualNode;\n          return axe.commons.dom.isVisible(actualNode) && ![ 'none', 'presentation' ].includes(actualNode.getAttribute('role'));\n        });\n        return images.some(function(img) {\n          return text === axe.commons.text.accessibleTextVirtual(img).toLowerCase();\n        });\n      }\n    }, {\n      id: 'explicit-label',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (node.getAttribute('id')) {\n          var root = axe.commons.dom.getRootNode(node);\n          var id = axe.commons.utils.escapeSelector(node.getAttribute('id'));\n          var label = root.querySelector('label[for=\"' + id + '\"]');\n          if (label) {\n            return !!axe.commons.text.accessibleText(label);\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'help-same-as-label',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var labelText = axe.commons.text.labelVirtual(virtualNode), check = node.getAttribute('title');\n        if (!labelText) {\n          return false;\n        }\n        if (!check) {\n          check = '';\n          if (node.getAttribute('aria-describedby')) {\n            var ref = axe.commons.dom.idrefs(node, 'aria-describedby');\n            check = ref.map(function(thing) {\n              return thing ? axe.commons.text.accessibleText(thing) : '';\n            }).join('');\n          }\n        }\n        return axe.commons.text.sanitize(check) === axe.commons.text.sanitize(labelText);\n      },\n      enabled: false\n    }, {\n      id: 'implicit-label',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var label = axe.commons.dom.findUpVirtual(virtualNode, 'label');\n        if (label) {\n          return !!axe.commons.text.accessibleTextVirtual(label);\n        }\n        return false;\n      }\n    }, {\n      id: 'multiple-label',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var id = axe.commons.utils.escapeSelector(node.getAttribute('id'));\n        var labels = Array.from(document.querySelectorAll('label[for=\"' + id + '\"]'));\n        var parent = node.parentNode;\n        if (labels.length) {\n          labels = labels.filter(function(label, index) {\n            if (index === 0 && !axe.commons.dom.isVisible(label, true) || axe.commons.dom.isVisible(label, true)) {\n              return label;\n            }\n          });\n        }\n        while (parent) {\n          if (parent.tagName === 'LABEL' && labels.indexOf(parent) === -1) {\n            labels.push(parent);\n          }\n          parent = parent.parentNode;\n        }\n        this.relatedNodes(labels);\n        return labels.length > 1;\n      }\n    }, {\n      id: 'title-only',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var labelText = axe.commons.text.labelVirtual(virtualNode);\n        return !labelText && !!(node.getAttribute('title') || node.getAttribute('aria-describedby'));\n      }\n    }, {\n      id: 'has-lang',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return !!(node.getAttribute('lang') || node.getAttribute('xml:lang') || '').trim();\n      }\n    }, {\n      id: 'valid-lang',\n      evaluate: function evaluate(node, options, virtualNode) {\n        function getBaseLang(lang) {\n          return lang.trim().split('-')[0].toLowerCase();\n        }\n        var langs, invalid;\n        langs = (options ? options : axe.commons.utils.validLangs()).map(getBaseLang);\n        invalid = [ 'lang', 'xml:lang' ].reduce(function(invalid, langAttr) {\n          var langVal = node.getAttribute(langAttr);\n          if (typeof langVal !== 'string') {\n            return invalid;\n          }\n          var baselangVal = getBaseLang(langVal);\n          if (baselangVal !== '' && langs.indexOf(baselangVal) === -1) {\n            invalid.push(langAttr + '=\"' + node.getAttribute(langAttr) + '\"');\n          }\n          return invalid;\n        }, []);\n        if (invalid.length) {\n          this.data(invalid);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'dlitem',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var parent = axe.commons.dom.getComposedParent(node);\n        return parent.nodeName.toUpperCase() === 'DL';\n      }\n    }, {\n      id: 'has-listitem',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return virtualNode.children.every(function(_ref2) {\n          var actualNode = _ref2.actualNode;\n          return actualNode.nodeName.toUpperCase() !== 'LI';\n        });\n      }\n    }, {\n      id: 'listitem',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var parent = axe.commons.dom.getComposedParent(node);\n        return [ 'UL', 'OL' ].includes(parent.nodeName.toUpperCase()) || (parent.getAttribute('role') || '').toLowerCase() === 'list';\n      }\n    }, {\n      id: 'only-dlitems',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var bad = [], permitted = [ 'STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE' ], hasNonEmptyTextNode = false;\n        virtualNode.children.forEach(function(_ref3) {\n          var actualNode = _ref3.actualNode;\n          var nodeName = actualNode.nodeName.toUpperCase();\n          if (actualNode.nodeType === 1 && nodeName !== 'DT' && nodeName !== 'DD' && permitted.indexOf(nodeName) === -1) {\n            bad.push(actualNode);\n          } else if (actualNode.nodeType === 3 && actualNode.nodeValue.trim() !== '') {\n            hasNonEmptyTextNode = true;\n          }\n        });\n        if (bad.length) {\n          this.relatedNodes(bad);\n        }\n        var retVal = !!bad.length || hasNonEmptyTextNode;\n        return retVal;\n      }\n    }, {\n      id: 'only-listitems',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var bad = [], permitted = [ 'STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE' ], hasNonEmptyTextNode = false;\n        virtualNode.children.forEach(function(_ref4) {\n          var actualNode = _ref4.actualNode;\n          var nodeName = actualNode.nodeName.toUpperCase();\n          if (actualNode.nodeType === 1 && nodeName !== 'LI' && permitted.indexOf(nodeName) === -1) {\n            bad.push(actualNode);\n          } else if (actualNode.nodeType === 3 && actualNode.nodeValue.trim() !== '') {\n            hasNonEmptyTextNode = true;\n          }\n        });\n        if (bad.length) {\n          this.relatedNodes(bad);\n        }\n        return !!bad.length || hasNonEmptyTextNode;\n      }\n    }, {\n      id: 'structured-dlitems',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var children = virtualNode.children;\n        if (!children || !children.length) {\n          return false;\n        }\n        var hasDt = false, hasDd = false, nodeName;\n        for (var i = 0; i < children.length; i++) {\n          nodeName = children[i].actualNode.nodeName.toUpperCase();\n          if (nodeName === 'DT') {\n            hasDt = true;\n          }\n          if (hasDt && nodeName === 'DD') {\n            return false;\n          }\n          if (nodeName === 'DD') {\n            hasDd = true;\n          }\n        }\n        return hasDt || hasDd;\n      }\n    }, {\n      id: 'caption',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var tracks = axe.utils.querySelectorAll(virtualNode, 'track');\n        if (tracks.length) {\n          return !tracks.some(function(_ref5) {\n            var actualNode = _ref5.actualNode;\n            return (actualNode.getAttribute('kind') || '').toLowerCase() === 'captions';\n          });\n        }\n        return undefined;\n      }\n    }, {\n      id: 'description',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var tracks = axe.utils.querySelectorAll(virtualNode, 'track');\n        if (tracks.length) {\n          var out = !tracks.some(function(_ref6) {\n            var actualNode = _ref6.actualNode;\n            return (actualNode.getAttribute('kind') || '').toLowerCase() === 'descriptions';\n          });\n          return out;\n        }\n        return undefined;\n      }\n    }, {\n      id: 'frame-tested',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var resolve = this.async();\n        var _Object$assign = Object.assign({\n          isViolation: false,\n          timeout: 500\n        }, options), isViolation = _Object$assign.isViolation, timeout = _Object$assign.timeout;\n        var timer = setTimeout(function() {\n          timer = setTimeout(function() {\n            timer = null;\n            resolve(isViolation ? false : undefined);\n          }, 0);\n        }, timeout);\n        axe.utils.respondable(node.contentWindow, 'axe.ping', null, undefined, function() {\n          if (timer !== null) {\n            clearTimeout(timer);\n            resolve(true);\n          }\n        });\n      },\n      options: {\n        isViolation: false\n      }\n    }, {\n      id: 'meta-viewport-large',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = options || {};\n        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n        for (var i = 0, l = parsedParams.length; i < l; i++) {\n          params = parsedParams[i].split('=');\n          var key = params.shift().toLowerCase();\n          if (key && params.length) {\n            result[key.trim()] = params.shift().trim().toLowerCase();\n          }\n        }\n        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n          return true;\n        }\n        if (!lowerBound && result['user-scalable'] === 'no') {\n          return false;\n        }\n        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n          return false;\n        }\n        return true;\n      },\n      options: {\n        scaleMinimum: 5,\n        lowerBound: 2\n      }\n    }, {\n      id: 'meta-viewport',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = options || {};\n        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n        for (var i = 0, l = parsedParams.length; i < l; i++) {\n          params = parsedParams[i].split('=');\n          var key = params.shift().toLowerCase();\n          if (key && params.length) {\n            result[key.trim()] = params.shift().trim().toLowerCase();\n          }\n        }\n        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n          return true;\n        }\n        if (!lowerBound && result['user-scalable'] === 'no') {\n          return false;\n        }\n        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n          return false;\n        }\n        return true;\n      },\n      options: {\n        scaleMinimum: 2\n      }\n    }, {\n      id: 'header-present',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return !!axe.utils.querySelectorAll(virtualNode, 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]')[0];\n      }\n    }, {\n      id: 'heading-order',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var ariaHeadingLevel = node.getAttribute('aria-level');\n        if (ariaHeadingLevel !== null) {\n          this.data(parseInt(ariaHeadingLevel, 10));\n          return true;\n        }\n        var headingLevel = node.tagName.match(/H(\\d)/);\n        if (headingLevel) {\n          this.data(parseInt(headingLevel[1], 10));\n          return true;\n        }\n        return true;\n      },\n      after: function after(results, options) {\n        if (results.length < 2) {\n          return results;\n        }\n        var prevLevel = results[0].data;\n        for (var i = 1; i < results.length; i++) {\n          if (results[i].result && results[i].data > prevLevel + 1) {\n            results[i].result = false;\n          }\n          prevLevel = results[i].data;\n        }\n        return results;\n      }\n    }, {\n      id: 'internal-link-present',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var links = axe.utils.querySelectorAll(virtualNode, 'a[href]');\n        return links.some(function(vLink) {\n          return vLink.actualNode.getAttribute('href')[0] === '#';\n        });\n      }\n    }, {\n      id: 'landmark',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return axe.utils.querySelectorAll(virtualNode, 'main, [role=\"main\"]').length > 0;\n      }\n    }, {\n      id: 'meta-refresh',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/);\n        return content === '' || parsedParams[0] === '0';\n      }\n    }, {\n      id: 'p-as-heading',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var siblings = Array.from(node.parentNode.children);\n        var currentIndex = siblings.indexOf(node);\n        options = options || {};\n        var margins = options.margins || [];\n        var nextSibling = siblings.slice(currentIndex + 1).find(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P';\n        });\n        var prevSibling = siblings.slice(0, currentIndex).reverse().find(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P';\n        });\n        function getTextContainer(elm) {\n          var nextNode = elm;\n          var outerText = elm.textContent.trim();\n          var innerText = outerText;\n          while (innerText === outerText && nextNode !== undefined) {\n            var i = -1;\n            elm = nextNode;\n            if (elm.children.length === 0) {\n              return elm;\n            }\n            do {\n              i++;\n              innerText = elm.children[i].textContent.trim();\n            } while (innerText === '' && i + 1 < elm.children.length);\n            nextNode = elm.children[i];\n          }\n          return elm;\n        }\n        function normalizeFontWeight(weight) {\n          switch (weight) {\n           case 'lighter':\n            return 100;\n\n           case 'normal':\n            return 400;\n\n           case 'bold':\n            return 700;\n\n           case 'bolder':\n            return 900;\n          }\n          weight = parseInt(weight);\n          return !isNaN(weight) ? weight : 400;\n        }\n        function getStyleValues(node) {\n          var style = window.getComputedStyle(getTextContainer(node));\n          return {\n            fontWeight: normalizeFontWeight(style.getPropertyValue('font-weight')),\n            fontSize: parseInt(style.getPropertyValue('font-size')),\n            isItalic: style.getPropertyValue('font-style') === 'italic'\n          };\n        }\n        function isHeaderStyle(styleA, styleB, margins) {\n          return margins.reduce(function(out, margin) {\n            return out || (!margin.size || styleA.fontSize / margin.size > styleB.fontSize) && (!margin.weight || styleA.fontWeight - margin.weight > styleB.fontWeight) && (!margin.italic || styleA.isItalic && !styleB.isItalic);\n          }, false);\n        }\n        var currStyle = getStyleValues(node);\n        var nextStyle = nextSibling ? getStyleValues(nextSibling) : null;\n        var prevStyle = prevSibling ? getStyleValues(prevSibling) : null;\n        if (!nextStyle || !isHeaderStyle(currStyle, nextStyle, margins)) {\n          return true;\n        }\n        var blockquote = axe.commons.dom.findUpVirtual(virtualNode, 'blockquote');\n        if (blockquote && blockquote.nodeName.toUpperCase() === 'BLOCKQUOTE') {\n          return undefined;\n        }\n        if (prevStyle && !isHeaderStyle(currStyle, prevStyle, margins)) {\n          return undefined;\n        }\n        return false;\n      },\n      options: {\n        margins: [ {\n          weight: 150,\n          italic: true\n        }, {\n          weight: 150,\n          size: 1.15\n        }, {\n          italic: true,\n          size: 1.15\n        }, {\n          size: 1.4\n        } ]\n      }\n    }, {\n      id: 'region',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var _axe$commons2 = axe.commons, dom = _axe$commons2.dom, aria = _axe$commons2.aria;\n        function getSkiplink(virtualNode) {\n          var firstLink = axe.utils.querySelectorAll(virtualNode, 'a[href]')[0];\n          if (firstLink && axe.commons.dom.getElementByReference(firstLink.actualNode, 'href')) {\n            return firstLink.actualNode;\n          }\n        }\n        var skipLink = getSkiplink(virtualNode);\n        var landmarkRoles = aria.getRolesByType('landmark');\n        var implicitLandmarks = landmarkRoles.reduce(function(arr, role) {\n          return arr.concat(aria.implicitNodes(role));\n        }, []).filter(function(r) {\n          return r !== null;\n        });\n        function isSkipLink(vNode) {\n          return skipLink && skipLink === vNode.actualNode;\n        }\n        function isLandmark(virtualNode) {\n          var node = virtualNode.actualNode;\n          var explictRole = (node.getAttribute('role') || '').trim().toLowerCase();\n          if (explictRole) {\n            if (explictRole === 'form') {\n              return !!aria.labelVirtual(virtualNode);\n            }\n            return landmarkRoles.includes(explictRole);\n          } else {\n            return implicitLandmarks.some(function(implicitSelector) {\n              var matches = axe.utils.matchesSelector(node, implicitSelector);\n              if (node.tagName.toLowerCase() === 'form') {\n                return matches && !!aria.labelVirtual(virtualNode);\n              }\n              return matches;\n            });\n          }\n        }\n        function findRegionlessElms(virtualNode) {\n          var node = virtualNode.actualNode;\n          if (isLandmark(virtualNode) || isSkipLink(virtualNode) || !dom.isVisible(node, true)) {\n            return [];\n          } else if (dom.hasContent(node, true)) {\n            return [ node ];\n          } else {\n            return virtualNode.children.filter(function(_ref7) {\n              var actualNode = _ref7.actualNode;\n              return actualNode.nodeType === 1;\n            }).map(findRegionlessElms).reduce(function(a, b) {\n              return a.concat(b);\n            }, []);\n          }\n        }\n        var regionlessNodes = findRegionlessElms(virtualNode);\n        this.relatedNodes(regionlessNodes);\n        return regionlessNodes.length === 0;\n      },\n      after: function after(results, options) {\n        return [ results[0] ];\n      }\n    }, {\n      id: 'skip-link',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var target = axe.commons.dom.getElementByReference(node, 'href');\n        if (target) {\n          return axe.commons.dom.isVisible(target, true) || undefined;\n        }\n        return false;\n      }\n    }, {\n      id: 'unique-frame-title',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var title = axe.commons.text.sanitize(node.title).trim().toLowerCase();\n        this.data(title);\n        return true;\n      },\n      after: function after(results, options) {\n        var titles = {};\n        results.forEach(function(r) {\n          titles[r.data] = titles[r.data] !== undefined ? ++titles[r.data] : 0;\n        });\n        results.forEach(function(r) {\n          r.result = !!titles[r.data];\n        });\n        return results;\n      }\n    }, {\n      id: 'aria-label',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var label = node.getAttribute('aria-label');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'aria-labelledby',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var getIdRefs = axe.commons.dom.idrefs;\n        return getIdRefs(node, 'aria-labelledby').some(function(elm) {\n          return elm && axe.commons.text.accessibleText(elm, true);\n        });\n      }\n    }, {\n      id: 'button-has-visible-text',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var nodeName = node.nodeName.toUpperCase();\n        var role = node.getAttribute('role');\n        var label = void 0;\n        if (nodeName === 'BUTTON' || role === 'button' && nodeName !== 'INPUT') {\n          label = axe.commons.text.accessibleTextVirtual(virtualNode);\n          this.data(label);\n          return !!label;\n        } else {\n          return false;\n        }\n      }\n    }, {\n      id: 'doc-has-title',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var title = document.title;\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      }\n    }, {\n      id: 'duplicate-id',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var id = node.getAttribute('id').trim();\n        if (!id) {\n          return true;\n        }\n        var root = axe.commons.dom.getRootNode(node);\n        var matchingNodes = Array.from(root.querySelectorAll('[id=\"' + axe.commons.utils.escapeSelector(id) + '\"]')).filter(function(foundNode) {\n          return foundNode !== node;\n        });\n        if (matchingNodes.length) {\n          this.relatedNodes(matchingNodes);\n        }\n        this.data(id);\n        return matchingNodes.length === 0;\n      },\n      after: function after(results, options) {\n        var uniqueIds = [];\n        return results.filter(function(r) {\n          if (uniqueIds.indexOf(r.data) === -1) {\n            uniqueIds.push(r.data);\n            return true;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'exists',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return true;\n      }\n    }, {\n      id: 'has-alt',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var nn = node.nodeName.toLowerCase();\n        return node.hasAttribute('alt') && (nn === 'img' || nn === 'input' || nn === 'area');\n      }\n    }, {\n      id: 'has-visible-text',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return axe.commons.text.accessibleTextVirtual(virtualNode).length > 0;\n      }\n    }, {\n      id: 'is-on-screen',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return axe.commons.dom.isVisible(node, false) && !axe.commons.dom.isOffscreen(node);\n      }\n    }, {\n      id: 'non-empty-alt',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var label = node.getAttribute('alt');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'non-empty-if-present',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var nodeName = node.nodeName.toUpperCase();\n        var type = (node.getAttribute('type') || '').toLowerCase();\n        var label = node.getAttribute('value');\n        this.data(label);\n        if (nodeName === 'INPUT' && [ 'submit', 'reset' ].includes(type)) {\n          return label === null;\n        }\n        return false;\n      }\n    }, {\n      id: 'non-empty-title',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var title = node.getAttribute('title');\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      }\n    }, {\n      id: 'non-empty-value',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var label = node.getAttribute('value');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'role-none',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return node.getAttribute('role') === 'none';\n      }\n    }, {\n      id: 'role-presentation',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return node.getAttribute('role') === 'presentation';\n      }\n    }, {\n      id: 'caption-faked',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var table = axe.commons.table.toGrid(node);\n        var firstRow = table[0];\n        if (table.length <= 1 || firstRow.length <= 1 || node.rows.length <= 1) {\n          return true;\n        }\n        return firstRow.reduce(function(out, curr, i) {\n          return out || curr !== firstRow[i + 1] && firstRow[i + 1] !== undefined;\n        }, false);\n      }\n    }, {\n      id: 'has-caption',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return !!node.caption;\n      }\n    }, {\n      id: 'has-summary',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return !!node.summary;\n      }\n    }, {\n      id: 'has-th',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var row, cell, badCells = [];\n        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cell = row.cells[cellIndex];\n            if (cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1) {\n              badCells.push(cell);\n            }\n          }\n        }\n        if (badCells.length) {\n          this.relatedNodes(badCells);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'html5-scope',\n      evaluate: function evaluate(node, options, virtualNode) {\n        if (!axe.commons.dom.isHTML5(document)) {\n          return true;\n        }\n        return node.nodeName.toUpperCase() === 'TH';\n      }\n    }, {\n      id: 'same-caption-summary',\n      evaluate: function evaluate(node, options, virtualNode) {\n        return !!(node.summary && node.caption) && node.summary === axe.commons.text.accessibleText(node.caption);\n      }\n    }, {\n      id: 'scope-value',\n      evaluate: function evaluate(node, options, virtualNode) {\n        options = options || {};\n        var value = node.getAttribute('scope').toLowerCase();\n        var validVals = [ 'row', 'col', 'rowgroup', 'colgroup' ] || options.values;\n        return validVals.indexOf(value) !== -1;\n      }\n    }, {\n      id: 'td-has-header',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var tableUtils = axe.commons.table;\n        var badCells = [];\n        var cells = tableUtils.getAllCells(node);\n        cells.forEach(function(cell) {\n          if (axe.commons.dom.hasContent(cell) && tableUtils.isDataCell(cell) && !axe.commons.aria.label(cell)) {\n            var hasHeaders = tableUtils.getHeaders(cell);\n            hasHeaders = hasHeaders.reduce(function(hasHeaders, header) {\n              return hasHeaders || header !== null && !!axe.commons.dom.hasContent(header);\n            }, false);\n            if (!hasHeaders) {\n              badCells.push(cell);\n            }\n          }\n        });\n        if (badCells.length) {\n          this.relatedNodes(badCells);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'td-headers-attr',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var cells = [];\n        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n          var row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cells.push(row.cells[cellIndex]);\n          }\n        }\n        var ids = cells.reduce(function(ids, cell) {\n          if (cell.getAttribute('id')) {\n            ids.push(cell.getAttribute('id'));\n          }\n          return ids;\n        }, []);\n        var badCells = cells.reduce(function(badCells, cell) {\n          var isSelf, notOfTable;\n          var headers = (cell.getAttribute('headers') || '').split(/\\s/).reduce(function(headers, header) {\n            header = header.trim();\n            if (header) {\n              headers.push(header);\n            }\n            return headers;\n          }, []);\n          if (headers.length !== 0) {\n            if (cell.getAttribute('id')) {\n              isSelf = headers.indexOf(cell.getAttribute('id').trim()) !== -1;\n            }\n            notOfTable = headers.reduce(function(fail, header) {\n              return fail || ids.indexOf(header) === -1;\n            }, false);\n            if (isSelf || notOfTable) {\n              badCells.push(cell);\n            }\n          }\n          return badCells;\n        }, []);\n        if (badCells.length > 0) {\n          this.relatedNodes(badCells);\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      id: 'th-has-data-cells',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var tableUtils = axe.commons.table;\n        var cells = tableUtils.getAllCells(node);\n        var checkResult = this;\n        var reffedHeaders = [];\n        cells.forEach(function(cell) {\n          var headers = cell.getAttribute('headers');\n          if (headers) {\n            reffedHeaders = reffedHeaders.concat(headers.split(/\\s+/));\n          }\n          var ariaLabel = cell.getAttribute('aria-labelledby');\n          if (ariaLabel) {\n            reffedHeaders = reffedHeaders.concat(ariaLabel.split(/\\s+/));\n          }\n        });\n        var headers = cells.filter(function(cell) {\n          if (axe.commons.text.sanitize(cell.textContent) === '') {\n            return false;\n          }\n          return cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1;\n        });\n        var tableGrid = tableUtils.toGrid(node);\n        var out = headers.reduce(function(res, header) {\n          if (header.getAttribute('id') && reffedHeaders.includes(header.getAttribute('id'))) {\n            return !res ? res : true;\n          }\n          var hasCell = false;\n          var pos = tableUtils.getCellPosition(header, tableGrid);\n          if (tableUtils.isColumnHeader(header)) {\n            hasCell = tableUtils.traverse('down', pos, tableGrid).reduce(function(out, cell) {\n              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isColumnHeader(cell);\n            }, false);\n          }\n          if (!hasCell && tableUtils.isRowHeader(header)) {\n            hasCell = tableUtils.traverse('right', pos, tableGrid).reduce(function(out, cell) {\n              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isRowHeader(cell);\n            }, false);\n          }\n          if (!hasCell) {\n            checkResult.relatedNodes(header);\n          }\n          return res && hasCell;\n        }, true);\n        return out ? true : undefined;\n      }\n    }, {\n      id: 'hidden-content',\n      evaluate: function evaluate(node, options, virtualNode) {\n        var whitelist = [ 'SCRIPT', 'HEAD', 'TITLE', 'NOSCRIPT', 'STYLE', 'TEMPLATE' ];\n        if (!whitelist.includes(node.tagName.toUpperCase()) && axe.commons.dom.hasContentVirtual(virtualNode)) {\n          var styles = window.getComputedStyle(node);\n          if (styles.getPropertyValue('display') === 'none') {\n            return undefined;\n          } else if (styles.getPropertyValue('visibility') === 'hidden') {\n            var parent = axe.commons.dom.getComposedParent(node);\n            var parentStyle = parent && window.getComputedStyle(parent);\n            if (!parentStyle || parentStyle.getPropertyValue('visibility') !== 'hidden') {\n              return undefined;\n            }\n          }\n        }\n        return true;\n      }\n    } ],\n    commons: function() {\n      var commons = {};\n      var aria = commons.aria = {}, lookupTable = aria.lookupTable = {};\n      lookupTable.attributes = {\n        'aria-activedescendant': {\n          type: 'idref'\n        },\n        'aria-atomic': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-autocomplete': {\n          type: 'nmtoken',\n          values: [ 'inline', 'list', 'both', 'none' ]\n        },\n        'aria-busy': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-checked': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'mixed', 'undefined' ]\n        },\n        'aria-colcount': {\n          type: 'int'\n        },\n        'aria-colindex': {\n          type: 'int'\n        },\n        'aria-colspan': {\n          type: 'int'\n        },\n        'aria-controls': {\n          type: 'idrefs'\n        },\n        'aria-current': {\n          type: 'nmtoken',\n          values: [ 'page', 'step', 'location', 'date', 'time', 'true', 'false' ]\n        },\n        'aria-describedby': {\n          type: 'idrefs'\n        },\n        'aria-disabled': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-dropeffect': {\n          type: 'nmtokens',\n          values: [ 'copy', 'move', 'reference', 'execute', 'popup', 'none' ]\n        },\n        'aria-errormessage': {\n          type: 'idref'\n        },\n        'aria-expanded': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ]\n        },\n        'aria-flowto': {\n          type: 'idrefs'\n        },\n        'aria-grabbed': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ]\n        },\n        'aria-haspopup': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'menu', 'listbox', 'tree', 'grid', 'dialog' ]\n        },\n        'aria-hidden': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-invalid': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'spelling', 'grammar' ]\n        },\n        'aria-keyshortcuts': {\n          type: 'string'\n        },\n        'aria-label': {\n          type: 'string'\n        },\n        'aria-labelledby': {\n          type: 'idrefs'\n        },\n        'aria-level': {\n          type: 'int'\n        },\n        'aria-live': {\n          type: 'nmtoken',\n          values: [ 'off', 'polite', 'assertive' ]\n        },\n        'aria-modal': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-multiline': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-multiselectable': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-orientation': {\n          type: 'nmtoken',\n          values: [ 'horizontal', 'vertical' ]\n        },\n        'aria-owns': {\n          type: 'idrefs'\n        },\n        'aria-placeholder': {\n          type: 'string'\n        },\n        'aria-posinset': {\n          type: 'int'\n        },\n        'aria-pressed': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'mixed', 'undefined' ]\n        },\n        'aria-readonly': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-relevant': {\n          type: 'nmtokens',\n          values: [ 'additions', 'removals', 'text', 'all' ]\n        },\n        'aria-required': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-rowcount': {\n          type: 'int'\n        },\n        'aria-rowindex': {\n          type: 'int'\n        },\n        'aria-rowspan': {\n          type: 'int'\n        },\n        'aria-selected': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ]\n        },\n        'aria-setsize': {\n          type: 'int'\n        },\n        'aria-sort': {\n          type: 'nmtoken',\n          values: [ 'ascending', 'descending', 'other', 'none' ]\n        },\n        'aria-valuemax': {\n          type: 'decimal'\n        },\n        'aria-valuemin': {\n          type: 'decimal'\n        },\n        'aria-valuenow': {\n          type: 'decimal'\n        },\n        'aria-valuetext': {\n          type: 'string'\n        }\n      };\n      lookupTable.globalAttributes = [ 'aria-atomic', 'aria-busy', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-keyshortcuts', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant' ];\n      lookupTable.role = {\n        alert: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        alertdialog: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-modal' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        application: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        article: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'article' ]\n        },\n        banner: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'header' ]\n        },\n        button: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-pressed' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'button', 'input[type=\"button\"]', 'input[type=\"image\"]', 'input[type=\"reset\"]', 'input[type=\"submit\"]', 'summary' ]\n        },\n        cell: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'td', 'th' ]\n        },\n        checkbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'input[type=\"checkbox\"]' ]\n        },\n        columnheader: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-required', 'aria-readonly', 'aria-selected', 'aria-sort' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'th' ]\n        },\n        combobox: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-autocomplete', 'aria-required', 'aria-activedescendant', 'aria-orientation' ]\n          },\n          owned: {\n            all: [ 'listbox', 'textbox' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        command: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        complementary: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'aside' ]\n        },\n        composite: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        contentinfo: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'footer' ]\n        },\n        definition: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'dd', 'dfn' ]\n        },\n        dialog: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-modal' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'dialog' ]\n        },\n        directory: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        document: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'body' ]\n        },\n        'doc-abstract': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        'doc-acknowledgments': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        'doc-afterword': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        'doc-appendix': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        'doc-backlink': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        'doc-biblioentry': {\n          type: 'listitem',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: [ 'doc-bibliography' ]\n        },\n        'doc-bibliography': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        'doc-biblioref': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        'doc-chapter': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-colophon': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-conclusion': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-cover': {\n          type: 'img',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-credit': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-credits': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-dedication': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-endnote': {\n          type: 'listitem',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: [ 'doc-endnotes' ]\n        },\n        'doc-endnotes': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: [ 'doc-endnote' ],\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-epigraph': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-epilogue': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-errata': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-example': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-footnote': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-foreword': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-glossary': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: [ 'term', 'definition' ],\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-glossref': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author', 'contents' ],\n          context: null\n        },\n        'doc-index': {\n          type: 'navigation',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-introduction': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-noteref': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author', 'contents' ],\n          context: null\n        },\n        'doc-notice': {\n          type: 'note',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-pagebreak': {\n          type: 'separator',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-pagelist': {\n          type: 'navigation',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-part': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-preface': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-prologue': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-pullquote': {\n          type: 'none',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-qna': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-subtitle': {\n          type: 'sectionhead',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-tip': {\n          type: 'note',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        'doc-toc': {\n          type: 'navigation',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null\n        },\n        feed: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: {\n            one: [ 'article' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        form: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'form' ]\n        },\n        grid: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-colcount', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-rowcount' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'table' ]\n        },\n        gridcell: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-selected', 'aria-readonly', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'td', 'th' ]\n        },\n        group: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'details', 'optgroup' ]\n        },\n        heading: {\n          type: 'structure',\n          attributes: {\n            required: [ 'aria-level' ],\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ]\n        },\n        img: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'img' ]\n        },\n        input: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        landmark: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        link: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'a[href]' ]\n        },\n        list: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'listitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'ol', 'ul', 'dl' ]\n        },\n        listbox: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded', 'aria-orientation' ]\n          },\n          owned: {\n            all: [ 'option' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'select' ]\n        },\n        listitem: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'list' ],\n          implicit: [ 'li', 'dt' ]\n        },\n        log: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        main: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'main' ]\n        },\n        marquee: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        math: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'math' ]\n        },\n        menu: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation' ]\n          },\n          owned: {\n            one: [ 'menuitem', 'menuitemradio', 'menuitemcheckbox' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'menu[type=\"context\"]' ]\n        },\n        menubar: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        menuitem: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-posinset', 'aria-setsize', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"command\"]' ]\n        },\n        menuitemcheckbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"checkbox\"]' ]\n        },\n        menuitemradio: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-selected', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"radio\"]' ]\n        },\n        navigation: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'nav' ]\n        },\n        none: {\n          type: 'structure',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        note: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        option: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'listbox' ],\n          implicit: [ 'option' ]\n        },\n        presentation: {\n          type: 'structure',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        progressbar: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'progress' ]\n        },\n        radio: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'input[type=\"radio\"]' ]\n        },\n        radiogroup: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-required', 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'radio' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        range: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        region: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'section[aria-label]', 'section[aria-labelledby]', 'section[title]' ]\n        },\n        roletype: {\n          type: 'abstract'\n        },\n        row: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-colindex', 'aria-expanded', 'aria-level', 'aria-selected', 'aria-rowindex' ]\n          },\n          owned: {\n            one: [ 'cell', 'columnheader', 'rowheader', 'gridcell' ]\n          },\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'rowgroup', 'grid', 'treegrid', 'table' ],\n          implicit: [ 'tr' ]\n        },\n        rowgroup: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'row' ]\n          },\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'grid', 'table' ],\n          implicit: [ 'tbody', 'thead', 'tfoot' ]\n        },\n        rowheader: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-required', 'aria-readonly', 'aria-selected', 'aria-sort' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'th' ]\n        },\n        scrollbar: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-controls', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ],\n            allowed: [ 'aria-valuetext', 'aria-orientation' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        search: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        searchbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required', 'aria-placeholder' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"search\"]' ]\n        },\n        section: {\n          nameFrom: [ 'author', 'contents' ],\n          type: 'abstract'\n        },\n        sectionhead: {\n          nameFrom: [ 'author', 'contents' ],\n          type: 'abstract'\n        },\n        select: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        separator: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-orientation' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'hr' ]\n        },\n        slider: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-orientation' ],\n            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"range\"]' ]\n        },\n        spinbutton: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-required' ],\n            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"number\"]' ]\n        },\n        status: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'output' ]\n        },\n        structure: {\n          type: 'abstract'\n        },\n        switch: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        tab: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-expanded', 'aria-setsize', 'aria-posinset' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'tablist' ]\n        },\n        table: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colcount', 'aria-rowcount' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'table' ]\n        },\n        tablist: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-orientation' ]\n          },\n          owned: {\n            all: [ 'tab' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        tabpanel: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        term: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'dt' ]\n        },\n        text: {\n          type: 'structure',\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        textbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required', 'aria-placeholder' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"text\"]', 'input[type=\"email\"]', 'input[type=\"password\"]', 'input[type=\"tel\"]', 'input[type=\"url\"]', 'input:not([type])', 'textarea' ]\n        },\n        timer: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        toolbar: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'menu[type=\"toolbar\"]' ]\n        },\n        tooltip: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        tree: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded', 'aria-orientation' ]\n          },\n          owned: {\n            all: [ 'treeitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        treegrid: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-colcount', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-required', 'aria-rowcount', 'aria-orientation' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        treeitem: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-selected', 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'group', 'tree' ]\n        },\n        widget: {\n          type: 'abstract'\n        },\n        window: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        }\n      };\n      var color = {};\n      commons.color = color;\n      var dom = commons.dom = {};\n      var table = commons.table = {};\n      var text = commons.text = {\n        EdgeFormDefaults: {}\n      };\n      var utils = commons.utils = axe.utils;\n      aria.requiredAttr = function(role) {\n        'use strict';\n        var roles = aria.lookupTable.role[role], attr = roles && roles.attributes && roles.attributes.required;\n        return attr || [];\n      };\n      aria.allowedAttr = function(role) {\n        'use strict';\n        var roles = aria.lookupTable.role[role], attr = roles && roles.attributes && roles.attributes.allowed || [], requiredAttr = roles && roles.attributes && roles.attributes.required || [];\n        return attr.concat(aria.lookupTable.globalAttributes).concat(requiredAttr);\n      };\n      aria.validateAttr = function(att) {\n        'use strict';\n        return !!aria.lookupTable.attributes[att];\n      };\n      aria.validateAttrValue = function(node, attr) {\n        'use strict';\n        var matches, list, value = node.getAttribute(attr), attrInfo = aria.lookupTable.attributes[attr];\n        var doc = dom.getRootNode(node);\n        if (!attrInfo) {\n          return true;\n        }\n        switch (attrInfo.type) {\n         case 'boolean':\n         case 'nmtoken':\n          return typeof value === 'string' && attrInfo.values.indexOf(value.toLowerCase()) !== -1;\n\n         case 'nmtokens':\n          list = axe.utils.tokenList(value);\n          return list.reduce(function(result, token) {\n            return result && attrInfo.values.indexOf(token) !== -1;\n          }, list.length !== 0);\n\n         case 'idref':\n          return !!(value && doc.getElementById(value));\n\n         case 'idrefs':\n          list = axe.utils.tokenList(value);\n          return list.reduce(function(result, token) {\n            return !!(result && doc.getElementById(token));\n          }, list.length !== 0);\n\n         case 'string':\n          return true;\n\n         case 'decimal':\n          matches = value.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/);\n          return !!(matches && (matches[1] || matches[2]));\n\n         case 'int':\n          return /^[-+]?[0-9]+$/.test(value);\n        }\n      };\n      aria.labelVirtual = function(_ref8) {\n        var actualNode = _ref8.actualNode;\n        var ref = void 0, candidate = void 0;\n        if (actualNode.getAttribute('aria-labelledby')) {\n          ref = dom.idrefs(actualNode, 'aria-labelledby');\n          candidate = ref.map(function(thing) {\n            var vNode = axe.utils.getNodeFromTree(axe._tree[0], thing);\n            return vNode ? text.visibleVirtual(vNode, true) : '';\n          }).join(' ').trim();\n          if (candidate) {\n            return candidate;\n          }\n        }\n        candidate = actualNode.getAttribute('aria-label');\n        if (candidate) {\n          candidate = text.sanitize(candidate).trim();\n          if (candidate) {\n            return candidate;\n          }\n        }\n        return null;\n      };\n      aria.label = function(node) {\n        node = axe.utils.getNodeFromTree(axe._tree[0], node);\n        return aria.labelVirtual(node);\n      };\n      aria.isValidRole = function(role) {\n        'use strict';\n        if (aria.lookupTable.role[role]) {\n          return true;\n        }\n        return false;\n      };\n      aria.getRolesWithNameFromContents = function() {\n        return Object.keys(aria.lookupTable.role).filter(function(r) {\n          return aria.lookupTable.role[r].nameFrom && aria.lookupTable.role[r].nameFrom.indexOf('contents') !== -1;\n        });\n      };\n      aria.getRolesByType = function(roleType) {\n        return Object.keys(aria.lookupTable.role).filter(function(r) {\n          return aria.lookupTable.role[r].type === roleType;\n        });\n      };\n      aria.getRoleType = function(role) {\n        var r = aria.lookupTable.role[role];\n        return r && r.type || null;\n      };\n      aria.requiredOwned = function(role) {\n        'use strict';\n        var owned = null, roles = aria.lookupTable.role[role];\n        if (roles) {\n          owned = axe.utils.clone(roles.owned);\n        }\n        return owned;\n      };\n      aria.requiredContext = function(role) {\n        'use strict';\n        var context = null, roles = aria.lookupTable.role[role];\n        if (roles) {\n          context = axe.utils.clone(roles.context);\n        }\n        return context;\n      };\n      aria.implicitNodes = function(role) {\n        'use strict';\n        var implicit = null, roles = aria.lookupTable.role[role];\n        if (roles && roles.implicit) {\n          implicit = axe.utils.clone(roles.implicit);\n        }\n        return implicit;\n      };\n      aria.implicitRole = function(node) {\n        'use strict';\n        var isValidImplicitRole = function isValidImplicitRole(set, role) {\n          var validForNodeType = function validForNodeType(implicitNodeTypeSelector) {\n            return axe.utils.matchesSelector(node, implicitNodeTypeSelector);\n          };\n          if (role.implicit && role.implicit.some(validForNodeType)) {\n            set.push(role.name);\n          }\n          return set;\n        };\n        var sortRolesByOptimalAriaContext = function sortRolesByOptimalAriaContext(roles, ariaAttributes) {\n          var getScore = function getScore(role) {\n            var allowedAriaAttributes = aria.allowedAttr(role);\n            return allowedAriaAttributes.reduce(function(score, attribute) {\n              return score + (ariaAttributes.indexOf(attribute) > -1 ? 1 : 0);\n            }, 0);\n          };\n          var scored = roles.map(function(role) {\n            return {\n              score: getScore(role),\n              name: role\n            };\n          });\n          var sorted = scored.sort(function(scoredRoleA, scoredRoleB) {\n            return scoredRoleB.score - scoredRoleA.score;\n          });\n          return sorted.map(function(sortedRole) {\n            return sortedRole.name;\n          });\n        };\n        var roles = Object.keys(aria.lookupTable.role).map(function(role) {\n          var lookup = aria.lookupTable.role[role];\n          return {\n            name: role,\n            implicit: lookup && lookup.implicit\n          };\n        });\n        var availableImplicitRoles = roles.reduce(isValidImplicitRole, []);\n        if (!availableImplicitRoles.length) {\n          return null;\n        }\n        var nodeAttributes = node.attributes;\n        var ariaAttributes = [];\n        for (var i = 0, j = nodeAttributes.length; i < j; i++) {\n          var attr = nodeAttributes[i];\n          if (attr.name.match(/^aria-/)) {\n            ariaAttributes.push(attr.name);\n          }\n        }\n        return sortRolesByOptimalAriaContext(availableImplicitRoles, ariaAttributes).shift();\n      };\n      color.Color = function(red, green, blue, alpha) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n        this.toHexString = function() {\n          var redString = Math.round(this.red).toString(16);\n          var greenString = Math.round(this.green).toString(16);\n          var blueString = Math.round(this.blue).toString(16);\n          return '#' + (this.red > 15.5 ? redString : '0' + redString) + (this.green > 15.5 ? greenString : '0' + greenString) + (this.blue > 15.5 ? blueString : '0' + blueString);\n        };\n        var rgbRegex = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/;\n        var rgbaRegex = /^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;\n        this.parseRgbString = function(colorString) {\n          if (colorString === 'transparent') {\n            this.red = 0;\n            this.green = 0;\n            this.blue = 0;\n            this.alpha = 0;\n            return;\n          }\n          var match = colorString.match(rgbRegex);\n          if (match) {\n            this.red = parseInt(match[1], 10);\n            this.green = parseInt(match[2], 10);\n            this.blue = parseInt(match[3], 10);\n            this.alpha = 1;\n            return;\n          }\n          match = colorString.match(rgbaRegex);\n          if (match) {\n            this.red = parseInt(match[1], 10);\n            this.green = parseInt(match[2], 10);\n            this.blue = parseInt(match[3], 10);\n            this.alpha = parseFloat(match[4]);\n            return;\n          }\n        };\n        this.getRelativeLuminance = function() {\n          var rSRGB = this.red / 255;\n          var gSRGB = this.green / 255;\n          var bSRGB = this.blue / 255;\n          var r = rSRGB <= .03928 ? rSRGB / 12.92 : Math.pow((rSRGB + .055) / 1.055, 2.4);\n          var g = gSRGB <= .03928 ? gSRGB / 12.92 : Math.pow((gSRGB + .055) / 1.055, 2.4);\n          var b = bSRGB <= .03928 ? bSRGB / 12.92 : Math.pow((bSRGB + .055) / 1.055, 2.4);\n          return .2126 * r + .7152 * g + .0722 * b;\n        };\n      };\n      color.flattenColors = function(fgColor, bgColor) {\n        var alpha = fgColor.alpha;\n        var r = (1 - alpha) * bgColor.red + alpha * fgColor.red;\n        var g = (1 - alpha) * bgColor.green + alpha * fgColor.green;\n        var b = (1 - alpha) * bgColor.blue + alpha * fgColor.blue;\n        var a = fgColor.alpha + bgColor.alpha * (1 - fgColor.alpha);\n        return new color.Color(r, g, b, a);\n      };\n      color.getContrast = function(bgColor, fgColor) {\n        if (!fgColor || !bgColor) {\n          return null;\n        }\n        if (fgColor.alpha < 1) {\n          fgColor = color.flattenColors(fgColor, bgColor);\n        }\n        var bL = bgColor.getRelativeLuminance();\n        var fL = fgColor.getRelativeLuminance();\n        return (Math.max(fL, bL) + .05) / (Math.min(fL, bL) + .05);\n      };\n      color.hasValidContrastRatio = function(bg, fg, fontSize, isBold) {\n        var contrast = color.getContrast(bg, fg);\n        var isSmallFont = isBold && Math.ceil(fontSize * 72) / 96 < 14 || !isBold && Math.ceil(fontSize * 72) / 96 < 18;\n        var expectedContrastRatio = isSmallFont ? 4.5 : 3;\n        return {\n          isValid: contrast > expectedContrastRatio,\n          contrastRatio: contrast,\n          expectedContrastRatio: expectedContrastRatio\n        };\n      };\n      function _getFonts(style) {\n        return style.getPropertyValue('font-family').split(/[,;]/g).map(function(font) {\n          return font.trim().toLowerCase();\n        });\n      }\n      function elementIsDistinct(node, ancestorNode) {\n        var nodeStyle = window.getComputedStyle(node);\n        if (nodeStyle.getPropertyValue('background-image') !== 'none') {\n          return true;\n        }\n        var hasBorder = [ 'border-bottom', 'border-top', 'outline' ].reduce(function(result, edge) {\n          var borderClr = new color.Color();\n          borderClr.parseRgbString(nodeStyle.getPropertyValue(edge + '-color'));\n          return result || nodeStyle.getPropertyValue(edge + '-style') !== 'none' && parseFloat(nodeStyle.getPropertyValue(edge + '-width')) > 0 && borderClr.alpha !== 0;\n        }, false);\n        if (hasBorder) {\n          return true;\n        }\n        var parentStyle = window.getComputedStyle(ancestorNode);\n        if (_getFonts(nodeStyle)[0] !== _getFonts(parentStyle)[0]) {\n          return true;\n        }\n        var hasStyle = [ 'text-decoration-line', 'text-decoration-style', 'font-weight', 'font-style', 'font-size' ].reduce(function(result, cssProp) {\n          return result || nodeStyle.getPropertyValue(cssProp) !== parentStyle.getPropertyValue(cssProp);\n        }, false);\n        var tDec = nodeStyle.getPropertyValue('text-decoration');\n        if (tDec.split(' ').length < 3) {\n          hasStyle = hasStyle || tDec !== parentStyle.getPropertyValue('text-decoration');\n        }\n        return hasStyle;\n      }\n      color.elementIsDistinct = elementIsDistinct;\n      var graphicNodes = [ 'IMG', 'CANVAS', 'OBJECT', 'IFRAME', 'VIDEO', 'SVG' ];\n      function elmHasImage(elm, style) {\n        var nodeName = elm.nodeName.toUpperCase();\n        if (graphicNodes.includes(nodeName)) {\n          axe.commons.color.incompleteData.set('bgColor', 'imgNode');\n          return true;\n        }\n        style = style || window.getComputedStyle(elm);\n        var bgImageStyle = style.getPropertyValue('background-image');\n        var hasBgImage = bgImageStyle !== 'none';\n        if (hasBgImage) {\n          var hasGradient = /gradient/.test(bgImageStyle);\n          axe.commons.color.incompleteData.set('bgColor', hasGradient ? 'bgGradient' : 'bgImage');\n        }\n        return hasBgImage;\n      }\n      function getBgColor(elm, elmStyle) {\n        elmStyle = elmStyle || window.getComputedStyle(elm);\n        var bgColor = new color.Color();\n        bgColor.parseRgbString(elmStyle.getPropertyValue('background-color'));\n        if (bgColor.alpha !== 0) {\n          var opacity = elmStyle.getPropertyValue('opacity');\n          bgColor.alpha = bgColor.alpha * opacity;\n        }\n        return bgColor;\n      }\n      function contentOverlapping(targetElement, bgNode) {\n        var targetRect = targetElement.getClientRects()[0];\n        var obscuringElements = dom.shadowElementsFromPoint(targetRect.left, targetRect.top);\n        if (obscuringElements) {\n          for (var i = 0; i < obscuringElements.length; i++) {\n            if (obscuringElements[i] !== targetElement && obscuringElements[i] === bgNode) {\n              return true;\n            }\n          }\n        }\n        return false;\n      }\n      function calculateObscuringAlpha(elmIndex, elmStack, originalElm) {\n        var totalAlpha = 0;\n        if (elmIndex > 0) {\n          for (var i = elmIndex - 1; i >= 0; i--) {\n            var bgElm = elmStack[i];\n            var bgElmStyle = window.getComputedStyle(bgElm);\n            var bgColor = getBgColor(bgElm, bgElmStyle);\n            if (bgColor.alpha && contentOverlapping(originalElm, bgElm)) {\n              totalAlpha += bgColor.alpha;\n            } else {\n              elmStack.splice(i, 1);\n            }\n          }\n        }\n        return totalAlpha;\n      }\n      function elmPartiallyObscured(elm, bgElm, bgColor) {\n        var obscured = elm !== bgElm && !dom.visuallyContains(elm, bgElm) && bgColor.alpha !== 0;\n        if (obscured) {\n          axe.commons.color.incompleteData.set('bgColor', 'elmPartiallyObscured');\n        }\n        return obscured;\n      }\n      function includeMissingElements(elmStack, elm) {\n        var elementMap = {\n          TD: [ 'TR', 'TBODY' ],\n          TH: [ 'TR', 'THEAD' ],\n          INPUT: [ 'LABEL' ]\n        };\n        var tagArray = elmStack.map(function(elm) {\n          return elm.tagName;\n        });\n        var bgNodes = elmStack;\n        for (var candidate in elementMap) {\n          if (tagArray.includes(candidate)) {\n            for (var candidateIndex in elementMap[candidate]) {\n              if (candidate.hasOwnProperty(candidateIndex)) {\n                var ancestorMatch = axe.commons.dom.findUp(elm, elementMap[candidate][candidateIndex]);\n                if (ancestorMatch && elmStack.indexOf(ancestorMatch) === -1) {\n                  var overlaps = axe.commons.dom.visuallyOverlaps(elm.getBoundingClientRect(), ancestorMatch);\n                  if (overlaps) {\n                    bgNodes.splice(tagArray.indexOf(candidate) + 1, 0, ancestorMatch);\n                  }\n                }\n                if (elm.tagName === elementMap[candidate][candidateIndex] && tagArray.indexOf(elm.tagName) === -1) {\n                  bgNodes.splice(tagArray.indexOf(candidate) + 1, 0, elm);\n                }\n              }\n            }\n          }\n        }\n        return bgNodes;\n      }\n      function sortPageBackground(elmStack) {\n        var bodyIndex = elmStack.indexOf(document.body);\n        var bgNodes = elmStack;\n        if (bodyIndex > 1 && !elmHasImage(document.documentElement) && getBgColor(document.documentElement).alpha === 0) {\n          bgNodes.splice(bodyIndex, 1);\n          bgNodes.splice(elmStack.indexOf(document.documentElement), 1);\n          bgNodes.push(document.body);\n        }\n        return bgNodes;\n      }\n      color.getCoords = function(rect) {\n        var x = void 0, y = void 0;\n        if (rect.left > window.innerWidth) {\n          return;\n        }\n        if (rect.top > window.innerHeight) {\n          return;\n        }\n        x = Math.min(Math.ceil(rect.left + rect.width / 2), window.innerWidth - 1);\n        y = Math.min(Math.ceil(rect.top + rect.height / 2), window.innerHeight - 1);\n        return {\n          x: x,\n          y: y\n        };\n      };\n      color.getRectStack = function(elm) {\n        var boundingCoords = color.getCoords(elm.getBoundingClientRect());\n        if (boundingCoords) {\n          var boundingStack = dom.shadowElementsFromPoint(boundingCoords.x, boundingCoords.y);\n          var rects = Array.from(elm.getClientRects());\n          if (rects && rects.length > 1) {\n            var filteredArr = rects.filter(function(rect) {\n              return rect.width && rect.width > 0;\n            }).map(function(rect) {\n              var coords = color.getCoords(rect);\n              if (coords) {\n                return dom.shadowElementsFromPoint(coords.x, coords.y);\n              }\n            });\n            filteredArr.splice(0, 0, boundingStack);\n            return filteredArr;\n          } else {\n            return [ boundingStack ];\n          }\n        }\n        return null;\n      };\n      color.filteredRectStack = function(elm) {\n        var rectStack = color.getRectStack(elm);\n        if (rectStack && rectStack.length === 1) {\n          return rectStack[0];\n        } else if (rectStack && rectStack.length > 1) {\n          var boundingStack = rectStack.shift();\n          var isSame = void 0;\n          rectStack.forEach(function(rectList, index) {\n            if (index === 0) {\n              return;\n            }\n            var rectA = rectStack[index - 1], rectB = rectStack[index];\n            isSame = rectA.every(function(element, elementIndex) {\n              return element === rectB[elementIndex];\n            }) || boundingStack.includes(elm);\n          });\n          if (!isSame) {\n            axe.commons.color.incompleteData.set('bgColor', 'elmPartiallyObscuring');\n            return null;\n          }\n          return rectStack[0];\n        } else {\n          axe.commons.color.incompleteData.set('bgColor', 'outsideViewport');\n          return null;\n        }\n      };\n      color.getBackgroundStack = function(elm) {\n        var elmStack = color.filteredRectStack(elm);\n        if (elmStack === null) {\n          return null;\n        }\n        elmStack = includeMissingElements(elmStack, elm);\n        elmStack = dom.reduceToElementsBelowFloating(elmStack, elm);\n        elmStack = sortPageBackground(elmStack);\n        var elmIndex = elmStack.indexOf(elm);\n        if (calculateObscuringAlpha(elmIndex, elmStack, elm) >= .99) {\n          axe.commons.color.incompleteData.set('bgColor', 'bgOverlap');\n          return null;\n        }\n        return elmIndex !== -1 ? elmStack : null;\n      };\n      color.getBackgroundColor = function(elm) {\n        var bgElms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var noScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (noScroll !== true) {\n          var alignToTop = elm.clientHeight - 2 >= window.innerHeight * 2;\n          elm.scrollIntoView(alignToTop);\n        }\n        var bgColors = [];\n        var elmStack = color.getBackgroundStack(elm);\n        (elmStack || []).some(function(bgElm) {\n          var bgElmStyle = window.getComputedStyle(bgElm);\n          var bgColor = getBgColor(bgElm, bgElmStyle);\n          if (elmPartiallyObscured(elm, bgElm, bgColor) || elmHasImage(bgElm, bgElmStyle)) {\n            bgColors = null;\n            bgElms.push(bgElm);\n            return true;\n          }\n          if (bgColor.alpha !== 0) {\n            bgElms.push(bgElm);\n            bgColors.push(bgColor);\n            return bgColor.alpha === 1;\n          } else {\n            return false;\n          }\n        });\n        if (bgColors !== null && elmStack !== null) {\n          bgColors.push(new color.Color(255, 255, 255, 1));\n          var colors = bgColors.reduce(color.flattenColors);\n          return colors;\n        }\n        return null;\n      };\n      dom.isOpaque = function(node) {\n        var style = window.getComputedStyle(node);\n        return elmHasImage(node, style) || getBgColor(node, style).alpha === 1;\n      };\n      color.getForegroundColor = function(node, noScroll) {\n        var nodeStyle = window.getComputedStyle(node);\n        var fgColor = new color.Color();\n        fgColor.parseRgbString(nodeStyle.getPropertyValue('color'));\n        var opacity = nodeStyle.getPropertyValue('opacity');\n        fgColor.alpha = fgColor.alpha * opacity;\n        if (fgColor.alpha === 1) {\n          return fgColor;\n        }\n        var bgColor = color.getBackgroundColor(node, [], noScroll);\n        if (bgColor === null) {\n          var reason = axe.commons.color.incompleteData.get('bgColor');\n          axe.commons.color.incompleteData.set('fgColor', reason);\n          return null;\n        }\n        return color.flattenColors(fgColor, bgColor);\n      };\n      color.incompleteData = function() {\n        var data = {};\n        return {\n          set: function set(key, reason) {\n            if (typeof key !== 'string') {\n              throw new Error('Incomplete data: key must be a string');\n            }\n            if (reason) {\n              data[key] = reason;\n            }\n            return data[key];\n          },\n          get: function get(key) {\n            return data[key];\n          },\n          clear: function clear() {\n            data = {};\n          }\n        };\n      }();\n      dom.reduceToElementsBelowFloating = function(elements, targetNode) {\n        var floatingPositions = [ 'fixed', 'sticky' ], finalElements = [], targetFound = false, index, currentNode, style;\n        for (index = 0; index < elements.length; ++index) {\n          currentNode = elements[index];\n          if (currentNode === targetNode) {\n            targetFound = true;\n          }\n          style = window.getComputedStyle(currentNode);\n          if (!targetFound && floatingPositions.indexOf(style.position) !== -1) {\n            finalElements = [];\n            continue;\n          }\n          finalElements.push(currentNode);\n        }\n        return finalElements;\n      };\n      dom.findElmsInContext = function(_ref9) {\n        var context = _ref9.context, value = _ref9.value, attr = _ref9.attr, _ref9$elm = _ref9.elm, elm = _ref9$elm === undefined ? '' : _ref9$elm;\n        var root = void 0;\n        var escapedValue = axe.utils.escapeSelector(value);\n        if (context.nodeType === 9 || context.nodeType === 11) {\n          root = context;\n        } else {\n          root = dom.getRootNode(context);\n        }\n        return Array.from(root.querySelectorAll(elm + '[' + attr + '=' + escapedValue + ']'));\n      };\n      dom.findUp = function(element, target) {\n        return dom.findUpVirtual(axe.utils.getNodeFromTree(axe._tree[0], element), target);\n      };\n      dom.findUpVirtual = function(element, target) {\n        var parent = void 0;\n        parent = element.actualNode;\n        if (!element.shadowId && typeof element.actualNode.closest === 'function') {\n          var match = element.actualNode.closest(target);\n          if (match) {\n            return match;\n          }\n          return null;\n        }\n        do {\n          parent = parent.assignedSlot ? parent.assignedSlot : parent.parentNode;\n          if (parent && parent.nodeType === 11) {\n            parent = parent.host;\n          }\n        } while (parent && !axe.utils.matchesSelector(parent, target) && parent !== document.documentElement);\n        if (!axe.utils.matchesSelector(parent, target)) {\n          return null;\n        }\n        return parent;\n      };\n      dom.getComposedParent = function getComposedParent(element) {\n        if (element.assignedSlot) {\n          return getComposedParent(element.assignedSlot);\n        } else if (element.parentNode) {\n          var parentNode = element.parentNode;\n          if (parentNode.nodeType === 1) {\n            return parentNode;\n          } else if (parentNode.host) {\n            return parentNode.host;\n          }\n        }\n        return null;\n      };\n      dom.getElementByReference = function(node, attr) {\n        var fragment = node.getAttribute(attr);\n        if (fragment && fragment.charAt(0) === '#') {\n          fragment = decodeURIComponent(fragment.substring(1));\n          var candidate = document.getElementById(fragment);\n          if (candidate) {\n            return candidate;\n          }\n          candidate = document.getElementsByName(fragment);\n          if (candidate.length) {\n            return candidate[0];\n          }\n        }\n        return null;\n      };\n      dom.getElementCoordinates = function(element) {\n        'use strict';\n        var scrollOffset = dom.getScrollOffset(document), xOffset = scrollOffset.left, yOffset = scrollOffset.top, coords = element.getBoundingClientRect();\n        return {\n          top: coords.top + yOffset,\n          right: coords.right + xOffset,\n          bottom: coords.bottom + yOffset,\n          left: coords.left + xOffset,\n          width: coords.right - coords.left,\n          height: coords.bottom - coords.top\n        };\n      };\n      dom.getRootNode = function(node) {\n        var doc = node.getRootNode && node.getRootNode() || document;\n        if (doc === node) {\n          doc = document;\n        }\n        return doc;\n      };\n      dom.getScrollOffset = function(element) {\n        'use strict';\n        if (!element.nodeType && element.document) {\n          element = element.document;\n        }\n        if (element.nodeType === 9) {\n          var docElement = element.documentElement, body = element.body;\n          return {\n            left: docElement && docElement.scrollLeft || body && body.scrollLeft || 0,\n            top: docElement && docElement.scrollTop || body && body.scrollTop || 0\n          };\n        }\n        return {\n          left: element.scrollLeft,\n          top: element.scrollTop\n        };\n      };\n      dom.getViewportSize = function(win) {\n        'use strict';\n        var body, doc = win.document, docElement = doc.documentElement;\n        if (win.innerWidth) {\n          return {\n            width: win.innerWidth,\n            height: win.innerHeight\n          };\n        }\n        if (docElement) {\n          return {\n            width: docElement.clientWidth,\n            height: docElement.clientHeight\n          };\n        }\n        body = doc.body;\n        return {\n          width: body.clientWidth,\n          height: body.clientHeight\n        };\n      };\n      var hiddenTextElms = [ 'HEAD', 'TITLE', 'TEMPLATE', 'SCRIPT', 'STYLE', 'IFRAME', 'OBJECT', 'VIDEO', 'AUDIO', 'NOSCRIPT' ];\n      function hasChildTextNodes(elm) {\n        if (!hiddenTextElms.includes(elm.actualNode.nodeName.toUpperCase())) {\n          return elm.children.some(function(_ref10) {\n            var actualNode = _ref10.actualNode;\n            return actualNode.nodeType === 3 && actualNode.nodeValue.trim();\n          });\n        }\n      }\n      dom.hasContentVirtual = function(elm, noRecursion) {\n        return hasChildTextNodes(elm) || dom.isVisualContent(elm.actualNode) || !!aria.labelVirtual(elm) || !noRecursion && elm.children.some(function(child) {\n          return child.actualNode.nodeType === 1 && dom.hasContentVirtual(child);\n        });\n      };\n      dom.hasContent = function hasContent(elm, noRecursion) {\n        elm = axe.utils.getNodeFromTree(axe._tree[0], elm);\n        return dom.hasContentVirtual(elm, noRecursion);\n      };\n      dom.idrefs = function(node, attr) {\n        'use strict';\n        var index, length, doc = dom.getRootNode(node), result = [], idrefs = node.getAttribute(attr);\n        if (idrefs) {\n          idrefs = axe.utils.tokenList(idrefs);\n          for (index = 0, length = idrefs.length; index < length; index++) {\n            result.push(doc.getElementById(idrefs[index]));\n          }\n        }\n        return result;\n      };\n      function focusDisabled(el) {\n        return el.disabled || !dom.isVisible(el, true) && el.nodeName.toUpperCase() !== 'AREA';\n      }\n      dom.isFocusable = function(el) {\n        'use strict';\n        if (focusDisabled(el)) {\n          return false;\n        } else if (dom.isNativelyFocusable(el)) {\n          return true;\n        }\n        var tabindex = el.getAttribute('tabindex');\n        if (tabindex && !isNaN(parseInt(tabindex, 10))) {\n          return true;\n        }\n        return false;\n      };\n      dom.isNativelyFocusable = function(el) {\n        'use strict';\n        if (!el || focusDisabled(el)) {\n          return false;\n        }\n        switch (el.nodeName.toUpperCase()) {\n         case 'A':\n         case 'AREA':\n          if (el.href) {\n            return true;\n          }\n          break;\n\n         case 'INPUT':\n          return el.type !== 'hidden';\n\n         case 'TEXTAREA':\n         case 'SELECT':\n         case 'DETAILS':\n         case 'BUTTON':\n          return true;\n        }\n        return false;\n      };\n      dom.insertedIntoFocusOrder = function(el) {\n        return el.tabIndex > -1 && dom.isFocusable(el) && !dom.isNativelyFocusable(el);\n      };\n      dom.isHTML5 = function(doc) {\n        var node = doc.doctype;\n        if (node === null) {\n          return false;\n        }\n        return node.name === 'html' && !node.publicId && !node.systemId;\n      };\n      function walkDomNode(node, functor) {\n        if (functor(node.actualNode) !== false) {\n          node.children.forEach(function(child) {\n            return walkDomNode(child, functor);\n          });\n        }\n      }\n      var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n      function isBlock(elm) {\n        var display = window.getComputedStyle(elm).getPropertyValue('display');\n        return blockLike.includes(display) || display.substr(0, 6) === 'table-';\n      }\n      function getBlockParent(node) {\n        var parentBlock = dom.getComposedParent(node);\n        while (parentBlock && !isBlock(parentBlock)) {\n          parentBlock = dom.getComposedParent(parentBlock);\n        }\n        return axe.utils.getNodeFromTree(axe._tree[0], parentBlock);\n      }\n      dom.isInTextBlock = function isInTextBlock(node) {\n        if (isBlock(node)) {\n          return false;\n        }\n        var virtualParent = getBlockParent(node);\n        var parentText = '';\n        var linkText = '';\n        var inBrBlock = 0;\n        walkDomNode(virtualParent, function(currNode) {\n          if (inBrBlock === 2) {\n            return false;\n          }\n          if (currNode.nodeType === 3) {\n            parentText += currNode.nodeValue;\n          }\n          if (currNode.nodeType !== 1) {\n            return;\n          }\n          var nodeName = (currNode.nodeName || '').toUpperCase();\n          if ([ 'BR', 'HR' ].includes(nodeName)) {\n            if (inBrBlock === 0) {\n              parentText = '';\n              linkText = '';\n            } else {\n              inBrBlock = 2;\n            }\n          } else if (currNode.style.display === 'none' || currNode.style.overflow === 'hidden' || ![ '', null, 'none' ].includes(currNode.style.float) || ![ '', null, 'relative' ].includes(currNode.style.position)) {\n            return false;\n          } else if (nodeName === 'A' && currNode.href || (currNode.getAttribute('role') || '').toLowerCase() === 'link') {\n            if (currNode === node) {\n              inBrBlock = 1;\n            }\n            linkText += currNode.textContent;\n            return false;\n          }\n        });\n        parentText = axe.commons.text.sanitize(parentText);\n        linkText = axe.commons.text.sanitize(linkText);\n        return parentText.length > linkText.length;\n      };\n      dom.isNode = function(element) {\n        'use strict';\n        return element instanceof Node;\n      };\n      function noParentScrolled(element, offset) {\n        element = dom.getComposedParent(element);\n        while (element && element.nodeName.toLowerCase() !== 'html') {\n          if (element.scrollTop) {\n            offset += element.scrollTop;\n            if (offset >= 0) {\n              return false;\n            }\n          }\n          element = dom.getComposedParent(element);\n        }\n        return true;\n      }\n      dom.isOffscreen = function(element) {\n        var leftBoundary = void 0;\n        var docElement = document.documentElement;\n        var styl = window.getComputedStyle(element);\n        var dir = window.getComputedStyle(document.body || docElement).getPropertyValue('direction');\n        var coords = dom.getElementCoordinates(element);\n        if (coords.bottom < 0 && (noParentScrolled(element, coords.bottom) || styl.position === 'absolute')) {\n          return true;\n        }\n        if (coords.left === 0 && coords.right === 0) {\n          return false;\n        }\n        if (dir === 'ltr') {\n          if (coords.right <= 0) {\n            return true;\n          }\n        } else {\n          leftBoundary = Math.max(docElement.scrollWidth, dom.getViewportSize(window).width);\n          if (coords.left >= leftBoundary) {\n            return true;\n          }\n        }\n        return false;\n      };\n      function isClipped(clip) {\n        'use strict';\n        var matches = clip.match(/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/);\n        if (matches && matches.length === 5) {\n          return matches[3] - matches[1] <= 0 && matches[2] - matches[4] <= 0;\n        }\n        return false;\n      }\n      dom.isVisible = function(el, screenReader, recursed) {\n        'use strict';\n        var style, nodeName, parent;\n        if (el.nodeType === 9) {\n          return true;\n        }\n        if (el.nodeType === 11) {\n          el = el.host;\n        }\n        style = window.getComputedStyle(el, null);\n        if (style === null) {\n          return false;\n        }\n        nodeName = el.nodeName.toUpperCase();\n        if (style.getPropertyValue('display') === 'none' || nodeName.toUpperCase() === 'STYLE' || nodeName.toUpperCase() === 'SCRIPT' || !screenReader && isClipped(style.getPropertyValue('clip')) || !recursed && (style.getPropertyValue('visibility') === 'hidden' || !screenReader && dom.isOffscreen(el)) || screenReader && el.getAttribute('aria-hidden') === 'true') {\n          return false;\n        }\n        parent = el.assignedSlot ? el.assignedSlot : el.parentNode;\n        if (parent) {\n          return dom.isVisible(parent, screenReader, true);\n        }\n        return false;\n      };\n      var visualRoles = [ 'checkbox', 'img', 'radio', 'range', 'slider', 'spinbutton', 'textbox' ];\n      dom.isVisualContent = function(element) {\n        var role = element.getAttribute('role');\n        if (role) {\n          return visualRoles.indexOf(role) !== -1;\n        }\n        switch (element.tagName.toUpperCase()) {\n         case 'IMG':\n         case 'IFRAME':\n         case 'OBJECT':\n         case 'VIDEO':\n         case 'AUDIO':\n         case 'CANVAS':\n         case 'SVG':\n         case 'MATH':\n         case 'BUTTON':\n         case 'SELECT':\n         case 'TEXTAREA':\n         case 'KEYGEN':\n         case 'PROGRESS':\n         case 'METER':\n          return true;\n\n         case 'INPUT':\n          return element.type !== 'hidden';\n\n         default:\n          return false;\n        }\n      };\n      dom.shadowElementsFromPoint = function(nodeX, nodeY) {\n        var root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n        return root.elementsFromPoint(nodeX, nodeY).reduce(function(stack, elm) {\n          if (axe.utils.isShadowRoot(elm)) {\n            var shadowStack = dom.shadowElementsFromPoint(nodeX, nodeY, elm.shadowRoot);\n            stack = stack.concat(shadowStack);\n            if (stack.length && axe.commons.dom.visuallyContains(stack[0], elm)) {\n              stack.push(elm);\n            }\n          } else {\n            stack.push(elm);\n          }\n          return stack;\n        }, []);\n      };\n      dom.visuallyContains = function(node, parent) {\n        var rectBound = node.getBoundingClientRect();\n        var margin = .01;\n        var rect = {\n          top: rectBound.top + margin,\n          bottom: rectBound.bottom - margin,\n          left: rectBound.left + margin,\n          right: rectBound.right - margin\n        };\n        var parentRect = parent.getBoundingClientRect();\n        var parentTop = parentRect.top;\n        var parentLeft = parentRect.left;\n        var parentScrollArea = {\n          top: parentTop - parent.scrollTop,\n          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n          left: parentLeft - parent.scrollLeft,\n          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n        };\n        var style = window.getComputedStyle(parent);\n        if (style.getPropertyValue('display') === 'inline') {\n          return true;\n        }\n        if (rect.left < parentScrollArea.left && rect.left < parentRect.left || rect.top < parentScrollArea.top && rect.top < parentRect.top || rect.right > parentScrollArea.right && rect.right > parentRect.right || rect.bottom > parentScrollArea.bottom && rect.bottom > parentRect.bottom) {\n          return false;\n        }\n        if (rect.right > parentRect.right || rect.bottom > parentRect.bottom) {\n          return style.overflow === 'scroll' || style.overflow === 'auto' || style.overflow === 'hidden' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n        }\n        return true;\n      };\n      dom.visuallyOverlaps = function(rect, parent) {\n        var parentRect = parent.getBoundingClientRect();\n        var parentTop = parentRect.top;\n        var parentLeft = parentRect.left;\n        var parentScrollArea = {\n          top: parentTop - parent.scrollTop,\n          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n          left: parentLeft - parent.scrollLeft,\n          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n        };\n        if (rect.left > parentScrollArea.right && rect.left > parentRect.right || rect.top > parentScrollArea.bottom && rect.top > parentRect.bottom || rect.right < parentScrollArea.left && rect.right < parentRect.left || rect.bottom < parentScrollArea.top && rect.bottom < parentRect.top) {\n          return false;\n        }\n        var style = window.getComputedStyle(parent);\n        if (rect.left > parentRect.right || rect.top > parentRect.bottom) {\n          return style.overflow === 'scroll' || style.overflow === 'auto' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n        }\n        return true;\n      };\n      table.getAllCells = function(tableElm) {\n        var rowIndex, cellIndex, rowLength, cellLength;\n        var cells = [];\n        for (rowIndex = 0, rowLength = tableElm.rows.length; rowIndex < rowLength; rowIndex++) {\n          for (cellIndex = 0, cellLength = tableElm.rows[rowIndex].cells.length; cellIndex < cellLength; cellIndex++) {\n            cells.push(tableElm.rows[rowIndex].cells[cellIndex]);\n          }\n        }\n        return cells;\n      };\n      table.getCellPosition = function(cell, tableGrid) {\n        var rowIndex, index;\n        if (!tableGrid) {\n          tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n        }\n        for (rowIndex = 0; rowIndex < tableGrid.length; rowIndex++) {\n          if (tableGrid[rowIndex]) {\n            index = tableGrid[rowIndex].indexOf(cell);\n            if (index !== -1) {\n              return {\n                x: index,\n                y: rowIndex\n              };\n            }\n          }\n        }\n      };\n      table.getHeaders = function(cell) {\n        if (cell.hasAttribute('headers')) {\n          return commons.dom.idrefs(cell, 'headers');\n        }\n        var tableGrid = commons.table.toGrid(commons.dom.findUp(cell, 'table'));\n        var position = commons.table.getCellPosition(cell, tableGrid);\n        var rowHeaders = table.traverse('left', position, tableGrid).filter(function(cell) {\n          return table.isRowHeader(cell);\n        });\n        var colHeaders = table.traverse('up', position, tableGrid).filter(function(cell) {\n          return table.isColumnHeader(cell);\n        });\n        return [].concat(rowHeaders, colHeaders).reverse();\n      };\n      table.getScope = function(cell) {\n        var scope = cell.getAttribute('scope');\n        var role = cell.getAttribute('role');\n        if (cell instanceof Element === false || [ 'TD', 'TH' ].indexOf(cell.nodeName.toUpperCase()) === -1) {\n          throw new TypeError('Expected TD or TH element');\n        }\n        if (role === 'columnheader') {\n          return 'col';\n        } else if (role === 'rowheader') {\n          return 'row';\n        } else if (scope === 'col' || scope === 'row') {\n          return scope;\n        } else if (cell.nodeName.toUpperCase() !== 'TH') {\n          return false;\n        }\n        var tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n        var pos = table.getCellPosition(cell);\n        var headerRow = tableGrid[pos.y].reduce(function(headerRow, cell) {\n          return headerRow && cell.nodeName.toUpperCase() === 'TH';\n        }, true);\n        if (headerRow) {\n          return 'col';\n        }\n        var headerCol = tableGrid.map(function(col) {\n          return col[pos.x];\n        }).reduce(function(headerCol, cell) {\n          return headerCol && cell.nodeName.toUpperCase() === 'TH';\n        }, true);\n        if (headerCol) {\n          return 'row';\n        }\n        return 'auto';\n      };\n      table.isColumnHeader = function(element) {\n        return [ 'col', 'auto' ].indexOf(table.getScope(element)) !== -1;\n      };\n      table.isDataCell = function(cell) {\n        if (!cell.children.length && !cell.textContent.trim()) {\n          return false;\n        }\n        return cell.nodeName.toUpperCase() === 'TD';\n      };\n      table.isDataTable = function(node) {\n        var role = (node.getAttribute('role') || '').toLowerCase();\n        if ((role === 'presentation' || role === 'none') && !dom.isFocusable(node)) {\n          return false;\n        }\n        if (node.getAttribute('contenteditable') === 'true' || dom.findUp(node, '[contenteditable=\"true\"]')) {\n          return true;\n        }\n        if (role === 'grid' || role === 'treegrid' || role === 'table') {\n          return true;\n        }\n        if (commons.aria.getRoleType(role) === 'landmark') {\n          return true;\n        }\n        if (node.getAttribute('datatable') === '0') {\n          return false;\n        }\n        if (node.getAttribute('summary')) {\n          return true;\n        }\n        if (node.tHead || node.tFoot || node.caption) {\n          return true;\n        }\n        for (var childIndex = 0, childLength = node.children.length; childIndex < childLength; childIndex++) {\n          if (node.children[childIndex].nodeName.toUpperCase() === 'COLGROUP') {\n            return true;\n          }\n        }\n        var cells = 0;\n        var rowLength = node.rows.length;\n        var row, cell;\n        var hasBorder = false;\n        for (var rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cell = row.cells[cellIndex];\n            if (cell.nodeName.toUpperCase() === 'TH') {\n              return true;\n            }\n            if (!hasBorder && (cell.offsetWidth !== cell.clientWidth || cell.offsetHeight !== cell.clientHeight)) {\n              hasBorder = true;\n            }\n            if (cell.getAttribute('scope') || cell.getAttribute('headers') || cell.getAttribute('abbr')) {\n              return true;\n            }\n            if ([ 'columnheader', 'rowheader' ].includes((cell.getAttribute('role') || '').toLowerCase())) {\n              return true;\n            }\n            if (cell.children.length === 1 && cell.children[0].nodeName.toUpperCase() === 'ABBR') {\n              return true;\n            }\n            cells++;\n          }\n        }\n        if (node.getElementsByTagName('table').length) {\n          return false;\n        }\n        if (rowLength < 2) {\n          return false;\n        }\n        var sampleRow = node.rows[Math.ceil(rowLength / 2)];\n        if (sampleRow.cells.length === 1 && sampleRow.cells[0].colSpan === 1) {\n          return false;\n        }\n        if (sampleRow.cells.length >= 5) {\n          return true;\n        }\n        if (hasBorder) {\n          return true;\n        }\n        var bgColor, bgImage;\n        for (rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          if (bgColor && bgColor !== window.getComputedStyle(row).getPropertyValue('background-color')) {\n            return true;\n          } else {\n            bgColor = window.getComputedStyle(row).getPropertyValue('background-color');\n          }\n          if (bgImage && bgImage !== window.getComputedStyle(row).getPropertyValue('background-image')) {\n            return true;\n          } else {\n            bgImage = window.getComputedStyle(row).getPropertyValue('background-image');\n          }\n        }\n        if (rowLength >= 20) {\n          return true;\n        }\n        if (dom.getElementCoordinates(node).width > dom.getViewportSize(window).width * .95) {\n          return false;\n        }\n        if (cells < 10) {\n          return false;\n        }\n        if (node.querySelector('object, embed, iframe, applet')) {\n          return false;\n        }\n        return true;\n      };\n      table.isHeader = function(cell) {\n        if (table.isColumnHeader(cell) || table.isRowHeader(cell)) {\n          return true;\n        }\n        if (cell.getAttribute('id')) {\n          var id = axe.utils.escapeSelector(cell.getAttribute('id'));\n          return !!document.querySelector('[headers~=\"' + id + '\"]');\n        }\n        return false;\n      };\n      table.isRowHeader = function(cell) {\n        return [ 'row', 'auto' ].includes(table.getScope(cell));\n      };\n      table.toGrid = function(node) {\n        var table = [];\n        var rows = node.rows;\n        for (var i = 0, rowLength = rows.length; i < rowLength; i++) {\n          var cells = rows[i].cells;\n          table[i] = table[i] || [];\n          var columnIndex = 0;\n          for (var j = 0, cellLength = cells.length; j < cellLength; j++) {\n            for (var colSpan = 0; colSpan < cells[j].colSpan; colSpan++) {\n              for (var rowSpan = 0; rowSpan < cells[j].rowSpan; rowSpan++) {\n                table[i + rowSpan] = table[i + rowSpan] || [];\n                while (table[i + rowSpan][columnIndex]) {\n                  columnIndex++;\n                }\n                table[i + rowSpan][columnIndex] = cells[j];\n              }\n              columnIndex++;\n            }\n          }\n        }\n        return table;\n      };\n      table.toArray = table.toGrid;\n      (function(table) {\n        var traverseTable = function traverseTable(dir, position, tableGrid, callback) {\n          var result;\n          var cell = tableGrid[position.y] ? tableGrid[position.y][position.x] : undefined;\n          if (!cell) {\n            return [];\n          }\n          if (typeof callback === 'function') {\n            result = callback(cell, position, tableGrid);\n            if (result === true) {\n              return [ cell ];\n            }\n          }\n          result = traverseTable(dir, {\n            x: position.x + dir.x,\n            y: position.y + dir.y\n          }, tableGrid, callback);\n          result.unshift(cell);\n          return result;\n        };\n        table.traverse = function(dir, startPos, tableGrid, callback) {\n          if (Array.isArray(startPos)) {\n            callback = tableGrid;\n            tableGrid = startPos;\n            startPos = {\n              x: 0,\n              y: 0\n            };\n          }\n          if (typeof dir === 'string') {\n            switch (dir) {\n             case 'left':\n              dir = {\n                x: -1,\n                y: 0\n              };\n              break;\n\n             case 'up':\n              dir = {\n                x: 0,\n                y: -1\n              };\n              break;\n\n             case 'right':\n              dir = {\n                x: 1,\n                y: 0\n              };\n              break;\n\n             case 'down':\n              dir = {\n                x: 0,\n                y: 1\n              };\n              break;\n            }\n          }\n          return traverseTable(dir, {\n            x: startPos.x + dir.x,\n            y: startPos.y + dir.y\n          }, tableGrid, callback);\n        };\n      })(table);\n      var defaultButtonValues = {\n        submit: 'Submit',\n        reset: 'Reset'\n      };\n      var inputTypes = [ 'text', 'search', 'tel', 'url', 'email', 'date', 'time', 'number', 'range', 'color' ];\n      var phrasingElements = [ 'A', 'EM', 'STRONG', 'SMALL', 'MARK', 'ABBR', 'DFN', 'I', 'B', 'S', 'U', 'CODE', 'VAR', 'SAMP', 'KBD', 'SUP', 'SUB', 'Q', 'CITE', 'SPAN', 'BDO', 'BDI', 'BR', 'WBR', 'INS', 'DEL', 'IMG', 'EMBED', 'OBJECT', 'IFRAME', 'MAP', 'AREA', 'SCRIPT', 'NOSCRIPT', 'RUBY', 'VIDEO', 'AUDIO', 'INPUT', 'TEXTAREA', 'SELECT', 'BUTTON', 'LABEL', 'OUTPUT', 'DATALIST', 'KEYGEN', 'PROGRESS', 'COMMAND', 'CANVAS', 'TIME', 'METER' ];\n      function findLabel(virtualNode) {\n        var label = void 0;\n        if (virtualNode.actualNode.id) {\n          label = dom.findElmsInContext({\n            elm: 'label',\n            attr: 'for',\n            value: virtualNode.actualNode.id,\n            context: virtualNode.actualNode\n          })[0];\n        } else {\n          label = dom.findUpVirtual(virtualNode, 'label');\n        }\n        return axe.utils.getNodeFromTree(axe._tree[0], label);\n      }\n      function isButton(_ref11) {\n        var actualNode = _ref11.actualNode;\n        return [ 'button', 'reset', 'submit' ].includes(actualNode.type.toLowerCase());\n      }\n      function isInput(_ref12) {\n        var actualNode = _ref12.actualNode;\n        var nodeName = actualNode.nodeName.toUpperCase();\n        return nodeName === 'TEXTAREA' || nodeName === 'SELECT' || nodeName === 'INPUT' && actualNode.type.toLowerCase() !== 'hidden';\n      }\n      function shouldCheckSubtree(_ref13) {\n        var actualNode = _ref13.actualNode;\n        return [ 'BUTTON', 'SUMMARY', 'A' ].includes(actualNode.nodeName.toUpperCase());\n      }\n      function shouldNeverCheckSubtree(_ref14) {\n        var actualNode = _ref14.actualNode;\n        return [ 'TABLE', 'FIGURE' ].includes(actualNode.nodeName.toUpperCase());\n      }\n      function formValueText(_ref15) {\n        var actualNode = _ref15.actualNode;\n        var nodeName = actualNode.nodeName.toUpperCase();\n        if (nodeName === 'INPUT') {\n          if (!actualNode.hasAttribute('type') || inputTypes.includes(actualNode.type.toLowerCase())) {\n            return actualNode.value;\n          }\n          return '';\n        }\n        if (nodeName === 'SELECT') {\n          var opts = actualNode.options;\n          if (opts && opts.length) {\n            var returnText = '';\n            for (var i = 0; i < opts.length; i++) {\n              if (opts[i].selected) {\n                returnText += ' ' + opts[i].text;\n              }\n            }\n            return text.sanitize(returnText);\n          }\n          return '';\n        }\n        if (nodeName === 'TEXTAREA' && actualNode.value) {\n          return actualNode.value;\n        }\n        return '';\n      }\n      function checkDescendant(_ref16, nodeName) {\n        var actualNode = _ref16.actualNode;\n        var candidate = actualNode.querySelector(nodeName.toLowerCase());\n        if (candidate) {\n          return text.accessibleText(candidate);\n        }\n        return '';\n      }\n      function isEmbeddedControl(elm) {\n        if (!elm) {\n          return false;\n        }\n        var actualNode = elm.actualNode;\n        switch (actualNode.nodeName.toUpperCase()) {\n         case 'SELECT':\n         case 'TEXTAREA':\n          return true;\n\n         case 'INPUT':\n          return !actualNode.hasAttribute('type') || inputTypes.includes(actualNode.getAttribute('type').toLowerCase());\n\n         default:\n          return false;\n        }\n      }\n      function shouldCheckAlt(_ref17) {\n        var actualNode = _ref17.actualNode;\n        var nodeName = actualNode.nodeName.toUpperCase();\n        return [ 'IMG', 'APPLET', 'AREA' ].includes(nodeName) || nodeName === 'INPUT' && actualNode.type.toLowerCase() === 'image';\n      }\n      function nonEmptyText(t) {\n        return !!text.sanitize(t);\n      }\n      text.accessibleText = function accessibleText(element, inLabelledByContext) {\n        var virtualNode = axe.utils.getNodeFromTree(axe._tree[0], element);\n        return axe.commons.text.accessibleTextVirtual(virtualNode, inLabelledByContext);\n      };\n      text.accessibleTextVirtual = function accessibleTextVirtual(element, inLabelledByContext) {\n        var accessibleNameComputation = void 0;\n        var encounteredNodes = [];\n        if (element instanceof Node) {\n          element = axe.utils.getNodeFromTree(axe._tree[0], element);\n        }\n        function getInnerText(element, inLabelledByContext, inControlContext) {\n          return element.children.reduce(function(returnText, child) {\n            var actualNode = child.actualNode;\n            if (actualNode.nodeType === 3) {\n              returnText += actualNode.nodeValue;\n            } else if (actualNode.nodeType === 1) {\n              if (!phrasingElements.includes(actualNode.nodeName.toUpperCase())) {\n                returnText += ' ';\n              }\n              returnText += accessibleNameComputation(child, inLabelledByContext, inControlContext);\n            }\n            return returnText;\n          }, '');\n        }\n        function getLayoutTableText(element) {\n          if (!axe.commons.table.isDataTable(element.actualNode) && axe.commons.table.getAllCells(element.actualNode).length === 1) {\n            return getInnerText(element, false, false).trim();\n          }\n          return '';\n        }\n        function checkNative(element, inLabelledByContext, inControlContext) {\n          var returnText = '';\n          var actualNode = element.actualNode;\n          var nodeName = actualNode.nodeName.toUpperCase();\n          if (shouldCheckSubtree(element)) {\n            returnText = getInnerText(element, false, false) || '';\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (nodeName === 'FIGURE') {\n            returnText = checkDescendant(element, 'figcaption');\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (nodeName === 'TABLE') {\n            returnText = checkDescendant(element, 'caption');\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n            returnText = actualNode.getAttribute('title') || actualNode.getAttribute('summary') || getLayoutTableText(element) || '';\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (shouldCheckAlt(element)) {\n            return actualNode.getAttribute('alt') || '';\n          }\n          if (isInput(element) && !inControlContext) {\n            if (isButton(element)) {\n              return actualNode.value || actualNode.title || defaultButtonValues[actualNode.type] || '';\n            }\n            var labelElement = findLabel(element);\n            if (labelElement) {\n              return accessibleNameComputation(labelElement, inLabelledByContext, true);\n            }\n          }\n          return '';\n        }\n        function checkARIA(element, inLabelledByContext, inControlContext) {\n          var returnText = '';\n          var actualNode = element.actualNode;\n          if (!inLabelledByContext && actualNode.hasAttribute('aria-labelledby')) {\n            returnText = text.sanitize(dom.idrefs(actualNode, 'aria-labelledby').map(function(label) {\n              if (label !== null) {\n                if (actualNode === label) {\n                  encounteredNodes.pop();\n                }\n                var vLabel = axe.utils.getNodeFromTree(axe._tree[0], label);\n                return accessibleNameComputation(vLabel, true, actualNode !== label);\n              } else {\n                return '';\n              }\n            }).join(' '));\n          }\n          if (!returnText && !(inControlContext && isEmbeddedControl(element)) && actualNode.hasAttribute('aria-label')) {\n            return text.sanitize(actualNode.getAttribute('aria-label'));\n          }\n          return returnText;\n        }\n        accessibleNameComputation = function accessibleNameComputation(element, inLabelledByContext, inControlContext) {\n          var returnText = void 0;\n          if (!element || encounteredNodes.includes(element)) {\n            return '';\n          } else if (element !== null && element.actualNode instanceof Node !== true) {\n            throw new Error('Invalid argument. Virtual Node must be provided');\n          } else if (!inLabelledByContext && !dom.isVisible(element.actualNode, true)) {\n            return '';\n          }\n          encounteredNodes.push(element);\n          var role = element.actualNode.getAttribute('role');\n          returnText = checkARIA(element, inLabelledByContext, inControlContext);\n          if (nonEmptyText(returnText)) {\n            return returnText;\n          }\n          returnText = checkNative(element, inLabelledByContext, inControlContext);\n          if (nonEmptyText(returnText)) {\n            return returnText;\n          }\n          if (inControlContext) {\n            returnText = formValueText(element);\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (!shouldNeverCheckSubtree(element) && (!role || aria.getRolesWithNameFromContents().indexOf(role) !== -1)) {\n            returnText = getInnerText(element, inLabelledByContext, inControlContext);\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (element.actualNode.hasAttribute('title')) {\n            return element.actualNode.getAttribute('title');\n          }\n          return '';\n        };\n        return text.sanitize(accessibleNameComputation(element, inLabelledByContext));\n      };\n      text.labelVirtual = function(node) {\n        var ref, candidate, doc;\n        candidate = aria.labelVirtual(node);\n        if (candidate) {\n          return candidate;\n        }\n        if (node.actualNode.id) {\n          var id = axe.commons.utils.escapeSelector(node.actualNode.getAttribute('id'));\n          doc = axe.commons.dom.getRootNode(node.actualNode);\n          ref = doc.querySelector('label[for=\"' + id + '\"]');\n          candidate = ref && text.visible(ref, true);\n          if (candidate) {\n            return candidate;\n          }\n        }\n        ref = dom.findUpVirtual(node, 'label');\n        candidate = ref && text.visible(ref, true);\n        if (candidate) {\n          return candidate;\n        }\n        return null;\n      };\n      text.label = function(node) {\n        node = axe.utils.getNodeFromTree(axe._tree[0], node);\n        return text.labelVirtual(node);\n      };\n      text.sanitize = function(str) {\n        'use strict';\n        return str.replace(/\\r\\n/g, '\\n').replace(/\\u00A0/g, ' ').replace(/[\\s]{2,}/g, ' ').trim();\n      };\n      text.visibleVirtual = function(element, screenReader, noRecursing) {\n        var result = element.children.map(function(child) {\n          if (child.actualNode.nodeType === 3) {\n            var nodeValue = child.actualNode.nodeValue;\n            if (nodeValue && dom.isVisible(element.actualNode, screenReader)) {\n              return nodeValue;\n            }\n          } else if (!noRecursing) {\n            return text.visibleVirtual(child, screenReader);\n          }\n        }).join('');\n        return text.sanitize(result);\n      };\n      text.visible = function(element, screenReader, noRecursing) {\n        element = axe.utils.getNodeFromTree(axe._tree[0], element);\n        return text.visibleVirtual(element, screenReader, noRecursing);\n      };\n      axe.utils.tokenList = function(str) {\n        'use strict';\n        return str.trim().replace(/\\s{2,}/g, ' ').split(' ');\n      };\n      var langs = [ 'aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'in', 'io', 'is', 'it', 'iu', 'iw', 'ja', 'ji', 'jv', 'jw', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mo', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu', 'aaa', 'aab', 'aac', 'aad', 'aae', 'aaf', 'aag', 'aah', 'aai', 'aak', 'aal', 'aam', 'aan', 'aao', 'aap', 'aaq', 'aas', 'aat', 'aau', 'aav', 'aaw', 'aax', 'aaz', 'aba', 'abb', 'abc', 'abd', 'abe', 'abf', 'abg', 'abh', 'abi', 'abj', 'abl', 'abm', 'abn', 'abo', 'abp', 'abq', 'abr', 'abs', 'abt', 'abu', 'abv', 'abw', 'abx', 'aby', 'abz', 'aca', 'acb', 'acd', 'ace', 'acf', 'ach', 'aci', 'ack', 'acl', 'acm', 'acn', 'acp', 'acq', 'acr', 'acs', 'act', 'acu', 'acv', 'acw', 'acx', 'acy', 'acz', 'ada', 'adb', 'add', 'ade', 'adf', 'adg', 'adh', 'adi', 'adj', 'adl', 'adn', 'ado', 'adp', 'adq', 'adr', 'ads', 'adt', 'adu', 'adw', 'adx', 'ady', 'adz', 'aea', 'aeb', 'aec', 'aed', 'aee', 'aek', 'ael', 'aem', 'aen', 'aeq', 'aer', 'aes', 'aeu', 'aew', 'aey', 'aez', 'afa', 'afb', 'afd', 'afe', 'afg', 'afh', 'afi', 'afk', 'afn', 'afo', 'afp', 'afs', 'aft', 'afu', 'afz', 'aga', 'agb', 'agc', 'agd', 'age', 'agf', 'agg', 'agh', 'agi', 'agj', 'agk', 'agl', 'agm', 'agn', 'ago', 'agp', 'agq', 'agr', 'ags', 'agt', 'agu', 'agv', 'agw', 'agx', 'agy', 'agz', 'aha', 'ahb', 'ahg', 'ahh', 'ahi', 'ahk', 'ahl', 'ahm', 'ahn', 'aho', 'ahp', 'ahr', 'ahs', 'aht', 'aia', 'aib', 'aic', 'aid', 'aie', 'aif', 'aig', 'aih', 'aii', 'aij', 'aik', 'ail', 'aim', 'ain', 'aio', 'aip', 'aiq', 'air', 'ais', 'ait', 'aiw', 'aix', 'aiy', 'aja', 'ajg', 'aji', 'ajn', 'ajp', 'ajt', 'aju', 'ajw', 'ajz', 'akb', 'akc', 'akd', 'ake', 'akf', 'akg', 'akh', 'aki', 'akj', 'akk', 'akl', 'akm', 'ako', 'akp', 'akq', 'akr', 'aks', 'akt', 'aku', 'akv', 'akw', 'akx', 'aky', 'akz', 'ala', 'alc', 'ald', 'ale', 'alf', 'alg', 'alh', 'ali', 'alj', 'alk', 'all', 'alm', 'aln', 'alo', 'alp', 'alq', 'alr', 'als', 'alt', 'alu', 'alv', 'alw', 'alx', 'aly', 'alz', 'ama', 'amb', 'amc', 'ame', 'amf', 'amg', 'ami', 'amj', 'amk', 'aml', 'amm', 'amn', 'amo', 'amp', 'amq', 'amr', 'ams', 'amt', 'amu', 'amv', 'amw', 'amx', 'amy', 'amz', 'ana', 'anb', 'anc', 'and', 'ane', 'anf', 'ang', 'anh', 'ani', 'anj', 'ank', 'anl', 'anm', 'ann', 'ano', 'anp', 'anq', 'anr', 'ans', 'ant', 'anu', 'anv', 'anw', 'anx', 'any', 'anz', 'aoa', 'aob', 'aoc', 'aod', 'aoe', 'aof', 'aog', 'aoh', 'aoi', 'aoj', 'aok', 'aol', 'aom', 'aon', 'aor', 'aos', 'aot', 'aou', 'aox', 'aoz', 'apa', 'apb', 'apc', 'apd', 'ape', 'apf', 'apg', 'aph', 'api', 'apj', 'apk', 'apl', 'apm', 'apn', 'apo', 'app', 'apq', 'apr', 'aps', 'apt', 'apu', 'apv', 'apw', 'apx', 'apy', 'apz', 'aqa', 'aqc', 'aqd', 'aqg', 'aql', 'aqm', 'aqn', 'aqp', 'aqr', 'aqt', 'aqz', 'arb', 'arc', 'ard', 'are', 'arh', 'ari', 'arj', 'ark', 'arl', 'arn', 'aro', 'arp', 'arq', 'arr', 'ars', 'art', 'aru', 'arv', 'arw', 'arx', 'ary', 'arz', 'asa', 'asb', 'asc', 'asd', 'ase', 'asf', 'asg', 'ash', 'asi', 'asj', 'ask', 'asl', 'asn', 'aso', 'asp', 'asq', 'asr', 'ass', 'ast', 'asu', 'asv', 'asw', 'asx', 'asy', 'asz', 'ata', 'atb', 'atc', 'atd', 'ate', 'atg', 'ath', 'ati', 'atj', 'atk', 'atl', 'atm', 'atn', 'ato', 'atp', 'atq', 'atr', 'ats', 'att', 'atu', 'atv', 'atw', 'atx', 'aty', 'atz', 'aua', 'aub', 'auc', 'aud', 'aue', 'auf', 'aug', 'auh', 'aui', 'auj', 'auk', 'aul', 'aum', 'aun', 'auo', 'aup', 'auq', 'aur', 'aus', 'aut', 'auu', 'auw', 'aux', 'auy', 'auz', 'avb', 'avd', 'avi', 'avk', 'avl', 'avm', 'avn', 'avo', 'avs', 'avt', 'avu', 'avv', 'awa', 'awb', 'awc', 'awd', 'awe', 'awg', 'awh', 'awi', 'awk', 'awm', 'awn', 'awo', 'awr', 'aws', 'awt', 'awu', 'awv', 'aww', 'awx', 'awy', 'axb', 'axe', 'axg', 'axk', 'axl', 'axm', 'axx', 'aya', 'ayb', 'ayc', 'ayd', 'aye', 'ayg', 'ayh', 'ayi', 'ayk', 'ayl', 'ayn', 'ayo', 'ayp', 'ayq', 'ayr', 'ays', 'ayt', 'ayu', 'ayx', 'ayy', 'ayz', 'aza', 'azb', 'azc', 'azd', 'azg', 'azj', 'azm', 'azn', 'azo', 'azt', 'azz', 'baa', 'bab', 'bac', 'bad', 'bae', 'baf', 'bag', 'bah', 'bai', 'baj', 'bal', 'ban', 'bao', 'bap', 'bar', 'bas', 'bat', 'bau', 'bav', 'baw', 'bax', 'bay', 'baz', 'bba', 'bbb', 'bbc', 'bbd', 'bbe', 'bbf', 'bbg', 'bbh', 'bbi', 'bbj', 'bbk', 'bbl', 'bbm', 'bbn', 'bbo', 'bbp', 'bbq', 'bbr', 'bbs', 'bbt', 'bbu', 'bbv', 'bbw', 'bbx', 'bby', 'bbz', 'bca', 'bcb', 'bcc', 'bcd', 'bce', 'bcf', 'bcg', 'bch', 'bci', 'bcj', 'bck', 'bcl', 'bcm', 'bcn', 'bco', 'bcp', 'bcq', 'bcr', 'bcs', 'bct', 'bcu', 'bcv', 'bcw', 'bcy', 'bcz', 'bda', 'bdb', 'bdc', 'bdd', 'bde', 'bdf', 'bdg', 'bdh', 'bdi', 'bdj', 'bdk', 'bdl', 'bdm', 'bdn', 'bdo', 'bdp', 'bdq', 'bdr', 'bds', 'bdt', 'bdu', 'bdv', 'bdw', 'bdx', 'bdy', 'bdz', 'bea', 'beb', 'bec', 'bed', 'bee', 'bef', 'beg', 'beh', 'bei', 'bej', 'bek', 'bem', 'beo', 'bep', 'beq', 'ber', 'bes', 'bet', 'beu', 'bev', 'bew', 'bex', 'bey', 'bez', 'bfa', 'bfb', 'bfc', 'bfd', 'bfe', 'bff', 'bfg', 'bfh', 'bfi', 'bfj', 'bfk', 'bfl', 'bfm', 'bfn', 'bfo', 'bfp', 'bfq', 'bfr', 'bfs', 'bft', 'bfu', 'bfw', 'bfx', 'bfy', 'bfz', 'bga', 'bgb', 'bgc', 'bgd', 'bge', 'bgf', 'bgg', 'bgi', 'bgj', 'bgk', 'bgl', 'bgm', 'bgn', 'bgo', 'bgp', 'bgq', 'bgr', 'bgs', 'bgt', 'bgu', 'bgv', 'bgw', 'bgx', 'bgy', 'bgz', 'bha', 'bhb', 'bhc', 'bhd', 'bhe', 'bhf', 'bhg', 'bhh', 'bhi', 'bhj', 'bhk', 'bhl', 'bhm', 'bhn', 'bho', 'bhp', 'bhq', 'bhr', 'bhs', 'bht', 'bhu', 'bhv', 'bhw', 'bhx', 'bhy', 'bhz', 'bia', 'bib', 'bic', 'bid', 'bie', 'bif', 'big', 'bij', 'bik', 'bil', 'bim', 'bin', 'bio', 'bip', 'biq', 'bir', 'bit', 'biu', 'biv', 'biw', 'bix', 'biy', 'biz', 'bja', 'bjb', 'bjc', 'bjd', 'bje', 'bjf', 'bjg', 'bjh', 'bji', 'bjj', 'bjk', 'bjl', 'bjm', 'bjn', 'bjo', 'bjp', 'bjq', 'bjr', 'bjs', 'bjt', 'bju', 'bjv', 'bjw', 'bjx', 'bjy', 'bjz', 'bka', 'bkb', 'bkc', 'bkd', 'bkf', 'bkg', 'bkh', 'bki', 'bkj', 'bkk', 'bkl', 'bkm', 'bkn', 'bko', 'bkp', 'bkq', 'bkr', 'bks', 'bkt', 'bku', 'bkv', 'bkw', 'bkx', 'bky', 'bkz', 'bla', 'blb', 'blc', 'bld', 'ble', 'blf', 'blg', 'blh', 'bli', 'blj', 'blk', 'bll', 'blm', 'bln', 'blo', 'blp', 'blq', 'blr', 'bls', 'blt', 'blv', 'blw', 'blx', 'bly', 'blz', 'bma', 'bmb', 'bmc', 'bmd', 'bme', 'bmf', 'bmg', 'bmh', 'bmi', 'bmj', 'bmk', 'bml', 'bmm', 'bmn', 'bmo', 'bmp', 'bmq', 'bmr', 'bms', 'bmt', 'bmu', 'bmv', 'bmw', 'bmx', 'bmy', 'bmz', 'bna', 'bnb', 'bnc', 'bnd', 'bne', 'bnf', 'bng', 'bni', 'bnj', 'bnk', 'bnl', 'bnm', 'bnn', 'bno', 'bnp', 'bnq', 'bnr', 'bns', 'bnt', 'bnu', 'bnv', 'bnw', 'bnx', 'bny', 'bnz', 'boa', 'bob', 'boe', 'bof', 'bog', 'boh', 'boi', 'boj', 'bok', 'bol', 'bom', 'bon', 'boo', 'bop', 'boq', 'bor', 'bot', 'bou', 'bov', 'bow', 'box', 'boy', 'boz', 'bpa', 'bpb', 'bpd', 'bpg', 'bph', 'bpi', 'bpj', 'bpk', 'bpl', 'bpm', 'bpn', 'bpo', 'bpp', 'bpq', 'bpr', 'bps', 'bpt', 'bpu', 'bpv', 'bpw', 'bpx', 'bpy', 'bpz', 'bqa', 'bqb', 'bqc', 'bqd', 'bqf', 'bqg', 'bqh', 'bqi', 'bqj', 'bqk', 'bql', 'bqm', 'bqn', 'bqo', 'bqp', 'bqq', 'bqr', 'bqs', 'bqt', 'bqu', 'bqv', 'bqw', 'bqx', 'bqy', 'bqz', 'bra', 'brb', 'brc', 'brd', 'brf', 'brg', 'brh', 'bri', 'brj', 'brk', 'brl', 'brm', 'brn', 'bro', 'brp', 'brq', 'brr', 'brs', 'brt', 'bru', 'brv', 'brw', 'brx', 'bry', 'brz', 'bsa', 'bsb', 'bsc', 'bse', 'bsf', 'bsg', 'bsh', 'bsi', 'bsj', 'bsk', 'bsl', 'bsm', 'bsn', 'bso', 'bsp', 'bsq', 'bsr', 'bss', 'bst', 'bsu', 'bsv', 'bsw', 'bsx', 'bsy', 'bta', 'btb', 'btc', 'btd', 'bte', 'btf', 'btg', 'bth', 'bti', 'btj', 'btk', 'btl', 'btm', 'btn', 'bto', 'btp', 'btq', 'btr', 'bts', 'btt', 'btu', 'btv', 'btw', 'btx', 'bty', 'btz', 'bua', 'bub', 'buc', 'bud', 'bue', 'buf', 'bug', 'buh', 'bui', 'buj', 'buk', 'bum', 'bun', 'buo', 'bup', 'buq', 'bus', 'but', 'buu', 'buv', 'buw', 'bux', 'buy', 'buz', 'bva', 'bvb', 'bvc', 'bvd', 'bve', 'bvf', 'bvg', 'bvh', 'bvi', 'bvj', 'bvk', 'bvl', 'bvm', 'bvn', 'bvo', 'bvp', 'bvq', 'bvr', 'bvt', 'bvu', 'bvv', 'bvw', 'bvx', 'bvy', 'bvz', 'bwa', 'bwb', 'bwc', 'bwd', 'bwe', 'bwf', 'bwg', 'bwh', 'bwi', 'bwj', 'bwk', 'bwl', 'bwm', 'bwn', 'bwo', 'bwp', 'bwq', 'bwr', 'bws', 'bwt', 'bwu', 'bww', 'bwx', 'bwy', 'bwz', 'bxa', 'bxb', 'bxc', 'bxd', 'bxe', 'bxf', 'bxg', 'bxh', 'bxi', 'bxj', 'bxk', 'bxl', 'bxm', 'bxn', 'bxo', 'bxp', 'bxq', 'bxr', 'bxs', 'bxu', 'bxv', 'bxw', 'bxx', 'bxz', 'bya', 'byb', 'byc', 'byd', 'bye', 'byf', 'byg', 'byh', 'byi', 'byj', 'byk', 'byl', 'bym', 'byn', 'byo', 'byp', 'byq', 'byr', 'bys', 'byt', 'byv', 'byw', 'byx', 'byy', 'byz', 'bza', 'bzb', 'bzc', 'bzd', 'bze', 'bzf', 'bzg', 'bzh', 'bzi', 'bzj', 'bzk', 'bzl', 'bzm', 'bzn', 'bzo', 'bzp', 'bzq', 'bzr', 'bzs', 'bzt', 'bzu', 'bzv', 'bzw', 'bzx', 'bzy', 'bzz', 'caa', 'cab', 'cac', 'cad', 'cae', 'caf', 'cag', 'cah', 'cai', 'caj', 'cak', 'cal', 'cam', 'can', 'cao', 'cap', 'caq', 'car', 'cas', 'cau', 'cav', 'caw', 'cax', 'cay', 'caz', 'cba', 'cbb', 'cbc', 'cbd', 'cbe', 'cbg', 'cbh', 'cbi', 'cbj', 'cbk', 'cbl', 'cbn', 'cbo', 'cbq', 'cbr', 'cbs', 'cbt', 'cbu', 'cbv', 'cbw', 'cby', 'cca', 'ccc', 'ccd', 'cce', 'ccg', 'cch', 'ccj', 'ccl', 'ccm', 'ccn', 'cco', 'ccp', 'ccq', 'ccr', 'ccs', 'cda', 'cdc', 'cdd', 'cde', 'cdf', 'cdg', 'cdh', 'cdi', 'cdj', 'cdm', 'cdn', 'cdo', 'cdr', 'cds', 'cdy', 'cdz', 'cea', 'ceb', 'ceg', 'cek', 'cel', 'cen', 'cet', 'cfa', 'cfd', 'cfg', 'cfm', 'cga', 'cgc', 'cgg', 'cgk', 'chb', 'chc', 'chd', 'chf', 'chg', 'chh', 'chj', 'chk', 'chl', 'chm', 'chn', 'cho', 'chp', 'chq', 'chr', 'cht', 'chw', 'chx', 'chy', 'chz', 'cia', 'cib', 'cic', 'cid', 'cie', 'cih', 'cik', 'cim', 'cin', 'cip', 'cir', 'ciw', 'ciy', 'cja', 'cje', 'cjh', 'cji', 'cjk', 'cjm', 'cjn', 'cjo', 'cjp', 'cjr', 'cjs', 'cjv', 'cjy', 'cka', 'ckb', 'ckh', 'ckl', 'ckn', 'cko', 'ckq', 'ckr', 'cks', 'ckt', 'cku', 'ckv', 'ckx', 'cky', 'ckz', 'cla', 'clc', 'cld', 'cle', 'clh', 'cli', 'clj', 'clk', 'cll', 'clm', 'clo', 'clt', 'clu', 'clw', 'cly', 'cma', 'cmc', 'cme', 'cmg', 'cmi', 'cmk', 'cml', 'cmm', 'cmn', 'cmo', 'cmr', 'cms', 'cmt', 'cna', 'cnb', 'cnc', 'cng', 'cnh', 'cni', 'cnk', 'cnl', 'cno', 'cns', 'cnt', 'cnu', 'cnw', 'cnx', 'coa', 'cob', 'coc', 'cod', 'coe', 'cof', 'cog', 'coh', 'coj', 'cok', 'col', 'com', 'con', 'coo', 'cop', 'coq', 'cot', 'cou', 'cov', 'cow', 'cox', 'coy', 'coz', 'cpa', 'cpb', 'cpc', 'cpe', 'cpf', 'cpg', 'cpi', 'cpn', 'cpo', 'cpp', 'cps', 'cpu', 'cpx', 'cpy', 'cqd', 'cqu', 'cra', 'crb', 'crc', 'crd', 'crf', 'crg', 'crh', 'cri', 'crj', 'crk', 'crl', 'crm', 'crn', 'cro', 'crp', 'crq', 'crr', 'crs', 'crt', 'crv', 'crw', 'crx', 'cry', 'crz', 'csa', 'csb', 'csc', 'csd', 'cse', 'csf', 'csg', 'csh', 'csi', 'csj', 'csk', 'csl', 'csm', 'csn', 'cso', 'csq', 'csr', 'css', 'cst', 'csu', 'csv', 'csw', 'csy', 'csz', 'cta', 'ctc', 'ctd', 'cte', 'ctg', 'cth', 'ctl', 'ctm', 'ctn', 'cto', 'ctp', 'cts', 'ctt', 'ctu', 'ctz', 'cua', 'cub', 'cuc', 'cug', 'cuh', 'cui', 'cuj', 'cuk', 'cul', 'cum', 'cuo', 'cup', 'cuq', 'cur', 'cus', 'cut', 'cuu', 'cuv', 'cuw', 'cux', 'cvg', 'cvn', 'cwa', 'cwb', 'cwd', 'cwe', 'cwg', 'cwt', 'cya', 'cyb', 'cyo', 'czh', 'czk', 'czn', 'czo', 'czt', 'daa', 'dac', 'dad', 'dae', 'daf', 'dag', 'dah', 'dai', 'daj', 'dak', 'dal', 'dam', 'dao', 'dap', 'daq', 'dar', 'das', 'dau', 'dav', 'daw', 'dax', 'day', 'daz', 'dba', 'dbb', 'dbd', 'dbe', 'dbf', 'dbg', 'dbi', 'dbj', 'dbl', 'dbm', 'dbn', 'dbo', 'dbp', 'dbq', 'dbr', 'dbt', 'dbu', 'dbv', 'dbw', 'dby', 'dcc', 'dcr', 'dda', 'ddd', 'dde', 'ddg', 'ddi', 'ddj', 'ddn', 'ddo', 'ddr', 'dds', 'ddw', 'dec', 'ded', 'dee', 'def', 'deg', 'deh', 'dei', 'dek', 'del', 'dem', 'den', 'dep', 'deq', 'der', 'des', 'dev', 'dez', 'dga', 'dgb', 'dgc', 'dgd', 'dge', 'dgg', 'dgh', 'dgi', 'dgk', 'dgl', 'dgn', 'dgo', 'dgr', 'dgs', 'dgt', 'dgu', 'dgw', 'dgx', 'dgz', 'dha', 'dhd', 'dhg', 'dhi', 'dhl', 'dhm', 'dhn', 'dho', 'dhr', 'dhs', 'dhu', 'dhv', 'dhw', 'dhx', 'dia', 'dib', 'dic', 'did', 'dif', 'dig', 'dih', 'dii', 'dij', 'dik', 'dil', 'dim', 'din', 'dio', 'dip', 'diq', 'dir', 'dis', 'dit', 'diu', 'diw', 'dix', 'diy', 'diz', 'dja', 'djb', 'djc', 'djd', 'dje', 'djf', 'dji', 'djj', 'djk', 'djl', 'djm', 'djn', 'djo', 'djr', 'dju', 'djw', 'dka', 'dkk', 'dkl', 'dkr', 'dks', 'dkx', 'dlg', 'dlk', 'dlm', 'dln', 'dma', 'dmb', 'dmc', 'dmd', 'dme', 'dmg', 'dmk', 'dml', 'dmm', 'dmn', 'dmo', 'dmr', 'dms', 'dmu', 'dmv', 'dmw', 'dmx', 'dmy', 'dna', 'dnd', 'dne', 'dng', 'dni', 'dnj', 'dnk', 'dnn', 'dnr', 'dnt', 'dnu', 'dnv', 'dnw', 'dny', 'doa', 'dob', 'doc', 'doe', 'dof', 'doh', 'doi', 'dok', 'dol', 'don', 'doo', 'dop', 'doq', 'dor', 'dos', 'dot', 'dov', 'dow', 'dox', 'doy', 'doz', 'dpp', 'dra', 'drb', 'drc', 'drd', 'dre', 'drg', 'drh', 'dri', 'drl', 'drn', 'dro', 'drq', 'drr', 'drs', 'drt', 'dru', 'drw', 'dry', 'dsb', 'dse', 'dsh', 'dsi', 'dsl', 'dsn', 'dso', 'dsq', 'dta', 'dtb', 'dtd', 'dth', 'dti', 'dtk', 'dtm', 'dtn', 'dto', 'dtp', 'dtr', 'dts', 'dtt', 'dtu', 'dty', 'dua', 'dub', 'duc', 'dud', 'due', 'duf', 'dug', 'duh', 'dui', 'duj', 'duk', 'dul', 'dum', 'dun', 'duo', 'dup', 'duq', 'dur', 'dus', 'duu', 'duv', 'duw', 'dux', 'duy', 'duz', 'dva', 'dwa', 'dwl', 'dwr', 'dws', 'dwu', 'dww', 'dwy', 'dya', 'dyb', 'dyd', 'dyg', 'dyi', 'dym', 'dyn', 'dyo', 'dyu', 'dyy', 'dza', 'dzd', 'dze', 'dzg', 'dzl', 'dzn', 'eaa', 'ebg', 'ebk', 'ebo', 'ebr', 'ebu', 'ecr', 'ecs', 'ecy', 'eee', 'efa', 'efe', 'efi', 'ega', 'egl', 'ego', 'egx', 'egy', 'ehu', 'eip', 'eit', 'eiv', 'eja', 'eka', 'ekc', 'eke', 'ekg', 'eki', 'ekk', 'ekl', 'ekm', 'eko', 'ekp', 'ekr', 'eky', 'ele', 'elh', 'eli', 'elk', 'elm', 'elo', 'elp', 'elu', 'elx', 'ema', 'emb', 'eme', 'emg', 'emi', 'emk', 'emm', 'emn', 'emo', 'emp', 'ems', 'emu', 'emw', 'emx', 'emy', 'ena', 'enb', 'enc', 'end', 'enf', 'enh', 'enl', 'enm', 'enn', 'eno', 'enq', 'enr', 'enu', 'env', 'enw', 'enx', 'eot', 'epi', 'era', 'erg', 'erh', 'eri', 'erk', 'ero', 'err', 'ers', 'ert', 'erw', 'ese', 'esg', 'esh', 'esi', 'esk', 'esl', 'esm', 'esn', 'eso', 'esq', 'ess', 'esu', 'esx', 'esy', 'etb', 'etc', 'eth', 'etn', 'eto', 'etr', 'ets', 'ett', 'etu', 'etx', 'etz', 'euq', 'eve', 'evh', 'evn', 'ewo', 'ext', 'eya', 'eyo', 'eza', 'eze', 'faa', 'fab', 'fad', 'faf', 'fag', 'fah', 'fai', 'faj', 'fak', 'fal', 'fam', 'fan', 'fap', 'far', 'fat', 'fau', 'fax', 'fay', 'faz', 'fbl', 'fcs', 'fer', 'ffi', 'ffm', 'fgr', 'fia', 'fie', 'fil', 'fip', 'fir', 'fit', 'fiu', 'fiw', 'fkk', 'fkv', 'fla', 'flh', 'fli', 'fll', 'fln', 'flr', 'fly', 'fmp', 'fmu', 'fnb', 'fng', 'fni', 'fod', 'foi', 'fom', 'fon', 'for', 'fos', 'fox', 'fpe', 'fqs', 'frc', 'frd', 'frk', 'frm', 'fro', 'frp', 'frq', 'frr', 'frs', 'frt', 'fse', 'fsl', 'fss', 'fub', 'fuc', 'fud', 'fue', 'fuf', 'fuh', 'fui', 'fuj', 'fum', 'fun', 'fuq', 'fur', 'fut', 'fuu', 'fuv', 'fuy', 'fvr', 'fwa', 'fwe', 'gaa', 'gab', 'gac', 'gad', 'gae', 'gaf', 'gag', 'gah', 'gai', 'gaj', 'gak', 'gal', 'gam', 'gan', 'gao', 'gap', 'gaq', 'gar', 'gas', 'gat', 'gau', 'gav', 'gaw', 'gax', 'gay', 'gaz', 'gba', 'gbb', 'gbc', 'gbd', 'gbe', 'gbf', 'gbg', 'gbh', 'gbi', 'gbj', 'gbk', 'gbl', 'gbm', 'gbn', 'gbo', 'gbp', 'gbq', 'gbr', 'gbs', 'gbu', 'gbv', 'gbw', 'gbx', 'gby', 'gbz', 'gcc', 'gcd', 'gce', 'gcf', 'gcl', 'gcn', 'gcr', 'gct', 'gda', 'gdb', 'gdc', 'gdd', 'gde', 'gdf', 'gdg', 'gdh', 'gdi', 'gdj', 'gdk', 'gdl', 'gdm', 'gdn', 'gdo', 'gdq', 'gdr', 'gds', 'gdt', 'gdu', 'gdx', 'gea', 'geb', 'gec', 'ged', 'geg', 'geh', 'gei', 'gej', 'gek', 'gel', 'gem', 'geq', 'ges', 'gev', 'gew', 'gex', 'gey', 'gez', 'gfk', 'gft', 'gfx', 'gga', 'ggb', 'ggd', 'gge', 'ggg', 'ggk', 'ggl', 'ggn', 'ggo', 'ggr', 'ggt', 'ggu', 'ggw', 'gha', 'ghc', 'ghe', 'ghh', 'ghk', 'ghl', 'ghn', 'gho', 'ghr', 'ghs', 'ght', 'gia', 'gib', 'gic', 'gid', 'gie', 'gig', 'gih', 'gil', 'gim', 'gin', 'gio', 'gip', 'giq', 'gir', 'gis', 'git', 'giu', 'giw', 'gix', 'giy', 'giz', 'gji', 'gjk', 'gjm', 'gjn', 'gjr', 'gju', 'gka', 'gke', 'gkn', 'gko', 'gkp', 'gku', 'glc', 'gld', 'glh', 'gli', 'glj', 'glk', 'gll', 'glo', 'glr', 'glu', 'glw', 'gly', 'gma', 'gmb', 'gmd', 'gme', 'gmg', 'gmh', 'gml', 'gmm', 'gmn', 'gmq', 'gmu', 'gmv', 'gmw', 'gmx', 'gmy', 'gmz', 'gna', 'gnb', 'gnc', 'gnd', 'gne', 'gng', 'gnh', 'gni', 'gnk', 'gnl', 'gnm', 'gnn', 'gno', 'gnq', 'gnr', 'gnt', 'gnu', 'gnw', 'gnz', 'goa', 'gob', 'goc', 'god', 'goe', 'gof', 'gog', 'goh', 'goi', 'goj', 'gok', 'gol', 'gom', 'gon', 'goo', 'gop', 'goq', 'gor', 'gos', 'got', 'gou', 'gow', 'gox', 'goy', 'goz', 'gpa', 'gpe', 'gpn', 'gqa', 'gqi', 'gqn', 'gqr', 'gqu', 'gra', 'grb', 'grc', 'grd', 'grg', 'grh', 'gri', 'grj', 'grk', 'grm', 'gro', 'grq', 'grr', 'grs', 'grt', 'gru', 'grv', 'grw', 'grx', 'gry', 'grz', 'gse', 'gsg', 'gsl', 'gsm', 'gsn', 'gso', 'gsp', 'gss', 'gsw', 'gta', 'gti', 'gtu', 'gua', 'gub', 'guc', 'gud', 'gue', 'guf', 'gug', 'guh', 'gui', 'guk', 'gul', 'gum', 'gun', 'guo', 'gup', 'guq', 'gur', 'gus', 'gut', 'guu', 'guv', 'guw', 'gux', 'guz', 'gva', 'gvc', 'gve', 'gvf', 'gvj', 'gvl', 'gvm', 'gvn', 'gvo', 'gvp', 'gvr', 'gvs', 'gvy', 'gwa', 'gwb', 'gwc', 'gwd', 'gwe', 'gwf', 'gwg', 'gwi', 'gwj', 'gwm', 'gwn', 'gwr', 'gwt', 'gwu', 'gww', 'gwx', 'gxx', 'gya', 'gyb', 'gyd', 'gye', 'gyf', 'gyg', 'gyi', 'gyl', 'gym', 'gyn', 'gyr', 'gyy', 'gza', 'gzi', 'gzn', 'haa', 'hab', 'hac', 'had', 'hae', 'haf', 'hag', 'hah', 'hai', 'haj', 'hak', 'hal', 'ham', 'han', 'hao', 'hap', 'haq', 'har', 'has', 'hav', 'haw', 'hax', 'hay', 'haz', 'hba', 'hbb', 'hbn', 'hbo', 'hbu', 'hca', 'hch', 'hdn', 'hds', 'hdy', 'hea', 'hed', 'heg', 'heh', 'hei', 'hem', 'hgm', 'hgw', 'hhi', 'hhr', 'hhy', 'hia', 'hib', 'hid', 'hif', 'hig', 'hih', 'hii', 'hij', 'hik', 'hil', 'him', 'hio', 'hir', 'hit', 'hiw', 'hix', 'hji', 'hka', 'hke', 'hkk', 'hks', 'hla', 'hlb', 'hld', 'hle', 'hlt', 'hlu', 'hma', 'hmb', 'hmc', 'hmd', 'hme', 'hmf', 'hmg', 'hmh', 'hmi', 'hmj', 'hmk', 'hml', 'hmm', 'hmn', 'hmp', 'hmq', 'hmr', 'hms', 'hmt', 'hmu', 'hmv', 'hmw', 'hmx', 'hmy', 'hmz', 'hna', 'hnd', 'hne', 'hnh', 'hni', 'hnj', 'hnn', 'hno', 'hns', 'hnu', 'hoa', 'hob', 'hoc', 'hod', 'hoe', 'hoh', 'hoi', 'hoj', 'hok', 'hol', 'hom', 'hoo', 'hop', 'hor', 'hos', 'hot', 'hov', 'how', 'hoy', 'hoz', 'hpo', 'hps', 'hra', 'hrc', 'hre', 'hrk', 'hrm', 'hro', 'hrp', 'hrr', 'hrt', 'hru', 'hrw', 'hrx', 'hrz', 'hsb', 'hsh', 'hsl', 'hsn', 'hss', 'hti', 'hto', 'hts', 'htu', 'htx', 'hub', 'huc', 'hud', 'hue', 'huf', 'hug', 'huh', 'hui', 'huj', 'huk', 'hul', 'hum', 'huo', 'hup', 'huq', 'hur', 'hus', 'hut', 'huu', 'huv', 'huw', 'hux', 'huy', 'huz', 'hvc', 'hve', 'hvk', 'hvn', 'hvv', 'hwa', 'hwc', 'hwo', 'hya', 'hyx', 'iai', 'ian', 'iap', 'iar', 'iba', 'ibb', 'ibd', 'ibe', 'ibg', 'ibh', 'ibi', 'ibl', 'ibm', 'ibn', 'ibr', 'ibu', 'iby', 'ica', 'ich', 'icl', 'icr', 'ida', 'idb', 'idc', 'idd', 'ide', 'idi', 'idr', 'ids', 'idt', 'idu', 'ifa', 'ifb', 'ife', 'iff', 'ifk', 'ifm', 'ifu', 'ify', 'igb', 'ige', 'igg', 'igl', 'igm', 'ign', 'igo', 'igs', 'igw', 'ihb', 'ihi', 'ihp', 'ihw', 'iin', 'iir', 'ijc', 'ije', 'ijj', 'ijn', 'ijo', 'ijs', 'ike', 'iki', 'ikk', 'ikl', 'iko', 'ikp', 'ikr', 'iks', 'ikt', 'ikv', 'ikw', 'ikx', 'ikz', 'ila', 'ilb', 'ilg', 'ili', 'ilk', 'ill', 'ilm', 'ilo', 'ilp', 'ils', 'ilu', 'ilv', 'ilw', 'ima', 'ime', 'imi', 'iml', 'imn', 'imo', 'imr', 'ims', 'imy', 'inb', 'inc', 'ine', 'ing', 'inh', 'inj', 'inl', 'inm', 'inn', 'ino', 'inp', 'ins', 'int', 'inz', 'ior', 'iou', 'iow', 'ipi', 'ipo', 'iqu', 'iqw', 'ira', 'ire', 'irh', 'iri', 'irk', 'irn', 'iro', 'irr', 'iru', 'irx', 'iry', 'isa', 'isc', 'isd', 'ise', 'isg', 'ish', 'isi', 'isk', 'ism', 'isn', 'iso', 'isr', 'ist', 'isu', 'itb', 'itc', 'itd', 'ite', 'iti', 'itk', 'itl', 'itm', 'ito', 'itr', 'its', 'itt', 'itv', 'itw', 'itx', 'ity', 'itz', 'ium', 'ivb', 'ivv', 'iwk', 'iwm', 'iwo', 'iws', 'ixc', 'ixl', 'iya', 'iyo', 'iyx', 'izh', 'izi', 'izr', 'izz', 'jaa', 'jab', 'jac', 'jad', 'jae', 'jaf', 'jah', 'jaj', 'jak', 'jal', 'jam', 'jan', 'jao', 'jaq', 'jar', 'jas', 'jat', 'jau', 'jax', 'jay', 'jaz', 'jbe', 'jbi', 'jbj', 'jbk', 'jbn', 'jbo', 'jbr', 'jbt', 'jbu', 'jbw', 'jcs', 'jct', 'jda', 'jdg', 'jdt', 'jeb', 'jee', 'jeg', 'jeh', 'jei', 'jek', 'jel', 'jen', 'jer', 'jet', 'jeu', 'jgb', 'jge', 'jgk', 'jgo', 'jhi', 'jhs', 'jia', 'jib', 'jic', 'jid', 'jie', 'jig', 'jih', 'jii', 'jil', 'jim', 'jio', 'jiq', 'jit', 'jiu', 'jiv', 'jiy', 'jje', 'jjr', 'jka', 'jkm', 'jko', 'jkp', 'jkr', 'jku', 'jle', 'jls', 'jma', 'jmb', 'jmc', 'jmd', 'jmi', 'jml', 'jmn', 'jmr', 'jms', 'jmw', 'jmx', 'jna', 'jnd', 'jng', 'jni', 'jnj', 'jnl', 'jns', 'job', 'jod', 'jog', 'jor', 'jos', 'jow', 'jpa', 'jpr', 'jpx', 'jqr', 'jra', 'jrb', 'jrr', 'jrt', 'jru', 'jsl', 'jua', 'jub', 'juc', 'jud', 'juh', 'jui', 'juk', 'jul', 'jum', 'jun', 'juo', 'jup', 'jur', 'jus', 'jut', 'juu', 'juw', 'juy', 'jvd', 'jvn', 'jwi', 'jya', 'jye', 'jyy', 'kaa', 'kab', 'kac', 'kad', 'kae', 'kaf', 'kag', 'kah', 'kai', 'kaj', 'kak', 'kam', 'kao', 'kap', 'kaq', 'kar', 'kav', 'kaw', 'kax', 'kay', 'kba', 'kbb', 'kbc', 'kbd', 'kbe', 'kbf', 'kbg', 'kbh', 'kbi', 'kbj', 'kbk', 'kbl', 'kbm', 'kbn', 'kbo', 'kbp', 'kbq', 'kbr', 'kbs', 'kbt', 'kbu', 'kbv', 'kbw', 'kbx', 'kby', 'kbz', 'kca', 'kcb', 'kcc', 'kcd', 'kce', 'kcf', 'kcg', 'kch', 'kci', 'kcj', 'kck', 'kcl', 'kcm', 'kcn', 'kco', 'kcp', 'kcq', 'kcr', 'kcs', 'kct', 'kcu', 'kcv', 'kcw', 'kcx', 'kcy', 'kcz', 'kda', 'kdc', 'kdd', 'kde', 'kdf', 'kdg', 'kdh', 'kdi', 'kdj', 'kdk', 'kdl', 'kdm', 'kdn', 'kdo', 'kdp', 'kdq', 'kdr', 'kdt', 'kdu', 'kdv', 'kdw', 'kdx', 'kdy', 'kdz', 'kea', 'keb', 'kec', 'ked', 'kee', 'kef', 'keg', 'keh', 'kei', 'kej', 'kek', 'kel', 'kem', 'ken', 'keo', 'kep', 'keq', 'ker', 'kes', 'ket', 'keu', 'kev', 'kew', 'kex', 'key', 'kez', 'kfa', 'kfb', 'kfc', 'kfd', 'kfe', 'kff', 'kfg', 'kfh', 'kfi', 'kfj', 'kfk', 'kfl', 'kfm', 'kfn', 'kfo', 'kfp', 'kfq', 'kfr', 'kfs', 'kft', 'kfu', 'kfv', 'kfw', 'kfx', 'kfy', 'kfz', 'kga', 'kgb', 'kgc', 'kgd', 'kge', 'kgf', 'kgg', 'kgh', 'kgi', 'kgj', 'kgk', 'kgl', 'kgm', 'kgn', 'kgo', 'kgp', 'kgq', 'kgr', 'kgs', 'kgt', 'kgu', 'kgv', 'kgw', 'kgx', 'kgy', 'kha', 'khb', 'khc', 'khd', 'khe', 'khf', 'khg', 'khh', 'khi', 'khj', 'khk', 'khl', 'khn', 'kho', 'khp', 'khq', 'khr', 'khs', 'kht', 'khu', 'khv', 'khw', 'khx', 'khy', 'khz', 'kia', 'kib', 'kic', 'kid', 'kie', 'kif', 'kig', 'kih', 'kii', 'kij', 'kil', 'kim', 'kio', 'kip', 'kiq', 'kis', 'kit', 'kiu', 'kiv', 'kiw', 'kix', 'kiy', 'kiz', 'kja', 'kjb', 'kjc', 'kjd', 'kje', 'kjf', 'kjg', 'kjh', 'kji', 'kjj', 'kjk', 'kjl', 'kjm', 'kjn', 'kjo', 'kjp', 'kjq', 'kjr', 'kjs', 'kjt', 'kju', 'kjv', 'kjx', 'kjy', 'kjz', 'kka', 'kkb', 'kkc', 'kkd', 'kke', 'kkf', 'kkg', 'kkh', 'kki', 'kkj', 'kkk', 'kkl', 'kkm', 'kkn', 'kko', 'kkp', 'kkq', 'kkr', 'kks', 'kkt', 'kku', 'kkv', 'kkw', 'kkx', 'kky', 'kkz', 'kla', 'klb', 'klc', 'kld', 'kle', 'klf', 'klg', 'klh', 'kli', 'klj', 'klk', 'kll', 'klm', 'kln', 'klo', 'klp', 'klq', 'klr', 'kls', 'klt', 'klu', 'klv', 'klw', 'klx', 'kly', 'klz', 'kma', 'kmb', 'kmc', 'kmd', 'kme', 'kmf', 'kmg', 'kmh', 'kmi', 'kmj', 'kmk', 'kml', 'kmm', 'kmn', 'kmo', 'kmp', 'kmq', 'kmr', 'kms', 'kmt', 'kmu', 'kmv', 'kmw', 'kmx', 'kmy', 'kmz', 'kna', 'knb', 'knc', 'knd', 'kne', 'knf', 'kng', 'kni', 'knj', 'knk', 'knl', 'knm', 'knn', 'kno', 'knp', 'knq', 'knr', 'kns', 'knt', 'knu', 'knv', 'knw', 'knx', 'kny', 'knz', 'koa', 'koc', 'kod', 'koe', 'kof', 'kog', 'koh', 'koi', 'koj', 'kok', 'kol', 'koo', 'kop', 'koq', 'kos', 'kot', 'kou', 'kov', 'kow', 'kox', 'koy', 'koz', 'kpa', 'kpb', 'kpc', 'kpd', 'kpe', 'kpf', 'kpg', 'kph', 'kpi', 'kpj', 'kpk', 'kpl', 'kpm', 'kpn', 'kpo', 'kpp', 'kpq', 'kpr', 'kps', 'kpt', 'kpu', 'kpv', 'kpw', 'kpx', 'kpy', 'kpz', 'kqa', 'kqb', 'kqc', 'kqd', 'kqe', 'kqf', 'kqg', 'kqh', 'kqi', 'kqj', 'kqk', 'kql', 'kqm', 'kqn', 'kqo', 'kqp', 'kqq', 'kqr', 'kqs', 'kqt', 'kqu', 'kqv', 'kqw', 'kqx', 'kqy', 'kqz', 'kra', 'krb', 'krc', 'krd', 'kre', 'krf', 'krh', 'kri', 'krj', 'krk', 'krl', 'krm', 'krn', 'kro', 'krp', 'krr', 'krs', 'krt', 'kru', 'krv', 'krw', 'krx', 'kry', 'krz', 'ksa', 'ksb', 'ksc', 'ksd', 'kse', 'ksf', 'ksg', 'ksh', 'ksi', 'ksj', 'ksk', 'ksl', 'ksm', 'ksn', 'kso', 'ksp', 'ksq', 'ksr', 'kss', 'kst', 'ksu', 'ksv', 'ksw', 'ksx', 'ksy', 'ksz', 'kta', 'ktb', 'ktc', 'ktd', 'kte', 'ktf', 'ktg', 'kth', 'kti', 'ktj', 'ktk', 'ktl', 'ktm', 'ktn', 'kto', 'ktp', 'ktq', 'ktr', 'kts', 'ktt', 'ktu', 'ktv', 'ktw', 'ktx', 'kty', 'ktz', 'kub', 'kuc', 'kud', 'kue', 'kuf', 'kug', 'kuh', 'kui', 'kuj', 'kuk', 'kul', 'kum', 'kun', 'kuo', 'kup', 'kuq', 'kus', 'kut', 'kuu', 'kuv', 'kuw', 'kux', 'kuy', 'kuz', 'kva', 'kvb', 'kvc', 'kvd', 'kve', 'kvf', 'kvg', 'kvh', 'kvi', 'kvj', 'kvk', 'kvl', 'kvm', 'kvn', 'kvo', 'kvp', 'kvq', 'kvr', 'kvs', 'kvt', 'kvu', 'kvv', 'kvw', 'kvx', 'kvy', 'kvz', 'kwa', 'kwb', 'kwc', 'kwd', 'kwe', 'kwf', 'kwg', 'kwh', 'kwi', 'kwj', 'kwk', 'kwl', 'kwm', 'kwn', 'kwo', 'kwp', 'kwq', 'kwr', 'kws', 'kwt', 'kwu', 'kwv', 'kww', 'kwx', 'kwy', 'kwz', 'kxa', 'kxb', 'kxc', 'kxd', 'kxe', 'kxf', 'kxh', 'kxi', 'kxj', 'kxk', 'kxl', 'kxm', 'kxn', 'kxo', 'kxp', 'kxq', 'kxr', 'kxs', 'kxt', 'kxu', 'kxv', 'kxw', 'kxx', 'kxy', 'kxz', 'kya', 'kyb', 'kyc', 'kyd', 'kye', 'kyf', 'kyg', 'kyh', 'kyi', 'kyj', 'kyk', 'kyl', 'kym', 'kyn', 'kyo', 'kyp', 'kyq', 'kyr', 'kys', 'kyt', 'kyu', 'kyv', 'kyw', 'kyx', 'kyy', 'kyz', 'kza', 'kzb', 'kzc', 'kzd', 'kze', 'kzf', 'kzg', 'kzh', 'kzi', 'kzj', 'kzk', 'kzl', 'kzm', 'kzn', 'kzo', 'kzp', 'kzq', 'kzr', 'kzs', 'kzt', 'kzu', 'kzv', 'kzw', 'kzx', 'kzy', 'kzz', 'laa', 'lab', 'lac', 'lad', 'lae', 'laf', 'lag', 'lah', 'lai', 'laj', 'lak', 'lal', 'lam', 'lan', 'lap', 'laq', 'lar', 'las', 'lau', 'law', 'lax', 'lay', 'laz', 'lba', 'lbb', 'lbc', 'lbe', 'lbf', 'lbg', 'lbi', 'lbj', 'lbk', 'lbl', 'lbm', 'lbn', 'lbo', 'lbq', 'lbr', 'lbs', 'lbt', 'lbu', 'lbv', 'lbw', 'lbx', 'lby', 'lbz', 'lcc', 'lcd', 'lce', 'lcf', 'lch', 'lcl', 'lcm', 'lcp', 'lcq', 'lcs', 'lda', 'ldb', 'ldd', 'ldg', 'ldh', 'ldi', 'ldj', 'ldk', 'ldl', 'ldm', 'ldn', 'ldo', 'ldp', 'ldq', 'lea', 'leb', 'lec', 'led', 'lee', 'lef', 'leg', 'leh', 'lei', 'lej', 'lek', 'lel', 'lem', 'len', 'leo', 'lep', 'leq', 'ler', 'les', 'let', 'leu', 'lev', 'lew', 'lex', 'ley', 'lez', 'lfa', 'lfn', 'lga', 'lgb', 'lgg', 'lgh', 'lgi', 'lgk', 'lgl', 'lgm', 'lgn', 'lgq', 'lgr', 'lgt', 'lgu', 'lgz', 'lha', 'lhh', 'lhi', 'lhl', 'lhm', 'lhn', 'lhp', 'lhs', 'lht', 'lhu', 'lia', 'lib', 'lic', 'lid', 'lie', 'lif', 'lig', 'lih', 'lii', 'lij', 'lik', 'lil', 'lio', 'lip', 'liq', 'lir', 'lis', 'liu', 'liv', 'liw', 'lix', 'liy', 'liz', 'lja', 'lje', 'lji', 'ljl', 'ljp', 'ljw', 'ljx', 'lka', 'lkb', 'lkc', 'lkd', 'lke', 'lkh', 'lki', 'lkj', 'lkl', 'lkm', 'lkn', 'lko', 'lkr', 'lks', 'lkt', 'lku', 'lky', 'lla', 'llb', 'llc', 'lld', 'lle', 'llf', 'llg', 'llh', 'lli', 'llj', 'llk', 'lll', 'llm', 'lln', 'llo', 'llp', 'llq', 'lls', 'llu', 'llx', 'lma', 'lmb', 'lmc', 'lmd', 'lme', 'lmf', 'lmg', 'lmh', 'lmi', 'lmj', 'lmk', 'lml', 'lmm', 'lmn', 'lmo', 'lmp', 'lmq', 'lmr', 'lmu', 'lmv', 'lmw', 'lmx', 'lmy', 'lmz', 'lna', 'lnb', 'lnd', 'lng', 'lnh', 'lni', 'lnj', 'lnl', 'lnm', 'lnn', 'lno', 'lns', 'lnu', 'lnw', 'lnz', 'loa', 'lob', 'loc', 'loe', 'lof', 'log', 'loh', 'loi', 'loj', 'lok', 'lol', 'lom', 'lon', 'loo', 'lop', 'loq', 'lor', 'los', 'lot', 'lou', 'lov', 'low', 'lox', 'loy', 'loz', 'lpa', 'lpe', 'lpn', 'lpo', 'lpx', 'lra', 'lrc', 'lre', 'lrg', 'lri', 'lrk', 'lrl', 'lrm', 'lrn', 'lro', 'lrr', 'lrt', 'lrv', 'lrz', 'lsa', 'lsd', 'lse', 'lsg', 'lsh', 'lsi', 'lsl', 'lsm', 'lso', 'lsp', 'lsr', 'lss', 'lst', 'lsy', 'ltc', 'ltg', 'lth', 'lti', 'ltn', 'lto', 'lts', 'ltu', 'lua', 'luc', 'lud', 'lue', 'luf', 'lui', 'luj', 'luk', 'lul', 'lum', 'lun', 'luo', 'lup', 'luq', 'lur', 'lus', 'lut', 'luu', 'luv', 'luw', 'luy', 'luz', 'lva', 'lvk', 'lvs', 'lvu', 'lwa', 'lwe', 'lwg', 'lwh', 'lwl', 'lwm', 'lwo', 'lwt', 'lwu', 'lww', 'lya', 'lyg', 'lyn', 'lzh', 'lzl', 'lzn', 'lzz', 'maa', 'mab', 'mad', 'mae', 'maf', 'mag', 'mai', 'maj', 'mak', 'mam', 'man', 'map', 'maq', 'mas', 'mat', 'mau', 'mav', 'maw', 'max', 'maz', 'mba', 'mbb', 'mbc', 'mbd', 'mbe', 'mbf', 'mbh', 'mbi', 'mbj', 'mbk', 'mbl', 'mbm', 'mbn', 'mbo', 'mbp', 'mbq', 'mbr', 'mbs', 'mbt', 'mbu', 'mbv', 'mbw', 'mbx', 'mby', 'mbz', 'mca', 'mcb', 'mcc', 'mcd', 'mce', 'mcf', 'mcg', 'mch', 'mci', 'mcj', 'mck', 'mcl', 'mcm', 'mcn', 'mco', 'mcp', 'mcq', 'mcr', 'mcs', 'mct', 'mcu', 'mcv', 'mcw', 'mcx', 'mcy', 'mcz', 'mda', 'mdb', 'mdc', 'mdd', 'mde', 'mdf', 'mdg', 'mdh', 'mdi', 'mdj', 'mdk', 'mdl', 'mdm', 'mdn', 'mdp', 'mdq', 'mdr', 'mds', 'mdt', 'mdu', 'mdv', 'mdw', 'mdx', 'mdy', 'mdz', 'mea', 'meb', 'mec', 'med', 'mee', 'mef', 'meg', 'meh', 'mei', 'mej', 'mek', 'mel', 'mem', 'men', 'meo', 'mep', 'meq', 'mer', 'mes', 'met', 'meu', 'mev', 'mew', 'mey', 'mez', 'mfa', 'mfb', 'mfc', 'mfd', 'mfe', 'mff', 'mfg', 'mfh', 'mfi', 'mfj', 'mfk', 'mfl', 'mfm', 'mfn', 'mfo', 'mfp', 'mfq', 'mfr', 'mfs', 'mft', 'mfu', 'mfv', 'mfw', 'mfx', 'mfy', 'mfz', 'mga', 'mgb', 'mgc', 'mgd', 'mge', 'mgf', 'mgg', 'mgh', 'mgi', 'mgj', 'mgk', 'mgl', 'mgm', 'mgn', 'mgo', 'mgp', 'mgq', 'mgr', 'mgs', 'mgt', 'mgu', 'mgv', 'mgw', 'mgx', 'mgy', 'mgz', 'mha', 'mhb', 'mhc', 'mhd', 'mhe', 'mhf', 'mhg', 'mhh', 'mhi', 'mhj', 'mhk', 'mhl', 'mhm', 'mhn', 'mho', 'mhp', 'mhq', 'mhr', 'mhs', 'mht', 'mhu', 'mhw', 'mhx', 'mhy', 'mhz', 'mia', 'mib', 'mic', 'mid', 'mie', 'mif', 'mig', 'mih', 'mii', 'mij', 'mik', 'mil', 'mim', 'min', 'mio', 'mip', 'miq', 'mir', 'mis', 'mit', 'miu', 'miw', 'mix', 'miy', 'miz', 'mja', 'mjb', 'mjc', 'mjd', 'mje', 'mjg', 'mjh', 'mji', 'mjj', 'mjk', 'mjl', 'mjm', 'mjn', 'mjo', 'mjp', 'mjq', 'mjr', 'mjs', 'mjt', 'mju', 'mjv', 'mjw', 'mjx', 'mjy', 'mjz', 'mka', 'mkb', 'mkc', 'mke', 'mkf', 'mkg', 'mkh', 'mki', 'mkj', 'mkk', 'mkl', 'mkm', 'mkn', 'mko', 'mkp', 'mkq', 'mkr', 'mks', 'mkt', 'mku', 'mkv', 'mkw', 'mkx', 'mky', 'mkz', 'mla', 'mlb', 'mlc', 'mld', 'mle', 'mlf', 'mlh', 'mli', 'mlj', 'mlk', 'mll', 'mlm', 'mln', 'mlo', 'mlp', 'mlq', 'mlr', 'mls', 'mlu', 'mlv', 'mlw', 'mlx', 'mlz', 'mma', 'mmb', 'mmc', 'mmd', 'mme', 'mmf', 'mmg', 'mmh', 'mmi', 'mmj', 'mmk', 'mml', 'mmm', 'mmn', 'mmo', 'mmp', 'mmq', 'mmr', 'mmt', 'mmu', 'mmv', 'mmw', 'mmx', 'mmy', 'mmz', 'mna', 'mnb', 'mnc', 'mnd', 'mne', 'mnf', 'mng', 'mnh', 'mni', 'mnj', 'mnk', 'mnl', 'mnm', 'mnn', 'mno', 'mnp', 'mnq', 'mnr', 'mns', 'mnt', 'mnu', 'mnv', 'mnw', 'mnx', 'mny', 'mnz', 'moa', 'moc', 'mod', 'moe', 'mof', 'mog', 'moh', 'moi', 'moj', 'mok', 'mom', 'moo', 'mop', 'moq', 'mor', 'mos', 'mot', 'mou', 'mov', 'mow', 'mox', 'moy', 'moz', 'mpa', 'mpb', 'mpc', 'mpd', 'mpe', 'mpg', 'mph', 'mpi', 'mpj', 'mpk', 'mpl', 'mpm', 'mpn', 'mpo', 'mpp', 'mpq', 'mpr', 'mps', 'mpt', 'mpu', 'mpv', 'mpw', 'mpx', 'mpy', 'mpz', 'mqa', 'mqb', 'mqc', 'mqe', 'mqf', 'mqg', 'mqh', 'mqi', 'mqj', 'mqk', 'mql', 'mqm', 'mqn', 'mqo', 'mqp', 'mqq', 'mqr', 'mqs', 'mqt', 'mqu', 'mqv', 'mqw', 'mqx', 'mqy', 'mqz', 'mra', 'mrb', 'mrc', 'mrd', 'mre', 'mrf', 'mrg', 'mrh', 'mrj', 'mrk', 'mrl', 'mrm', 'mrn', 'mro', 'mrp', 'mrq', 'mrr', 'mrs', 'mrt', 'mru', 'mrv', 'mrw', 'mrx', 'mry', 'mrz', 'msb', 'msc', 'msd', 'mse', 'msf', 'msg', 'msh', 'msi', 'msj', 'msk', 'msl', 'msm', 'msn', 'mso', 'msp', 'msq', 'msr', 'mss', 'mst', 'msu', 'msv', 'msw', 'msx', 'msy', 'msz', 'mta', 'mtb', 'mtc', 'mtd', 'mte', 'mtf', 'mtg', 'mth', 'mti', 'mtj', 'mtk', 'mtl', 'mtm', 'mtn', 'mto', 'mtp', 'mtq', 'mtr', 'mts', 'mtt', 'mtu', 'mtv', 'mtw', 'mtx', 'mty', 'mua', 'mub', 'muc', 'mud', 'mue', 'mug', 'muh', 'mui', 'muj', 'muk', 'mul', 'mum', 'mun', 'muo', 'mup', 'muq', 'mur', 'mus', 'mut', 'muu', 'muv', 'mux', 'muy', 'muz', 'mva', 'mvb', 'mvd', 'mve', 'mvf', 'mvg', 'mvh', 'mvi', 'mvk', 'mvl', 'mvm', 'mvn', 'mvo', 'mvp', 'mvq', 'mvr', 'mvs', 'mvt', 'mvu', 'mvv', 'mvw', 'mvx', 'mvy', 'mvz', 'mwa', 'mwb', 'mwc', 'mwd', 'mwe', 'mwf', 'mwg', 'mwh', 'mwi', 'mwj', 'mwk', 'mwl', 'mwm', 'mwn', 'mwo', 'mwp', 'mwq', 'mwr', 'mws', 'mwt', 'mwu', 'mwv', 'mww', 'mwx', 'mwy', 'mwz', 'mxa', 'mxb', 'mxc', 'mxd', 'mxe', 'mxf', 'mxg', 'mxh', 'mxi', 'mxj', 'mxk', 'mxl', 'mxm', 'mxn', 'mxo', 'mxp', 'mxq', 'mxr', 'mxs', 'mxt', 'mxu', 'mxv', 'mxw', 'mxx', 'mxy', 'mxz', 'myb', 'myc', 'myd', 'mye', 'myf', 'myg', 'myh', 'myi', 'myj', 'myk', 'myl', 'mym', 'myn', 'myo', 'myp', 'myq', 'myr', 'mys', 'myt', 'myu', 'myv', 'myw', 'myx', 'myy', 'myz', 'mza', 'mzb', 'mzc', 'mzd', 'mze', 'mzg', 'mzh', 'mzi', 'mzj', 'mzk', 'mzl', 'mzm', 'mzn', 'mzo', 'mzp', 'mzq', 'mzr', 'mzs', 'mzt', 'mzu', 'mzv', 'mzw', 'mzx', 'mzy', 'mzz', 'naa', 'nab', 'nac', 'nad', 'nae', 'naf', 'nag', 'nah', 'nai', 'naj', 'nak', 'nal', 'nam', 'nan', 'nao', 'nap', 'naq', 'nar', 'nas', 'nat', 'naw', 'nax', 'nay', 'naz', 'nba', 'nbb', 'nbc', 'nbd', 'nbe', 'nbf', 'nbg', 'nbh', 'nbi', 'nbj', 'nbk', 'nbm', 'nbn', 'nbo', 'nbp', 'nbq', 'nbr', 'nbs', 'nbt', 'nbu', 'nbv', 'nbw', 'nbx', 'nby', 'nca', 'ncb', 'ncc', 'ncd', 'nce', 'ncf', 'ncg', 'nch', 'nci', 'ncj', 'nck', 'ncl', 'ncm', 'ncn', 'nco', 'ncp', 'ncq', 'ncr', 'ncs', 'nct', 'ncu', 'ncx', 'ncz', 'nda', 'ndb', 'ndc', 'ndd', 'ndf', 'ndg', 'ndh', 'ndi', 'ndj', 'ndk', 'ndl', 'ndm', 'ndn', 'ndp', 'ndq', 'ndr', 'nds', 'ndt', 'ndu', 'ndv', 'ndw', 'ndx', 'ndy', 'ndz', 'nea', 'neb', 'nec', 'ned', 'nee', 'nef', 'neg', 'neh', 'nei', 'nej', 'nek', 'nem', 'nen', 'neo', 'neq', 'ner', 'nes', 'net', 'neu', 'nev', 'new', 'nex', 'ney', 'nez', 'nfa', 'nfd', 'nfl', 'nfr', 'nfu', 'nga', 'ngb', 'ngc', 'ngd', 'nge', 'ngf', 'ngg', 'ngh', 'ngi', 'ngj', 'ngk', 'ngl', 'ngm', 'ngn', 'ngo', 'ngp', 'ngq', 'ngr', 'ngs', 'ngt', 'ngu', 'ngv', 'ngw', 'ngx', 'ngy', 'ngz', 'nha', 'nhb', 'nhc', 'nhd', 'nhe', 'nhf', 'nhg', 'nhh', 'nhi', 'nhk', 'nhm', 'nhn', 'nho', 'nhp', 'nhq', 'nhr', 'nht', 'nhu', 'nhv', 'nhw', 'nhx', 'nhy', 'nhz', 'nia', 'nib', 'nic', 'nid', 'nie', 'nif', 'nig', 'nih', 'nii', 'nij', 'nik', 'nil', 'nim', 'nin', 'nio', 'niq', 'nir', 'nis', 'nit', 'niu', 'niv', 'niw', 'nix', 'niy', 'niz', 'nja', 'njb', 'njd', 'njh', 'nji', 'njj', 'njl', 'njm', 'njn', 'njo', 'njr', 'njs', 'njt', 'nju', 'njx', 'njy', 'njz', 'nka', 'nkb', 'nkc', 'nkd', 'nke', 'nkf', 'nkg', 'nkh', 'nki', 'nkj', 'nkk', 'nkm', 'nkn', 'nko', 'nkp', 'nkq', 'nkr', 'nks', 'nkt', 'nku', 'nkv', 'nkw', 'nkx', 'nkz', 'nla', 'nlc', 'nle', 'nlg', 'nli', 'nlj', 'nlk', 'nll', 'nln', 'nlo', 'nlq', 'nlr', 'nlu', 'nlv', 'nlw', 'nlx', 'nly', 'nlz', 'nma', 'nmb', 'nmc', 'nmd', 'nme', 'nmf', 'nmg', 'nmh', 'nmi', 'nmj', 'nmk', 'nml', 'nmm', 'nmn', 'nmo', 'nmp', 'nmq', 'nmr', 'nms', 'nmt', 'nmu', 'nmv', 'nmw', 'nmx', 'nmy', 'nmz', 'nna', 'nnb', 'nnc', 'nnd', 'nne', 'nnf', 'nng', 'nnh', 'nni', 'nnj', 'nnk', 'nnl', 'nnm', 'nnn', 'nnp', 'nnq', 'nnr', 'nns', 'nnt', 'nnu', 'nnv', 'nnw', 'nnx', 'nny', 'nnz', 'noa', 'noc', 'nod', 'noe', 'nof', 'nog', 'noh', 'noi', 'noj', 'nok', 'nol', 'nom', 'non', 'noo', 'nop', 'noq', 'nos', 'not', 'nou', 'nov', 'now', 'noy', 'noz', 'npa', 'npb', 'npg', 'nph', 'npi', 'npl', 'npn', 'npo', 'nps', 'npu', 'npx', 'npy', 'nqg', 'nqk', 'nql', 'nqm', 'nqn', 'nqo', 'nqq', 'nqy', 'nra', 'nrb', 'nrc', 'nre', 'nrf', 'nrg', 'nri', 'nrk', 'nrl', 'nrm', 'nrn', 'nrp', 'nrr', 'nrt', 'nru', 'nrx', 'nrz', 'nsa', 'nsc', 'nsd', 'nse', 'nsf', 'nsg', 'nsh', 'nsi', 'nsk', 'nsl', 'nsm', 'nsn', 'nso', 'nsp', 'nsq', 'nsr', 'nss', 'nst', 'nsu', 'nsv', 'nsw', 'nsx', 'nsy', 'nsz', 'ntd', 'nte', 'ntg', 'nti', 'ntj', 'ntk', 'ntm', 'nto', 'ntp', 'ntr', 'nts', 'ntu', 'ntw', 'ntx', 'nty', 'ntz', 'nua', 'nub', 'nuc', 'nud', 'nue', 'nuf', 'nug', 'nuh', 'nui', 'nuj', 'nuk', 'nul', 'num', 'nun', 'nuo', 'nup', 'nuq', 'nur', 'nus', 'nut', 'nuu', 'nuv', 'nuw', 'nux', 'nuy', 'nuz', 'nvh', 'nvm', 'nvo', 'nwa', 'nwb', 'nwc', 'nwe', 'nwg', 'nwi', 'nwm', 'nwo', 'nwr', 'nwx', 'nwy', 'nxa', 'nxd', 'nxe', 'nxg', 'nxi', 'nxk', 'nxl', 'nxm', 'nxn', 'nxo', 'nxq', 'nxr', 'nxu', 'nxx', 'nyb', 'nyc', 'nyd', 'nye', 'nyf', 'nyg', 'nyh', 'nyi', 'nyj', 'nyk', 'nyl', 'nym', 'nyn', 'nyo', 'nyp', 'nyq', 'nyr', 'nys', 'nyt', 'nyu', 'nyv', 'nyw', 'nyx', 'nyy', 'nza', 'nzb', 'nzi', 'nzk', 'nzm', 'nzs', 'nzu', 'nzy', 'nzz', 'oaa', 'oac', 'oar', 'oav', 'obi', 'obk', 'obl', 'obm', 'obo', 'obr', 'obt', 'obu', 'oca', 'och', 'oco', 'ocu', 'oda', 'odk', 'odt', 'odu', 'ofo', 'ofs', 'ofu', 'ogb', 'ogc', 'oge', 'ogg', 'ogo', 'ogu', 'oht', 'ohu', 'oia', 'oin', 'ojb', 'ojc', 'ojg', 'ojp', 'ojs', 'ojv', 'ojw', 'oka', 'okb', 'okd', 'oke', 'okg', 'okh', 'oki', 'okj', 'okk', 'okl', 'okm', 'okn', 'oko', 'okr', 'oks', 'oku', 'okv', 'okx', 'ola', 'old', 'ole', 'olk', 'olm', 'olo', 'olr', 'olt', 'olu', 'oma', 'omb', 'omc', 'ome', 'omg', 'omi', 'omk', 'oml', 'omn', 'omo', 'omp', 'omq', 'omr', 'omt', 'omu', 'omv', 'omw', 'omx', 'ona', 'onb', 'one', 'ong', 'oni', 'onj', 'onk', 'onn', 'ono', 'onp', 'onr', 'ons', 'ont', 'onu', 'onw', 'onx', 'ood', 'oog', 'oon', 'oor', 'oos', 'opa', 'opk', 'opm', 'opo', 'opt', 'opy', 'ora', 'orc', 'ore', 'org', 'orh', 'orn', 'oro', 'orr', 'ors', 'ort', 'oru', 'orv', 'orw', 'orx', 'ory', 'orz', 'osa', 'osc', 'osi', 'oso', 'osp', 'ost', 'osu', 'osx', 'ota', 'otb', 'otd', 'ote', 'oti', 'otk', 'otl', 'otm', 'otn', 'oto', 'otq', 'otr', 'ots', 'ott', 'otu', 'otw', 'otx', 'oty', 'otz', 'oua', 'oub', 'oue', 'oui', 'oum', 'oun', 'ovd', 'owi', 'owl', 'oyb', 'oyd', 'oym', 'oyy', 'ozm', 'paa', 'pab', 'pac', 'pad', 'pae', 'paf', 'pag', 'pah', 'pai', 'pak', 'pal', 'pam', 'pao', 'pap', 'paq', 'par', 'pas', 'pat', 'pau', 'pav', 'paw', 'pax', 'pay', 'paz', 'pbb', 'pbc', 'pbe', 'pbf', 'pbg', 'pbh', 'pbi', 'pbl', 'pbn', 'pbo', 'pbp', 'pbr', 'pbs', 'pbt', 'pbu', 'pbv', 'pby', 'pbz', 'pca', 'pcb', 'pcc', 'pcd', 'pce', 'pcf', 'pcg', 'pch', 'pci', 'pcj', 'pck', 'pcl', 'pcm', 'pcn', 'pcp', 'pcr', 'pcw', 'pda', 'pdc', 'pdi', 'pdn', 'pdo', 'pdt', 'pdu', 'pea', 'peb', 'ped', 'pee', 'pef', 'peg', 'peh', 'pei', 'pej', 'pek', 'pel', 'pem', 'peo', 'pep', 'peq', 'pes', 'pev', 'pex', 'pey', 'pez', 'pfa', 'pfe', 'pfl', 'pga', 'pgd', 'pgg', 'pgi', 'pgk', 'pgl', 'pgn', 'pgs', 'pgu', 'pgy', 'pgz', 'pha', 'phd', 'phg', 'phh', 'phi', 'phk', 'phl', 'phm', 'phn', 'pho', 'phq', 'phr', 'pht', 'phu', 'phv', 'phw', 'pia', 'pib', 'pic', 'pid', 'pie', 'pif', 'pig', 'pih', 'pii', 'pij', 'pil', 'pim', 'pin', 'pio', 'pip', 'pir', 'pis', 'pit', 'piu', 'piv', 'piw', 'pix', 'piy', 'piz', 'pjt', 'pka', 'pkb', 'pkc', 'pkg', 'pkh', 'pkn', 'pko', 'pkp', 'pkr', 'pks', 'pkt', 'pku', 'pla', 'plb', 'plc', 'pld', 'ple', 'plf', 'plg', 'plh', 'plj', 'plk', 'pll', 'pln', 'plo', 'plp', 'plq', 'plr', 'pls', 'plt', 'plu', 'plv', 'plw', 'ply', 'plz', 'pma', 'pmb', 'pmc', 'pmd', 'pme', 'pmf', 'pmh', 'pmi', 'pmj', 'pmk', 'pml', 'pmm', 'pmn', 'pmo', 'pmq', 'pmr', 'pms', 'pmt', 'pmu', 'pmw', 'pmx', 'pmy', 'pmz', 'pna', 'pnb', 'pnc', 'pne', 'png', 'pnh', 'pni', 'pnj', 'pnk', 'pnl', 'pnm', 'pnn', 'pno', 'pnp', 'pnq', 'pnr', 'pns', 'pnt', 'pnu', 'pnv', 'pnw', 'pnx', 'pny', 'pnz', 'poc', 'pod', 'poe', 'pof', 'pog', 'poh', 'poi', 'pok', 'pom', 'pon', 'poo', 'pop', 'poq', 'pos', 'pot', 'pov', 'pow', 'pox', 'poy', 'poz', 'ppa', 'ppe', 'ppi', 'ppk', 'ppl', 'ppm', 'ppn', 'ppo', 'ppp', 'ppq', 'ppr', 'pps', 'ppt', 'ppu', 'pqa', 'pqe', 'pqm', 'pqw', 'pra', 'prb', 'prc', 'prd', 'pre', 'prf', 'prg', 'prh', 'pri', 'prk', 'prl', 'prm', 'prn', 'pro', 'prp', 'prq', 'prr', 'prs', 'prt', 'pru', 'prw', 'prx', 'pry', 'prz', 'psa', 'psc', 'psd', 'pse', 'psg', 'psh', 'psi', 'psl', 'psm', 'psn', 'pso', 'psp', 'psq', 'psr', 'pss', 'pst', 'psu', 'psw', 'psy', 'pta', 'pth', 'pti', 'ptn', 'pto', 'ptp', 'ptq', 'ptr', 'ptt', 'ptu', 'ptv', 'ptw', 'pty', 'pua', 'pub', 'puc', 'pud', 'pue', 'puf', 'pug', 'pui', 'puj', 'puk', 'pum', 'puo', 'pup', 'puq', 'pur', 'put', 'puu', 'puw', 'pux', 'puy', 'puz', 'pwa', 'pwb', 'pwg', 'pwi', 'pwm', 'pwn', 'pwo', 'pwr', 'pww', 'pxm', 'pye', 'pym', 'pyn', 'pys', 'pyu', 'pyx', 'pyy', 'pzn', 'qaa..qtz', 'qua', 'qub', 'quc', 'qud', 'quf', 'qug', 'quh', 'qui', 'quk', 'qul', 'qum', 'qun', 'qup', 'quq', 'qur', 'qus', 'quv', 'quw', 'qux', 'quy', 'quz', 'qva', 'qvc', 'qve', 'qvh', 'qvi', 'qvj', 'qvl', 'qvm', 'qvn', 'qvo', 'qvp', 'qvs', 'qvw', 'qvy', 'qvz', 'qwa', 'qwc', 'qwe', 'qwh', 'qwm', 'qws', 'qwt', 'qxa', 'qxc', 'qxh', 'qxl', 'qxn', 'qxo', 'qxp', 'qxq', 'qxr', 'qxs', 'qxt', 'qxu', 'qxw', 'qya', 'qyp', 'raa', 'rab', 'rac', 'rad', 'raf', 'rag', 'rah', 'rai', 'raj', 'rak', 'ral', 'ram', 'ran', 'rao', 'rap', 'raq', 'rar', 'ras', 'rat', 'rau', 'rav', 'raw', 'rax', 'ray', 'raz', 'rbb', 'rbk', 'rbl', 'rbp', 'rcf', 'rdb', 'rea', 'reb', 'ree', 'reg', 'rei', 'rej', 'rel', 'rem', 'ren', 'rer', 'res', 'ret', 'rey', 'rga', 'rge', 'rgk', 'rgn', 'rgr', 'rgs', 'rgu', 'rhg', 'rhp', 'ria', 'rie', 'rif', 'ril', 'rim', 'rin', 'rir', 'rit', 'riu', 'rjg', 'rji', 'rjs', 'rka', 'rkb', 'rkh', 'rki', 'rkm', 'rkt', 'rkw', 'rma', 'rmb', 'rmc', 'rmd', 'rme', 'rmf', 'rmg', 'rmh', 'rmi', 'rmk', 'rml', 'rmm', 'rmn', 'rmo', 'rmp', 'rmq', 'rmr', 'rms', 'rmt', 'rmu', 'rmv', 'rmw', 'rmx', 'rmy', 'rmz', 'rna', 'rnd', 'rng', 'rnl', 'rnn', 'rnp', 'rnr', 'rnw', 'roa', 'rob', 'roc', 'rod', 'roe', 'rof', 'rog', 'rol', 'rom', 'roo', 'rop', 'ror', 'rou', 'row', 'rpn', 'rpt', 'rri', 'rro', 'rrt', 'rsb', 'rsi', 'rsl', 'rsm', 'rtc', 'rth', 'rtm', 'rts', 'rtw', 'rub', 'ruc', 'rue', 'ruf', 'rug', 'ruh', 'rui', 'ruk', 'ruo', 'rup', 'ruq', 'rut', 'ruu', 'ruy', 'ruz', 'rwa', 'rwk', 'rwm', 'rwo', 'rwr', 'rxd', 'rxw', 'ryn', 'rys', 'ryu', 'rzh', 'saa', 'sab', 'sac', 'sad', 'sae', 'saf', 'sah', 'sai', 'saj', 'sak', 'sal', 'sam', 'sao', 'sap', 'saq', 'sar', 'sas', 'sat', 'sau', 'sav', 'saw', 'sax', 'say', 'saz', 'sba', 'sbb', 'sbc', 'sbd', 'sbe', 'sbf', 'sbg', 'sbh', 'sbi', 'sbj', 'sbk', 'sbl', 'sbm', 'sbn', 'sbo', 'sbp', 'sbq', 'sbr', 'sbs', 'sbt', 'sbu', 'sbv', 'sbw', 'sbx', 'sby', 'sbz', 'sca', 'scb', 'sce', 'scf', 'scg', 'sch', 'sci', 'sck', 'scl', 'scn', 'sco', 'scp', 'scq', 'scs', 'sct', 'scu', 'scv', 'scw', 'scx', 'sda', 'sdb', 'sdc', 'sde', 'sdf', 'sdg', 'sdh', 'sdj', 'sdk', 'sdl', 'sdm', 'sdn', 'sdo', 'sdp', 'sdr', 'sds', 'sdt', 'sdu', 'sdv', 'sdx', 'sdz', 'sea', 'seb', 'sec', 'sed', 'see', 'sef', 'seg', 'seh', 'sei', 'sej', 'sek', 'sel', 'sem', 'sen', 'seo', 'sep', 'seq', 'ser', 'ses', 'set', 'seu', 'sev', 'sew', 'sey', 'sez', 'sfb', 'sfe', 'sfm', 'sfs', 'sfw', 'sga', 'sgb', 'sgc', 'sgd', 'sge', 'sgg', 'sgh', 'sgi', 'sgj', 'sgk', 'sgl', 'sgm', 'sgn', 'sgo', 'sgp', 'sgr', 'sgs', 'sgt', 'sgu', 'sgw', 'sgx', 'sgy', 'sgz', 'sha', 'shb', 'shc', 'shd', 'she', 'shg', 'shh', 'shi', 'shj', 'shk', 'shl', 'shm', 'shn', 'sho', 'shp', 'shq', 'shr', 'shs', 'sht', 'shu', 'shv', 'shw', 'shx', 'shy', 'shz', 'sia', 'sib', 'sid', 'sie', 'sif', 'sig', 'sih', 'sii', 'sij', 'sik', 'sil', 'sim', 'sio', 'sip', 'siq', 'sir', 'sis', 'sit', 'siu', 'siv', 'siw', 'six', 'siy', 'siz', 'sja', 'sjb', 'sjd', 'sje', 'sjg', 'sjk', 'sjl', 'sjm', 'sjn', 'sjo', 'sjp', 'sjr', 'sjs', 'sjt', 'sju', 'sjw', 'ska', 'skb', 'skc', 'skd', 'ske', 'skf', 'skg', 'skh', 'ski', 'skj', 'skk', 'skm', 'skn', 'sko', 'skp', 'skq', 'skr', 'sks', 'skt', 'sku', 'skv', 'skw', 'skx', 'sky', 'skz', 'sla', 'slc', 'sld', 'sle', 'slf', 'slg', 'slh', 'sli', 'slj', 'sll', 'slm', 'sln', 'slp', 'slq', 'slr', 'sls', 'slt', 'slu', 'slw', 'slx', 'sly', 'slz', 'sma', 'smb', 'smc', 'smd', 'smf', 'smg', 'smh', 'smi', 'smj', 'smk', 'sml', 'smm', 'smn', 'smp', 'smq', 'smr', 'sms', 'smt', 'smu', 'smv', 'smw', 'smx', 'smy', 'smz', 'snb', 'snc', 'sne', 'snf', 'sng', 'snh', 'sni', 'snj', 'snk', 'snl', 'snm', 'snn', 'sno', 'snp', 'snq', 'snr', 'sns', 'snu', 'snv', 'snw', 'snx', 'sny', 'snz', 'soa', 'sob', 'soc', 'sod', 'soe', 'sog', 'soh', 'soi', 'soj', 'sok', 'sol', 'son', 'soo', 'sop', 'soq', 'sor', 'sos', 'sou', 'sov', 'sow', 'sox', 'soy', 'soz', 'spb', 'spc', 'spd', 'spe', 'spg', 'spi', 'spk', 'spl', 'spm', 'spn', 'spo', 'spp', 'spq', 'spr', 'sps', 'spt', 'spu', 'spv', 'spx', 'spy', 'sqa', 'sqh', 'sqj', 'sqk', 'sqm', 'sqn', 'sqo', 'sqq', 'sqr', 'sqs', 'sqt', 'squ', 'sra', 'srb', 'src', 'sre', 'srf', 'srg', 'srh', 'sri', 'srk', 'srl', 'srm', 'srn', 'sro', 'srq', 'srr', 'srs', 'srt', 'sru', 'srv', 'srw', 'srx', 'sry', 'srz', 'ssa', 'ssb', 'ssc', 'ssd', 'sse', 'ssf', 'ssg', 'ssh', 'ssi', 'ssj', 'ssk', 'ssl', 'ssm', 'ssn', 'sso', 'ssp', 'ssq', 'ssr', 'sss', 'sst', 'ssu', 'ssv', 'ssx', 'ssy', 'ssz', 'sta', 'stb', 'std', 'ste', 'stf', 'stg', 'sth', 'sti', 'stj', 'stk', 'stl', 'stm', 'stn', 'sto', 'stp', 'stq', 'str', 'sts', 'stt', 'stu', 'stv', 'stw', 'sty', 'sua', 'sub', 'suc', 'sue', 'sug', 'sui', 'suj', 'suk', 'sul', 'sum', 'suq', 'sur', 'sus', 'sut', 'suv', 'suw', 'sux', 'suy', 'suz', 'sva', 'svb', 'svc', 'sve', 'svk', 'svm', 'svr', 'svs', 'svx', 'swb', 'swc', 'swf', 'swg', 'swh', 'swi', 'swj', 'swk', 'swl', 'swm', 'swn', 'swo', 'swp', 'swq', 'swr', 'sws', 'swt', 'swu', 'swv', 'sww', 'swx', 'swy', 'sxb', 'sxc', 'sxe', 'sxg', 'sxk', 'sxl', 'sxm', 'sxn', 'sxo', 'sxr', 'sxs', 'sxu', 'sxw', 'sya', 'syb', 'syc', 'syd', 'syi', 'syk', 'syl', 'sym', 'syn', 'syo', 'syr', 'sys', 'syw', 'syx', 'syy', 'sza', 'szb', 'szc', 'szd', 'sze', 'szg', 'szl', 'szn', 'szp', 'szs', 'szv', 'szw', 'taa', 'tab', 'tac', 'tad', 'tae', 'taf', 'tag', 'tai', 'taj', 'tak', 'tal', 'tan', 'tao', 'tap', 'taq', 'tar', 'tas', 'tau', 'tav', 'taw', 'tax', 'tay', 'taz', 'tba', 'tbb', 'tbc', 'tbd', 'tbe', 'tbf', 'tbg', 'tbh', 'tbi', 'tbj', 'tbk', 'tbl', 'tbm', 'tbn', 'tbo', 'tbp', 'tbq', 'tbr', 'tbs', 'tbt', 'tbu', 'tbv', 'tbw', 'tbx', 'tby', 'tbz', 'tca', 'tcb', 'tcc', 'tcd', 'tce', 'tcf', 'tcg', 'tch', 'tci', 'tck', 'tcl', 'tcm', 'tcn', 'tco', 'tcp', 'tcq', 'tcs', 'tct', 'tcu', 'tcw', 'tcx', 'tcy', 'tcz', 'tda', 'tdb', 'tdc', 'tdd', 'tde', 'tdf', 'tdg', 'tdh', 'tdi', 'tdj', 'tdk', 'tdl', 'tdm', 'tdn', 'tdo', 'tdq', 'tdr', 'tds', 'tdt', 'tdu', 'tdv', 'tdx', 'tdy', 'tea', 'teb', 'tec', 'ted', 'tee', 'tef', 'teg', 'teh', 'tei', 'tek', 'tem', 'ten', 'teo', 'tep', 'teq', 'ter', 'tes', 'tet', 'teu', 'tev', 'tew', 'tex', 'tey', 'tfi', 'tfn', 'tfo', 'tfr', 'tft', 'tga', 'tgb', 'tgc', 'tgd', 'tge', 'tgf', 'tgg', 'tgh', 'tgi', 'tgj', 'tgn', 'tgo', 'tgp', 'tgq', 'tgr', 'tgs', 'tgt', 'tgu', 'tgv', 'tgw', 'tgx', 'tgy', 'tgz', 'thc', 'thd', 'the', 'thf', 'thh', 'thi', 'thk', 'thl', 'thm', 'thn', 'thp', 'thq', 'thr', 'ths', 'tht', 'thu', 'thv', 'thw', 'thx', 'thy', 'thz', 'tia', 'tic', 'tid', 'tie', 'tif', 'tig', 'tih', 'tii', 'tij', 'tik', 'til', 'tim', 'tin', 'tio', 'tip', 'tiq', 'tis', 'tit', 'tiu', 'tiv', 'tiw', 'tix', 'tiy', 'tiz', 'tja', 'tjg', 'tji', 'tjl', 'tjm', 'tjn', 'tjo', 'tjs', 'tju', 'tjw', 'tka', 'tkb', 'tkd', 'tke', 'tkf', 'tkg', 'tkk', 'tkl', 'tkm', 'tkn', 'tkp', 'tkq', 'tkr', 'tks', 'tkt', 'tku', 'tkv', 'tkw', 'tkx', 'tkz', 'tla', 'tlb', 'tlc', 'tld', 'tlf', 'tlg', 'tlh', 'tli', 'tlj', 'tlk', 'tll', 'tlm', 'tln', 'tlo', 'tlp', 'tlq', 'tlr', 'tls', 'tlt', 'tlu', 'tlv', 'tlw', 'tlx', 'tly', 'tma', 'tmb', 'tmc', 'tmd', 'tme', 'tmf', 'tmg', 'tmh', 'tmi', 'tmj', 'tmk', 'tml', 'tmm', 'tmn', 'tmo', 'tmp', 'tmq', 'tmr', 'tms', 'tmt', 'tmu', 'tmv', 'tmw', 'tmy', 'tmz', 'tna', 'tnb', 'tnc', 'tnd', 'tne', 'tnf', 'tng', 'tnh', 'tni', 'tnk', 'tnl', 'tnm', 'tnn', 'tno', 'tnp', 'tnq', 'tnr', 'tns', 'tnt', 'tnu', 'tnv', 'tnw', 'tnx', 'tny', 'tnz', 'tob', 'toc', 'tod', 'toe', 'tof', 'tog', 'toh', 'toi', 'toj', 'tol', 'tom', 'too', 'top', 'toq', 'tor', 'tos', 'tou', 'tov', 'tow', 'tox', 'toy', 'toz', 'tpa', 'tpc', 'tpe', 'tpf', 'tpg', 'tpi', 'tpj', 'tpk', 'tpl', 'tpm', 'tpn', 'tpo', 'tpp', 'tpq', 'tpr', 'tpt', 'tpu', 'tpv', 'tpw', 'tpx', 'tpy', 'tpz', 'tqb', 'tql', 'tqm', 'tqn', 'tqo', 'tqp', 'tqq', 'tqr', 'tqt', 'tqu', 'tqw', 'tra', 'trb', 'trc', 'trd', 'tre', 'trf', 'trg', 'trh', 'tri', 'trj', 'trk', 'trl', 'trm', 'trn', 'tro', 'trp', 'trq', 'trr', 'trs', 'trt', 'tru', 'trv', 'trw', 'trx', 'try', 'trz', 'tsa', 'tsb', 'tsc', 'tsd', 'tse', 'tsf', 'tsg', 'tsh', 'tsi', 'tsj', 'tsk', 'tsl', 'tsm', 'tsp', 'tsq', 'tsr', 'tss', 'tst', 'tsu', 'tsv', 'tsw', 'tsx', 'tsy', 'tsz', 'tta', 'ttb', 'ttc', 'ttd', 'tte', 'ttf', 'ttg', 'tth', 'tti', 'ttj', 'ttk', 'ttl', 'ttm', 'ttn', 'tto', 'ttp', 'ttq', 'ttr', 'tts', 'ttt', 'ttu', 'ttv', 'ttw', 'tty', 'ttz', 'tua', 'tub', 'tuc', 'tud', 'tue', 'tuf', 'tug', 'tuh', 'tui', 'tuj', 'tul', 'tum', 'tun', 'tuo', 'tup', 'tuq', 'tus', 'tut', 'tuu', 'tuv', 'tuw', 'tux', 'tuy', 'tuz', 'tva', 'tvd', 'tve', 'tvk', 'tvl', 'tvm', 'tvn', 'tvo', 'tvs', 'tvt', 'tvu', 'tvw', 'tvy', 'twa', 'twb', 'twc', 'twd', 'twe', 'twf', 'twg', 'twh', 'twl', 'twm', 'twn', 'two', 'twp', 'twq', 'twr', 'twt', 'twu', 'tww', 'twx', 'twy', 'txa', 'txb', 'txc', 'txe', 'txg', 'txh', 'txi', 'txj', 'txm', 'txn', 'txo', 'txq', 'txr', 'txs', 'txt', 'txu', 'txx', 'txy', 'tya', 'tye', 'tyh', 'tyi', 'tyj', 'tyl', 'tyn', 'typ', 'tyr', 'tys', 'tyt', 'tyu', 'tyv', 'tyx', 'tyz', 'tza', 'tzh', 'tzj', 'tzl', 'tzm', 'tzn', 'tzo', 'tzx', 'uam', 'uan', 'uar', 'uba', 'ubi', 'ubl', 'ubr', 'ubu', 'uby', 'uda', 'ude', 'udg', 'udi', 'udj', 'udl', 'udm', 'udu', 'ues', 'ufi', 'uga', 'ugb', 'uge', 'ugn', 'ugo', 'ugy', 'uha', 'uhn', 'uis', 'uiv', 'uji', 'uka', 'ukg', 'ukh', 'ukk', 'ukl', 'ukp', 'ukq', 'uks', 'uku', 'ukw', 'uky', 'ula', 'ulb', 'ulc', 'ule', 'ulf', 'uli', 'ulk', 'ull', 'ulm', 'uln', 'ulu', 'ulw', 'uma', 'umb', 'umc', 'umd', 'umg', 'umi', 'umm', 'umn', 'umo', 'ump', 'umr', 'ums', 'umu', 'una', 'und', 'une', 'ung', 'unk', 'unm', 'unn', 'unp', 'unr', 'unu', 'unx', 'unz', 'uok', 'upi', 'upv', 'ura', 'urb', 'urc', 'ure', 'urf', 'urg', 'urh', 'uri', 'urj', 'urk', 'url', 'urm', 'urn', 'uro', 'urp', 'urr', 'urt', 'uru', 'urv', 'urw', 'urx', 'ury', 'urz', 'usa', 'ush', 'usi', 'usk', 'usp', 'usu', 'uta', 'ute', 'utp', 'utr', 'utu', 'uum', 'uun', 'uur', 'uuu', 'uve', 'uvh', 'uvl', 'uwa', 'uya', 'uzn', 'uzs', 'vaa', 'vae', 'vaf', 'vag', 'vah', 'vai', 'vaj', 'val', 'vam', 'van', 'vao', 'vap', 'var', 'vas', 'vau', 'vav', 'vay', 'vbb', 'vbk', 'vec', 'ved', 'vel', 'vem', 'veo', 'vep', 'ver', 'vgr', 'vgt', 'vic', 'vid', 'vif', 'vig', 'vil', 'vin', 'vis', 'vit', 'viv', 'vka', 'vki', 'vkj', 'vkk', 'vkl', 'vkm', 'vko', 'vkp', 'vkt', 'vku', 'vlp', 'vls', 'vma', 'vmb', 'vmc', 'vmd', 'vme', 'vmf', 'vmg', 'vmh', 'vmi', 'vmj', 'vmk', 'vml', 'vmm', 'vmp', 'vmq', 'vmr', 'vms', 'vmu', 'vmv', 'vmw', 'vmx', 'vmy', 'vmz', 'vnk', 'vnm', 'vnp', 'vor', 'vot', 'vra', 'vro', 'vrs', 'vrt', 'vsi', 'vsl', 'vsv', 'vto', 'vum', 'vun', 'vut', 'vwa', 'waa', 'wab', 'wac', 'wad', 'wae', 'waf', 'wag', 'wah', 'wai', 'waj', 'wak', 'wal', 'wam', 'wan', 'wao', 'wap', 'waq', 'war', 'was', 'wat', 'wau', 'wav', 'waw', 'wax', 'way', 'waz', 'wba', 'wbb', 'wbe', 'wbf', 'wbh', 'wbi', 'wbj', 'wbk', 'wbl', 'wbm', 'wbp', 'wbq', 'wbr', 'wbs', 'wbt', 'wbv', 'wbw', 'wca', 'wci', 'wdd', 'wdg', 'wdj', 'wdk', 'wdu', 'wdy', 'wea', 'wec', 'wed', 'weg', 'weh', 'wei', 'wem', 'wen', 'weo', 'wep', 'wer', 'wes', 'wet', 'weu', 'wew', 'wfg', 'wga', 'wgb', 'wgg', 'wgi', 'wgo', 'wgu', 'wgw', 'wgy', 'wha', 'whg', 'whk', 'whu', 'wib', 'wic', 'wie', 'wif', 'wig', 'wih', 'wii', 'wij', 'wik', 'wil', 'wim', 'win', 'wir', 'wit', 'wiu', 'wiv', 'wiw', 'wiy', 'wja', 'wji', 'wka', 'wkb', 'wkd', 'wkl', 'wku', 'wkw', 'wky', 'wla', 'wlc', 'wle', 'wlg', 'wli', 'wlk', 'wll', 'wlm', 'wlo', 'wlr', 'wls', 'wlu', 'wlv', 'wlw', 'wlx', 'wly', 'wma', 'wmb', 'wmc', 'wmd', 'wme', 'wmh', 'wmi', 'wmm', 'wmn', 'wmo', 'wms', 'wmt', 'wmw', 'wmx', 'wnb', 'wnc', 'wnd', 'wne', 'wng', 'wni', 'wnk', 'wnm', 'wnn', 'wno', 'wnp', 'wnu', 'wnw', 'wny', 'woa', 'wob', 'woc', 'wod', 'woe', 'wof', 'wog', 'woi', 'wok', 'wom', 'won', 'woo', 'wor', 'wos', 'wow', 'woy', 'wpc', 'wra', 'wrb', 'wrd', 'wrg', 'wrh', 'wri', 'wrk', 'wrl', 'wrm', 'wrn', 'wro', 'wrp', 'wrr', 'wrs', 'wru', 'wrv', 'wrw', 'wrx', 'wry', 'wrz', 'wsa', 'wsg', 'wsi', 'wsk', 'wsr', 'wss', 'wsu', 'wsv', 'wtf', 'wth', 'wti', 'wtk', 'wtm', 'wtw', 'wua', 'wub', 'wud', 'wuh', 'wul', 'wum', 'wun', 'wur', 'wut', 'wuu', 'wuv', 'wux', 'wuy', 'wwa', 'wwb', 'wwo', 'wwr', 'www', 'wxa', 'wxw', 'wya', 'wyb', 'wyi', 'wym', 'wyr', 'wyy', 'xaa', 'xab', 'xac', 'xad', 'xae', 'xag', 'xai', 'xaj', 'xak', 'xal', 'xam', 'xan', 'xao', 'xap', 'xaq', 'xar', 'xas', 'xat', 'xau', 'xav', 'xaw', 'xay', 'xba', 'xbb', 'xbc', 'xbd', 'xbe', 'xbg', 'xbi', 'xbj', 'xbm', 'xbn', 'xbo', 'xbp', 'xbr', 'xbw', 'xbx', 'xby', 'xcb', 'xcc', 'xce', 'xcg', 'xch', 'xcl', 'xcm', 'xcn', 'xco', 'xcr', 'xct', 'xcu', 'xcv', 'xcw', 'xcy', 'xda', 'xdc', 'xdk', 'xdm', 'xdo', 'xdy', 'xeb', 'xed', 'xeg', 'xel', 'xem', 'xep', 'xer', 'xes', 'xet', 'xeu', 'xfa', 'xga', 'xgb', 'xgd', 'xgf', 'xgg', 'xgi', 'xgl', 'xgm', 'xgn', 'xgr', 'xgu', 'xgw', 'xha', 'xhc', 'xhd', 'xhe', 'xhr', 'xht', 'xhu', 'xhv', 'xia', 'xib', 'xii', 'xil', 'xin', 'xip', 'xir', 'xis', 'xiv', 'xiy', 'xjb', 'xjt', 'xka', 'xkb', 'xkc', 'xkd', 'xke', 'xkf', 'xkg', 'xkh', 'xki', 'xkj', 'xkk', 'xkl', 'xkn', 'xko', 'xkp', 'xkq', 'xkr', 'xks', 'xkt', 'xku', 'xkv', 'xkw', 'xkx', 'xky', 'xkz', 'xla', 'xlb', 'xlc', 'xld', 'xle', 'xlg', 'xli', 'xln', 'xlo', 'xlp', 'xls', 'xlu', 'xly', 'xma', 'xmb', 'xmc', 'xmd', 'xme', 'xmf', 'xmg', 'xmh', 'xmj', 'xmk', 'xml', 'xmm', 'xmn', 'xmo', 'xmp', 'xmq', 'xmr', 'xms', 'xmt', 'xmu', 'xmv', 'xmw', 'xmx', 'xmy', 'xmz', 'xna', 'xnb', 'xnd', 'xng', 'xnh', 'xni', 'xnk', 'xnn', 'xno', 'xnr', 'xns', 'xnt', 'xnu', 'xny', 'xnz', 'xoc', 'xod', 'xog', 'xoi', 'xok', 'xom', 'xon', 'xoo', 'xop', 'xor', 'xow', 'xpa', 'xpc', 'xpe', 'xpg', 'xpi', 'xpj', 'xpk', 'xpm', 'xpn', 'xpo', 'xpp', 'xpq', 'xpr', 'xps', 'xpt', 'xpu', 'xpy', 'xqa', 'xqt', 'xra', 'xrb', 'xrd', 'xre', 'xrg', 'xri', 'xrm', 'xrn', 'xrq', 'xrr', 'xrt', 'xru', 'xrw', 'xsa', 'xsb', 'xsc', 'xsd', 'xse', 'xsh', 'xsi', 'xsj', 'xsl', 'xsm', 'xsn', 'xso', 'xsp', 'xsq', 'xsr', 'xss', 'xsu', 'xsv', 'xsy', 'xta', 'xtb', 'xtc', 'xtd', 'xte', 'xtg', 'xth', 'xti', 'xtj', 'xtl', 'xtm', 'xtn', 'xto', 'xtp', 'xtq', 'xtr', 'xts', 'xtt', 'xtu', 'xtv', 'xtw', 'xty', 'xtz', 'xua', 'xub', 'xud', 'xug', 'xuj', 'xul', 'xum', 'xun', 'xuo', 'xup', 'xur', 'xut', 'xuu', 'xve', 'xvi', 'xvn', 'xvo', 'xvs', 'xwa', 'xwc', 'xwd', 'xwe', 'xwg', 'xwj', 'xwk', 'xwl', 'xwo', 'xwr', 'xwt', 'xww', 'xxb', 'xxk', 'xxm', 'xxr', 'xxt', 'xya', 'xyb', 'xyj', 'xyk', 'xyl', 'xyt', 'xyy', 'xzh', 'xzm', 'xzp', 'yaa', 'yab', 'yac', 'yad', 'yae', 'yaf', 'yag', 'yah', 'yai', 'yaj', 'yak', 'yal', 'yam', 'yan', 'yao', 'yap', 'yaq', 'yar', 'yas', 'yat', 'yau', 'yav', 'yaw', 'yax', 'yay', 'yaz', 'yba', 'ybb', 'ybd', 'ybe', 'ybh', 'ybi', 'ybj', 'ybk', 'ybl', 'ybm', 'ybn', 'ybo', 'ybx', 'yby', 'ych', 'ycl', 'ycn', 'ycp', 'yda', 'ydd', 'yde', 'ydg', 'ydk', 'yds', 'yea', 'yec', 'yee', 'yei', 'yej', 'yel', 'yen', 'yer', 'yes', 'yet', 'yeu', 'yev', 'yey', 'yga', 'ygi', 'ygl', 'ygm', 'ygp', 'ygr', 'ygs', 'ygu', 'ygw', 'yha', 'yhd', 'yhl', 'yhs', 'yia', 'yif', 'yig', 'yih', 'yii', 'yij', 'yik', 'yil', 'yim', 'yin', 'yip', 'yiq', 'yir', 'yis', 'yit', 'yiu', 'yiv', 'yix', 'yiy', 'yiz', 'yka', 'ykg', 'yki', 'ykk', 'ykl', 'ykm', 'ykn', 'yko', 'ykr', 'ykt', 'yku', 'yky', 'yla', 'ylb', 'yle', 'ylg', 'yli', 'yll', 'ylm', 'yln', 'ylo', 'ylr', 'ylu', 'yly', 'yma', 'ymb', 'ymc', 'ymd', 'yme', 'ymg', 'ymh', 'ymi', 'ymk', 'yml', 'ymm', 'ymn', 'ymo', 'ymp', 'ymq', 'ymr', 'yms', 'ymt', 'ymx', 'ymz', 'yna', 'ynd', 'yne', 'yng', 'ynh', 'ynk', 'ynl', 'ynn', 'yno', 'ynq', 'yns', 'ynu', 'yob', 'yog', 'yoi', 'yok', 'yol', 'yom', 'yon', 'yos', 'yot', 'yox', 'yoy', 'ypa', 'ypb', 'ypg', 'yph', 'ypk', 'ypm', 'ypn', 'ypo', 'ypp', 'ypz', 'yra', 'yrb', 'yre', 'yri', 'yrk', 'yrl', 'yrm', 'yrn', 'yro', 'yrs', 'yrw', 'yry', 'ysc', 'ysd', 'ysg', 'ysl', 'ysn', 'yso', 'ysp', 'ysr', 'yss', 'ysy', 'yta', 'ytl', 'ytp', 'ytw', 'yty', 'yua', 'yub', 'yuc', 'yud', 'yue', 'yuf', 'yug', 'yui', 'yuj', 'yuk', 'yul', 'yum', 'yun', 'yup', 'yuq', 'yur', 'yut', 'yuu', 'yuw', 'yux', 'yuy', 'yuz', 'yva', 'yvt', 'ywa', 'ywg', 'ywl', 'ywn', 'ywq', 'ywr', 'ywt', 'ywu', 'yww', 'yxa', 'yxg', 'yxl', 'yxm', 'yxu', 'yxy', 'yyr', 'yyu', 'yyz', 'yzg', 'yzk', 'zaa', 'zab', 'zac', 'zad', 'zae', 'zaf', 'zag', 'zah', 'zai', 'zaj', 'zak', 'zal', 'zam', 'zao', 'zap', 'zaq', 'zar', 'zas', 'zat', 'zau', 'zav', 'zaw', 'zax', 'zay', 'zaz', 'zbc', 'zbe', 'zbl', 'zbt', 'zbw', 'zca', 'zch', 'zdj', 'zea', 'zeg', 'zeh', 'zen', 'zga', 'zgb', 'zgh', 'zgm', 'zgn', 'zgr', 'zhb', 'zhd', 'zhi', 'zhn', 'zhw', 'zhx', 'zia', 'zib', 'zik', 'zil', 'zim', 'zin', 'zir', 'ziw', 'ziz', 'zka', 'zkb', 'zkd', 'zkg', 'zkh', 'zkk', 'zkn', 'zko', 'zkp', 'zkr', 'zkt', 'zku', 'zkv', 'zkz', 'zle', 'zlj', 'zlm', 'zln', 'zlq', 'zls', 'zlw', 'zma', 'zmb', 'zmc', 'zmd', 'zme', 'zmf', 'zmg', 'zmh', 'zmi', 'zmj', 'zmk', 'zml', 'zmm', 'zmn', 'zmo', 'zmp', 'zmq', 'zmr', 'zms', 'zmt', 'zmu', 'zmv', 'zmw', 'zmx', 'zmy', 'zmz', 'zna', 'znd', 'zne', 'zng', 'znk', 'zns', 'zoc', 'zoh', 'zom', 'zoo', 'zoq', 'zor', 'zos', 'zpa', 'zpb', 'zpc', 'zpd', 'zpe', 'zpf', 'zpg', 'zph', 'zpi', 'zpj', 'zpk', 'zpl', 'zpm', 'zpn', 'zpo', 'zpp', 'zpq', 'zpr', 'zps', 'zpt', 'zpu', 'zpv', 'zpw', 'zpx', 'zpy', 'zpz', 'zqe', 'zra', 'zrg', 'zrn', 'zro', 'zrp', 'zrs', 'zsa', 'zsk', 'zsl', 'zsm', 'zsr', 'zsu', 'zte', 'ztg', 'ztl', 'ztm', 'ztn', 'ztp', 'ztq', 'zts', 'ztt', 'ztu', 'ztx', 'zty', 'zua', 'zuh', 'zum', 'zun', 'zuy', 'zwa', 'zxx', 'zyb', 'zyg', 'zyj', 'zyn', 'zyp', 'zza', 'zzj' ];\n      axe.utils.validLangs = function() {\n        'use strict';\n        return langs;\n      };\n      return commons;\n    }()\n  });\n})(typeof window === 'object' ? window : this);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axe-core/axe.js\n// module id = 146\n// module chunks = 35783957827783","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 55\n// module chunks = 35783957827783 55594170186159","import React from 'react';\nimport './Browser.scss';\n\nconst Browser = () => (\n  <div className=\"docs-browser\">\n    <div className=\"docs-browser-body\">\n      <div className=\"docs-browser-page-header\">\n        <div className=\"docs-browser-page-logo\" />\n      </div>\n      <div className=\"docs-browser-page-body\">\n        <div className=\"docs-browser-page-column1\" />\n        <div className=\"docs-browser-page-column2\" />\n      </div>\n    </div>\n  </div>\n);\n\nmodule.exports = Browser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Browser.js","import React from 'react';\nimport Browser from '../components/Browser';\n\nconst IndexPage = () => (\n  <main className=\"docs-masthead\">\n    <div className=\"container-sm\">\n      <div className=\"row justify-content-sm-center\">\n        <Browser />\n        <div className=\"mt-4\">\n          <p className=\"lead text-center\">\n            The Availity UIKit is derived from <a href=\"https://getbootstrap.com/\">Bootstrap 4</a> and allows developers\n            to create stunning web applications for the Availity Spaces platform.{' '}\n          </p>\n          <p className=\"lead text-center\">\n            This guide will document any modifications done to the Bootstrap framework. Original Bootstrap conventions\n            were preserved as much as possible.\n          </p>\n          <p className=\"lead text-center\">\n            The Availity UIKit is available through <a href=\"https://github.com/Availity/availity-uikit\">Github</a>,{' '}\n            <a href=\"https://www.npmjs.com/package/availity-uikit\">NPM</a>.{' '}\n          </p>\n        </div>\n      </div>\n    </div>\n  </main>\n);\n\nconst axe = require('axe-core');\n\ndescribe('Custom component', function() {\n  it('should have no a11y violations', function(done) {\n    let options = {};\n\n    axe.run('.docs-masthead', options, (error, results) => {\n      expect(results.violations.length).toBe(0);\n      done();\n    });\n  });\n});\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query LandingPageQuery {\n    site {\n      siteMetadata {\n        v1\n        v2\n        title\n        description\n        keywords\n        version\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js"],"sourceRoot":""}